const REVISION="121",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,SmoothShading=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,CineonToneMapping=3,ACESFilmicToneMapping=4,CustomToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,CubeUVReflectionMapping=306,CubeUVRefractionMapping=307,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedShort565Type=1019,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,RGBEFormat=1023,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBIntegerFormat=1032,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGB_ETC2_Format=37492,RGBA_ETC2_EAC_Format=37496,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,RGBA_BPTC_Format=36492,SRGB8_ALPHA8_ASTC_4x4_Format=37840,SRGB8_ALPHA8_ASTC_5x4_Format=37841,SRGB8_ALPHA8_ASTC_5x5_Format=37842,SRGB8_ALPHA8_ASTC_6x5_Format=37843,SRGB8_ALPHA8_ASTC_6x6_Format=37844,SRGB8_ALPHA8_ASTC_8x5_Format=37845,SRGB8_ALPHA8_ASTC_8x6_Format=37846,SRGB8_ALPHA8_ASTC_8x8_Format=37847,SRGB8_ALPHA8_ASTC_10x5_Format=37848,SRGB8_ALPHA8_ASTC_10x6_Format=37849,SRGB8_ALPHA8_ASTC_10x8_Format=37850,SRGB8_ALPHA8_ASTC_10x10_Format=37851,SRGB8_ALPHA8_ASTC_12x10_Format=37852,SRGB8_ALPHA8_ASTC_12x12_Format=37853,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,NormalAnimationBlendMode=2500,AdditiveAnimationBlendMode=2501,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,GammaEncoding=3007,RGBEEncoding=3002,LogLuvEncoding=3003,RGBM7Encoding=3004,RGBM16Encoding=3005,RGBDEncoding=3006,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,StreamDrawUsage=35040,StaticReadUsage=35045,DynamicReadUsage=35049,StreamReadUsage=35041,StaticCopyUsage=35046,DynamicCopyUsage=35050,StreamCopyUsage=35042,GLSL1="100",GLSL3="300 es";function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)},removeEventListener:function(e,t){if(void 0===this._listeners)return;const i=this._listeners[e];if(void 0!==i){const e=i.indexOf(t);-1!==e&&i.splice(e,1)}},dispatchEvent:function(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const i=t.slice(0);for(let t=0,n=i.length;t<n;t++)i[t].call(this,e)}}});const _lut=[];for(let e=0;e<256;e++)_lut[e]=(e<16?"0":"")+e.toString(16);let _seed=1234567;const MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(_lut[255&e]+_lut[e>>8&255]+_lut[e>>16&255]+_lut[e>>24&255]+"-"+_lut[255&t]+_lut[t>>8&255]+"-"+_lut[t>>16&15|64]+_lut[t>>24&255]+"-"+_lut[63&i|128]+_lut[i>>8&255]+"-"+_lut[i>>16&255]+_lut[i>>24&255]+_lut[255&n]+_lut[n>>8&255]+_lut[n>>16&255]+_lut[n>>24&255]).toUpperCase()},clamp:function(e,t,i){return Math.max(t,Math.min(i,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,i,n,r){return n+(e-t)*(r-n)/(i-t)},lerp:function(e,t,i){return(1-i)*e+i*t},smoothstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*(3-2*e)},smootherstep:function(e,t,i){return e<=t?0:e>=i?1:(e=(e-t)/(i-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(_seed=e%2147483647),_seed=16807*_seed%2147483647,(_seed-1)/2147483646},degToRad:function(e){return e*MathUtils.DEG2RAD},radToDeg:function(e){return e*MathUtils.RAD2DEG},isPowerOfTwo:function(e){return 0==(e&e-1)&&0!==e},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,i,n,r){const s=Math.cos,o=Math.sin,a=s(i/2),l=o(i/2),c=s((t+n)/2),h=o((t+n)/2),u=s((t-n)/2),d=o((t-n)/2),p=s((n-t)/2),m=o((n-t)/2);switch(r){case"XYX":e.set(a*h,l*u,l*d,a*c);break;case"YZY":e.set(l*d,a*h,l*u,a*c);break;case"ZXZ":e.set(l*u,l*d,a*h,a*c);break;case"XZX":e.set(a*h,l*m,l*p,a*c);break;case"YXY":e.set(l*p,a*h,l*m,a*c);break;case"ZYZ":e.set(l*m,l*p,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class Vector2{constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this}toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*i-s*n+e.x,this.y=r*n+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class Matrix3{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,n,r,s,o,a,l){const c=this.elements;return c[0]=e,c[1]=n,c[2]=o,c[3]=t,c[4]=r,c[5]=a,c[6]=i,c[7]=s,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,s=i[0],o=i[3],a=i[6],l=i[1],c=i[4],h=i[7],u=i[2],d=i[5],p=i[8],m=n[0],f=n[3],g=n[6],y=n[1],v=n[4],b=n[7],_=n[2],x=n[5],w=n[8];return r[0]=s*m+o*y+a*_,r[3]=s*f+o*v+a*x,r[6]=s*g+o*b+a*w,r[1]=l*m+c*y+h*_,r[4]=l*f+c*v+h*x,r[7]=l*g+c*b+h*w,r[2]=u*m+d*y+p*_,r[5]=u*f+d*v+p*x,r[8]=u*g+d*b+p*w,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],r=e[3],s=e[4],o=e[5],a=e[6],l=e[7],c=e[8];return t*s*c-t*o*l-i*r*c+i*o*a+n*r*l-n*s*a}getInverse(e,t){void 0!==t&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const i=e.elements,n=this.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],h=i[6],u=i[7],d=i[8],p=d*l-c*u,m=c*h-d*a,f=u*a-l*h,g=r*p+s*m+o*f;if(0===g)return this.set(0,0,0,0,0,0,0,0,0);const y=1/g;return n[0]=p*y,n[1]=(o*u-d*s)*y,n[2]=(c*s-o*l)*y,n[3]=m*y,n[4]=(d*r-o*h)*y,n[5]=(o*a-c*r)*y,n[6]=f*y,n[7]=(s*h-u*r)*y,n[8]=(l*r-s*a)*y,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).getInverse(this).transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,r,s,o){const a=Math.cos(r),l=Math.sin(r);this.set(i*a,i*l,-i*(a*s+l*o)+s+e,-n*l,n*a,-n*(-l*s+a*o)+o+t,0,0,1)}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),n=this.elements,r=n[0],s=n[3],o=n[6],a=n[1],l=n[4],c=n[7];return n[0]=t*r+i*a,n[3]=t*s+i*l,n[6]=t*o+i*c,n[1]=-i*r+t*a,n[4]=-i*s+t*l,n[7]=-i*o+t*c,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let e=0;e<9;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t){void 0===t&&(t=0);for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}}let _canvas;const ImageUtils={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===_canvas&&(_canvas=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),_canvas.width=e.width,_canvas.height=e.height;const i=_canvas.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=_canvas}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let textureId=0;function Texture(e,t,i,n,r,s,o,a,l,c){Object.defineProperty(this,"id",{value:textureId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.image=void 0!==e?e:Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:Texture.DEFAULT_MAPPING,this.wrapS=void 0!==i?i:1001,this.wrapT=void 0!==n?n:1001,this.magFilter=void 0!==r?r:1006,this.minFilter=void 0!==s?s:1008,this.anisotropy=void 0!==l?l:1,this.format=void 0!==o?o:1023,this.internalFormat=null,this.type=void 0!==a?a:1009,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==c?c:3e3,this.version=0,this.onUpdate=null}Texture.DEFAULT_IMAGE=void 0,Texture.DEFAULT_MAPPING=300,Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const n=this.image;if(void 0===n.uuid&&(n.uuid=MathUtils.generateUUID()),!t&&void 0===e.images[n.uuid]){let t;if(Array.isArray(n)){t=[];for(let e=0,i=n.length;e<i;e++)t.push(ImageUtils.getDataURL(n[e]))}else t=ImageUtils.getDataURL(n);e.images[n.uuid]={uuid:n.uuid,url:t}}i.image=n.uuid}return t||(e.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(Texture.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});class Vector4{constructor(e=0,t=0,i=0,n=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n+s[12]*r,this.y=s[1]*t+s[5]*i+s[9]*n+s[13]*r,this.z=s[2]*t+s[6]*i+s[10]*n+s[14]*r,this.w=s[3]*t+s[7]*i+s[11]*n+s[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,r;const s=.01,o=.1,a=e.elements,l=a[0],c=a[4],h=a[8],u=a[1],d=a[5],p=a[9],m=a[2],f=a[6],g=a[10];if(Math.abs(c-u)<s&&Math.abs(h-m)<s&&Math.abs(p-f)<s){if(Math.abs(c+u)<o&&Math.abs(h+m)<o&&Math.abs(p+f)<o&&Math.abs(l+d+g-3)<o)return this.set(1,0,0,0),this;t=Math.PI;const e=(l+1)/2,a=(d+1)/2,y=(g+1)/2,v=(c+u)/4,b=(h+m)/4,_=(p+f)/4;return e>a&&e>y?e<s?(i=0,n=.707106781,r=.707106781):(i=Math.sqrt(e),n=v/i,r=b/i):a>y?a<s?(i=.707106781,n=0,r=.707106781):(n=Math.sqrt(a),i=v/n,r=_/n):y<s?(i=.707106781,n=.707106781,r=0):(r=Math.sqrt(y),i=b/r,n=_/r),this.set(i,n,r,t),this}let y=Math.sqrt((f-p)*(f-p)+(h-m)*(h-m)+(u-c)*(u-c));return Math.abs(y)<.001&&(y=1),this.x=(f-p)/y,this.y=(h-m)/y,this.z=(u-c)/y,this.w=Math.acos((l+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function WebGLRenderTarget(e,t,i){this.width=e,this.height=t,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t),i=i||{},this.texture=new Texture(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:1006,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function WebGLMultisampleRenderTarget(e,t,i){WebGLRenderTarget.call(this,e,t,i),this.samples=4}WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:!0,setSize:function(e,t){this.width===e&&this.height===t||(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:!0,copy:function(e){return WebGLRenderTarget.prototype.copy.call(this,e),this.samples=e.samples,this}});class Quaternion{constructor(e=0,t=0,i=0,n=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=i,this._w=n}static slerp(e,t,i,n){return i.copy(e).slerp(t,n)}static slerpFlat(e,t,i,n,r,s,o){let a=i[n+0],l=i[n+1],c=i[n+2],h=i[n+3];const u=r[s+0],d=r[s+1],p=r[s+2],m=r[s+3];if(h!==m||a!==u||l!==d||c!==p){let e=1-o;const t=a*u+l*d+c*p+h*m,i=t>=0?1:-1,n=1-t*t;if(n>Number.EPSILON){const r=Math.sqrt(n),s=Math.atan2(r,t*i);e=Math.sin(e*s)/r,o=Math.sin(o*s)/r}const r=o*i;if(a=a*e+u*r,l=l*e+d*r,c=c*e+p*r,h=h*e+m*r,e===1-o){const e=1/Math.sqrt(a*a+l*l+c*c+h*h);a*=e,l*=e,c*=e,h*=e}}e[t]=a,e[t+1]=l,e[t+2]=c,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,n,r,s){const o=i[n],a=i[n+1],l=i[n+2],c=i[n+3],h=r[s],u=r[s+1],d=r[s+2],p=r[s+3];return e[t]=o*p+c*h+a*d-l*u,e[t+1]=a*p+c*u+l*h-o*d,e[t+2]=l*p+c*d+o*u-a*h,e[t+3]=c*p-o*h-a*u-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,n=e._y,r=e._z,s=e._order,o=Math.cos,a=Math.sin,l=o(i/2),c=o(n/2),h=o(r/2),u=a(i/2),d=a(n/2),p=a(r/2);switch(s){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],r=t[8],s=t[1],o=t[5],a=t[9],l=t[2],c=t[6],h=t[10],u=i+o+h;if(u>0){const e=.5/Math.sqrt(u+1);this._w=.25/e,this._x=(c-a)*e,this._y=(r-l)*e,this._z=(s-n)*e}else if(i>o&&i>h){const e=2*Math.sqrt(1+i-o-h);this._w=(c-a)/e,this._x=.25*e,this._y=(n+s)/e,this._z=(r+l)/e}else if(o>h){const e=2*Math.sqrt(1+o-i-h);this._w=(r-l)/e,this._x=(n+s)/e,this._y=.25*e,this._z=(a+c)/e}else{const e=2*Math.sqrt(1+h-i-o);this._w=(s-n)/e,this._x=(r+l)/e,this._y=(a+c)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<1e-6?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(0===i)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,r=e._z,s=e._w,o=t._x,a=t._y,l=t._z,c=t._w;return this._x=i*c+s*o+n*l-r*a,this._y=n*c+s*a+r*o-i*l,this._z=r*c+s*l+i*a-n*o,this._w=s*c-i*o-n*a-r*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const i=this._x,n=this._y,r=this._z,s=this._w;let o=s*e._w+i*e._x+n*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=i,this._y=n,this._z=r,this;const a=1-o*o;if(a<=Number.EPSILON){const e=1-t;return this._w=e*s+t*this._w,this._x=e*i+t*this._x,this._y=e*n+t*this._y,this._z=e*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const l=Math.sqrt(a),c=Math.atan2(l,o),h=Math.sin((1-t)*c)/l,u=Math.sin(t*c)/l;return this._w=s*h+this._w*u,this._x=i*h+this._x*u,this._y=n*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class Vector3{constructor(e=0,t=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(_quaternion.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(_quaternion.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6]*n,this.y=r[1]*t+r[4]*i+r[7]*n,this.z=r[2]*t+r[5]*i+r[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,r=e.elements,s=1/(r[3]*t+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*t+r[4]*i+r[8]*n+r[12])*s,this.y=(r[1]*t+r[5]*i+r[9]*n+r[13])*s,this.z=(r[2]*t+r[6]*i+r[10]*n+r[14])*s,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,r=e.x,s=e.y,o=e.z,a=e.w,l=a*t+s*n-o*i,c=a*i+o*t-r*n,h=a*n+r*i-s*t,u=-r*t-s*i-o*n;return this.x=l*a+u*-r+c*-o-h*-s,this.y=c*a+u*-s+h*-r-l*-o,this.z=h*a+u*-o+l*-s-c*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,r=e.elements;return this.x=r[0]*t+r[4]*i+r[8]*n,this.y=r[1]*t+r[5]*i+r[9]*n,this.z=r[2]*t+r[6]*i+r[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,r=e.z,s=t.x,o=t.y,a=t.z;return this.x=n*a-r*o,this.y=r*s-i*a,this.z=i*o-n*s,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return _vector.copy(this).projectOnVector(e),this.sub(_vector)}reflect(e){return this.sub(_vector.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(MathUtils.clamp(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const _vector=new Vector3,_quaternion=new Quaternion;class Box3{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==e?e:new Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new Vector3(-1/0,-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,n=1/0,r=-1/0,s=-1/0,o=-1/0;for(let a=0,l=e.length;a<l;a+=3){const l=e[a],c=e[a+1],h=e[a+2];l<t&&(t=l),c<i&&(i=c),h<n&&(n=h),l>r&&(r=l),c>s&&(s=c),h>o&&(o=h)}return this.min.set(t,i,n),this.max.set(r,s,o),this}setFromBufferAttribute(e){let t=1/0,i=1/0,n=1/0,r=-1/0,s=-1/0,o=-1/0;for(let a=0,l=e.count;a<l;a++){const l=e.getX(a),c=e.getY(a),h=e.getZ(a);l<t&&(t=l),c<i&&(i=c),h<n&&(n=h),l>r&&(r=l),c>s&&(s=c),h>o&&(o=h)}return this.min.set(t,i,n),this.max.set(r,s,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=_vector$1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),_box.copy(t.boundingBox),_box.applyMatrix4(e.matrixWorld),this.union(_box));const i=e.children;for(let e=0,t=i.length;e<t;e++)this.expandByObject(i[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Vector3),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,_vector$1),_vector$1.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(_center),_extents.subVectors(this.max,_center),_v0.subVectors(e.a,_center),_v1.subVectors(e.b,_center),_v2.subVectors(e.c,_center),_f0.subVectors(_v1,_v0),_f1.subVectors(_v2,_v1),_f2.subVectors(_v0,_v2);let t=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];return!!satForAxes(t,_v0,_v1,_v2,_extents)&&(t=[1,0,0,0,1,0,0,0,1],!!satForAxes(t,_v0,_v1,_v2,_extents)&&(_triangleNormal.crossVectors(_f0,_f1),t=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],satForAxes(t,_v0,_v1,_v2,_extents)))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Vector3),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _vector$1.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(_vector$1).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function satForAxes(e,t,i,n,r){for(let s=0,o=e.length-3;s<=o;s+=3){_testAxis.fromArray(e,s);const o=r.x*Math.abs(_testAxis.x)+r.y*Math.abs(_testAxis.y)+r.z*Math.abs(_testAxis.z),a=t.dot(_testAxis),l=i.dot(_testAxis),c=n.dot(_testAxis);if(Math.max(-Math.max(a,l,c),Math.min(a,l,c))>o)return!1}return!0}const _points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$1=new Vector3,_box=new Box3,_v0=new Vector3,_v1=new Vector3,_v2=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3,_box$1=new Box3;class Sphere{constructor(e,t){this.center=void 0!==e?e:new Vector3,this.radius=void 0!==t?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;void 0!==t?i.copy(t):_box$1.setFromPoints(e).getCenter(i);let n=0;for(let t=0,r=e.length;t<r;t++)n=Math.max(n,i.distanceToSquared(e[t]));return this.radius=Math.sqrt(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new Vector3),t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Box3),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const _vector$2=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal=new Vector3;class Ray{constructor(e,t){this.origin=void 0!==e?e:new Vector3,this.direction=void 0!==t?t:new Vector3(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new Vector3),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,_vector$2)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Vector3),t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=_vector$2.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(_vector$2.copy(this.direction).multiplyScalar(t).add(this.origin),_vector$2.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);const r=.5*e.distanceTo(t),s=-this.direction.dot(_segDir),o=_diff.dot(this.direction),a=-_diff.dot(_segDir),l=_diff.lengthSq(),c=Math.abs(1-s*s);let h,u,d,p;if(c>0)if(h=s*a-o,u=s*o-a,p=r*c,h>=0)if(u>=-p)if(u<=p){const e=1/c;h*=e,u*=e,d=h*(h+s*u+2*o)+u*(s*h+u+2*a)+l}else u=r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;else u=-r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;else u<=-p?(h=Math.max(0,-(-s*r+o)),u=h>0?-r:Math.min(Math.max(-r,-a),r),d=-h*h+u*(u+2*a)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-a),r),d=u*(u+2*a)+l):(h=Math.max(0,-(s*r+o)),u=h>0?r:Math.min(Math.max(-r,-a),r),d=-h*h+u*(u+2*a)+l);else u=s>0?-r:r,h=Math.max(0,-(s*u+o)),d=-h*h+u*(u+2*a)+l;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),n&&n.copy(_segDir).multiplyScalar(u).add(_segCenter),d}intersectSphere(e,t){_vector$2.subVectors(e.center,this.origin);const i=_vector$2.dot(this.direction),n=_vector$2.dot(_vector$2)-i*i,r=e.radius*e.radius;if(n>r)return null;const s=Math.sqrt(r-n),o=i-s,a=i+s;return o<0&&a<0?null:o<0?this.at(a,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(0===t)return!0;return e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,r,s,o,a;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(i=(e.min.x-u.x)*l,n=(e.max.x-u.x)*l):(i=(e.max.x-u.x)*l,n=(e.min.x-u.x)*l),c>=0?(r=(e.min.y-u.y)*c,s=(e.max.y-u.y)*c):(r=(e.max.y-u.y)*c,s=(e.min.y-u.y)*c),i>s||r>n?null:((r>i||i!=i)&&(i=r),(s<n||n!=n)&&(n=s),h>=0?(o=(e.min.z-u.z)*h,a=(e.max.z-u.z)*h):(o=(e.max.z-u.z)*h,a=(e.min.z-u.z)*h),i>a||o>n?null:((o>i||i!=i)&&(i=o),(a<n||n!=n)&&(n=a),n<0?null:this.at(i>=0?i:n,t)))}intersectsBox(e){return null!==this.intersectBox(e,_vector$2)}intersectTriangle(e,t,i,n,r){_edge1.subVectors(t,e),_edge2.subVectors(i,e),_normal.crossVectors(_edge1,_edge2);let s,o=this.direction.dot(_normal);if(o>0){if(n)return null;s=1}else{if(!(o<0))return null;s=-1,o=-o}_diff.subVectors(this.origin,e);const a=s*this.direction.dot(_edge2.crossVectors(_diff,_edge2));if(a<0)return null;const l=s*this.direction.dot(_edge1.cross(_diff));if(l<0)return null;if(a+l>o)return null;const c=-s*_diff.dot(_normal);return c<0?null:this.at(c/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Matrix4{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,n,r,s,o,a,l,c,h,u,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=n,g[1]=r,g[5]=s,g[9]=o,g[13]=a,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Matrix4).fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/_v1$1.setFromMatrixColumn(e,0).length(),r=1/_v1$1.setFromMatrixColumn(e,1).length(),s=1/_v1$1.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*r,t[5]=i[5]*r,t[6]=i[6]*r,t[7]=0,t[8]=i[8]*s,t[9]=i[9]*s,t[10]=i[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,i=e.x,n=e.y,r=e.z,s=Math.cos(i),o=Math.sin(i),a=Math.cos(n),l=Math.sin(n),c=Math.cos(r),h=Math.sin(r);if("XYZ"===e.order){const e=s*c,i=s*h,n=o*c,r=o*h;t[0]=a*c,t[4]=-a*h,t[8]=l,t[1]=i+n*l,t[5]=e-r*l,t[9]=-o*a,t[2]=r-e*l,t[6]=n+i*l,t[10]=s*a}else if("YXZ"===e.order){const e=a*c,i=a*h,n=l*c,r=l*h;t[0]=e+r*o,t[4]=n*o-i,t[8]=s*l,t[1]=s*h,t[5]=s*c,t[9]=-o,t[2]=i*o-n,t[6]=r+e*o,t[10]=s*a}else if("ZXY"===e.order){const e=a*c,i=a*h,n=l*c,r=l*h;t[0]=e-r*o,t[4]=-s*h,t[8]=n+i*o,t[1]=i+n*o,t[5]=s*c,t[9]=r-e*o,t[2]=-s*l,t[6]=o,t[10]=s*a}else if("ZYX"===e.order){const e=s*c,i=s*h,n=o*c,r=o*h;t[0]=a*c,t[4]=n*l-i,t[8]=e*l+r,t[1]=a*h,t[5]=r*l+e,t[9]=i*l-n,t[2]=-l,t[6]=o*a,t[10]=s*a}else if("YZX"===e.order){const e=s*a,i=s*l,n=o*a,r=o*l;t[0]=a*c,t[4]=r-e*h,t[8]=n*h+i,t[1]=h,t[5]=s*c,t[9]=-o*c,t[2]=-l*c,t[6]=i*h+n,t[10]=e-r*h}else if("XZY"===e.order){const e=s*a,i=s*l,n=o*a,r=o*l;t[0]=a*c,t[4]=-h,t[8]=l*c,t[1]=e*h+r,t[5]=s*c,t[9]=i*h-n,t[2]=n*h-i,t[6]=o*c,t[10]=r*h+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(_zero,e,_one)}lookAt(e,t,i){const n=this.elements;return _z.subVectors(e,t),0===_z.lengthSq()&&(_z.z=1),_z.normalize(),_x.crossVectors(i,_z),0===_x.lengthSq()&&(1===Math.abs(i.z)?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(i,_z)),_x.normalize(),_y.crossVectors(_z,_x),n[0]=_x.x,n[4]=_y.x,n[8]=_z.x,n[1]=_x.y,n[5]=_y.y,n[9]=_z.y,n[2]=_x.z,n[6]=_y.z,n[10]=_z.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,r=this.elements,s=i[0],o=i[4],a=i[8],l=i[12],c=i[1],h=i[5],u=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],y=i[3],v=i[7],b=i[11],_=i[15],x=n[0],w=n[4],S=n[8],M=n[12],C=n[1],T=n[5],A=n[9],L=n[13],E=n[2],P=n[6],R=n[10],B=n[14],I=n[3],D=n[7],N=n[11],O=n[15];return r[0]=s*x+o*C+a*E+l*I,r[4]=s*w+o*T+a*P+l*D,r[8]=s*S+o*A+a*R+l*N,r[12]=s*M+o*L+a*B+l*O,r[1]=c*x+h*C+u*E+d*I,r[5]=c*w+h*T+u*P+d*D,r[9]=c*S+h*A+u*R+d*N,r[13]=c*M+h*L+u*B+d*O,r[2]=p*x+m*C+f*E+g*I,r[6]=p*w+m*T+f*P+g*D,r[10]=p*S+m*A+f*R+g*N,r[14]=p*M+m*L+f*B+g*O,r[3]=y*x+v*C+b*E+_*I,r[7]=y*w+v*T+b*P+_*D,r[11]=y*S+v*A+b*R+_*N,r[15]=y*M+v*L+b*B+_*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],r=e[12],s=e[1],o=e[5],a=e[9],l=e[13],c=e[2],h=e[6],u=e[10],d=e[14];return e[3]*(+r*a*h-n*l*h-r*o*u+i*l*u+n*o*d-i*a*d)+e[7]*(+t*a*d-t*l*u+r*s*u-n*s*d+n*l*c-r*a*c)+e[11]*(+t*l*h-t*o*d-r*s*h+i*s*d+r*o*c-i*l*c)+e[15]*(-n*o*c-t*a*h+t*o*u+n*s*h-i*s*u+i*a*c)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}getInverse(e,t){void 0!==t&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const i=this.elements,n=e.elements,r=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],h=n[6],u=n[7],d=n[8],p=n[9],m=n[10],f=n[11],g=n[12],y=n[13],v=n[14],b=n[15],_=p*v*u-y*m*u+y*h*f-c*v*f-p*h*b+c*m*b,x=g*m*u-d*v*u-g*h*f+l*v*f+d*h*b-l*m*b,w=d*y*u-g*p*u+g*c*f-l*y*f-d*c*b+l*p*b,S=g*p*h-d*y*h-g*c*m+l*y*m+d*c*v-l*p*v,M=r*_+s*x+o*w+a*S;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/M;return i[0]=_*C,i[1]=(y*m*a-p*v*a-y*o*f+s*v*f+p*o*b-s*m*b)*C,i[2]=(c*v*a-y*h*a+y*o*u-s*v*u-c*o*b+s*h*b)*C,i[3]=(p*h*a-c*m*a-p*o*u+s*m*u+c*o*f-s*h*f)*C,i[4]=x*C,i[5]=(d*v*a-g*m*a+g*o*f-r*v*f-d*o*b+r*m*b)*C,i[6]=(g*h*a-l*v*a-g*o*u+r*v*u+l*o*b-r*h*b)*C,i[7]=(l*m*a-d*h*a+d*o*u-r*m*u-l*o*f+r*h*f)*C,i[8]=w*C,i[9]=(g*p*a-d*y*a-g*s*f+r*y*f+d*s*b-r*p*b)*C,i[10]=(l*y*a-g*c*a+g*s*u-r*y*u-l*s*b+r*c*b)*C,i[11]=(d*c*a-l*p*a-d*s*u+r*p*u+l*s*f-r*c*f)*C,i[12]=S*C,i[13]=(d*y*o-g*p*o+g*s*m-r*y*m-d*s*v+r*p*v)*C,i[14]=(g*c*o-l*y*o-g*s*h+r*y*h+l*s*v-r*c*v)*C,i[15]=(l*p*o-d*c*o+d*s*h-r*p*h-l*s*m+r*c*m)*C,this}scale(e){const t=this.elements,i=e.x,n=e.y,r=e.z;return t[0]*=i,t[4]*=n,t[8]*=r,t[1]*=i,t[5]*=n,t[9]*=r,t[2]*=i,t[6]*=n,t[10]*=r,t[3]*=i,t[7]*=n,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),r=1-i,s=e.x,o=e.y,a=e.z,l=r*s,c=r*o;return this.set(l*s+i,l*o-n*a,l*a+n*o,0,l*o+n*a,c*o+i,c*a-n*s,0,l*a-n*o,c*a+n*s,r*a*a+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i){return this.set(1,t,i,0,e,1,i,0,e,t,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,r=t._x,s=t._y,o=t._z,a=t._w,l=r+r,c=s+s,h=o+o,u=r*l,d=r*c,p=r*h,m=s*c,f=s*h,g=o*h,y=a*l,v=a*c,b=a*h,_=i.x,x=i.y,w=i.z;return n[0]=(1-(m+g))*_,n[1]=(d+b)*_,n[2]=(p-v)*_,n[3]=0,n[4]=(d-b)*x,n[5]=(1-(u+g))*x,n[6]=(f+y)*x,n[7]=0,n[8]=(p+v)*w,n[9]=(f-y)*w,n[10]=(1-(u+m))*w,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let r=_v1$1.set(n[0],n[1],n[2]).length();const s=_v1$1.set(n[4],n[5],n[6]).length(),o=_v1$1.set(n[8],n[9],n[10]).length();this.determinant()<0&&(r=-r),e.x=n[12],e.y=n[13],e.z=n[14],_m1.copy(this);const a=1/r,l=1/s,c=1/o;return _m1.elements[0]*=a,_m1.elements[1]*=a,_m1.elements[2]*=a,_m1.elements[4]*=l,_m1.elements[5]*=l,_m1.elements[6]*=l,_m1.elements[8]*=c,_m1.elements[9]*=c,_m1.elements[10]*=c,t.setFromRotationMatrix(_m1),i.x=r,i.y=s,i.z=o,this}makePerspective(e,t,i,n,r,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,a=2*r/(t-e),l=2*r/(i-n),c=(t+e)/(t-e),h=(i+n)/(i-n),u=-(s+r)/(s-r),d=-2*s*r/(s-r);return o[0]=a,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=l,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,i,n,r,s){const o=this.elements,a=1/(t-e),l=1/(i-n),c=1/(s-r),h=(t+e)*a,u=(i+n)*l,d=(s+r)*c;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let e=0;e<16;e++)if(t[e]!==i[e])return!1;return!0}fromArray(e,t){void 0===t&&(t=0);for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const _v1$1=new Vector3,_m1=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3;class Euler{constructor(e=0,t=0,i=0,n=Euler.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._order=n||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,i){const n=MathUtils.clamp,r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],h=r[9],u=r[2],d=r[6],p=r[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(n(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-n(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(n(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,p),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(n(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return _matrix.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix,t,i)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return _quaternion$1.setFromEuler(this),this.setFromQuaternion(_quaternion$1,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new Vector3(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Euler.DefaultOrder="XYZ",Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const _matrix=new Matrix4,_quaternion$1=new Quaternion;class Layers{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let _object3DId=0;const _v1$2=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position=new Vector3,_scale=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};function Object3D(){Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DefaultUp.clone();const e=new Vector3,t=new Euler,i=new Quaternion,n=new Vector3(1,1,1);t._onChange((function(){i.setFromEuler(t,!1)})),i._onChange((function(){t.setFromQuaternion(i,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}Object3D.DefaultUp=new Vector3(0,1,0),Object3D.DefaultMatrixAutoUpdate=!0,Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this},rotateOnWorldAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this},rotateX:function(e){return this.rotateOnAxis(_xAxis,e)},rotateY:function(e){return this.rotateOnAxis(_yAxis,e)},rotateZ:function(e){return this.rotateOnAxis(_zAxis,e)},translateOnAxis:function(e,t){return _v1$2.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$2.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(_xAxis,e)},translateY:function(e){return this.translateOnAxis(_yAxis,e)},translateZ:function(e){return this.translateOnAxis(_zAxis,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(_m1$1.getInverse(this.matrixWorld))},lookAt:function(e,t,i){e.isVector3?_target.copy(e):_target.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),_position.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position,_target,this.up):_m1$1.lookAt(_target,_position,this.up),this.quaternion.setFromRotationMatrix(_m1$1),n&&(_m1$1.extractRotation(n.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.inverse()))},add:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(_removedEvent)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),_m1$1.getInverse(this.matrixWorld),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const n=this.children[i].getObjectByProperty(e,t);if(void 0!==n)return n}},getWorldPosition:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new Vector3),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Quaternion),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position,e,_scale),e},getWorldScale:function(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new Vector3),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_position,_quaternion$2,e),e},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new Vector3),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)},traverseVisible:function(e){if(!1===this.visible)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,i=e.length;t<i;t++)e[t].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const n={};function r(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),!1===this.frustumCulled&&(n.frustumCulled=!1),0!==this.renderOrder&&(n.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){n.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const i=t.shapes;if(Array.isArray(i))for(let t=0,n=i.length;t<n;t++){const n=i[t];r(e.shapes,n)}else r(e.shapes,i)}}if(void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let i=0,n=this.material.length;i<n;i++)t.push(r(e.materials,this.material[i]));n.material=t}else n.material=r(e.materials,this.material);if(this.children.length>0){n.children=[];for(let t=0;t<this.children.length;t++)n.children.push(this.children[t].toJSON(e).object)}if(t){const t=s(e.geometries),n=s(e.materials),r=s(e.textures),o=s(e.images),a=s(e.shapes);t.length>0&&(i.geometries=t),n.length>0&&(i.materials=n),r.length>0&&(i.textures=r),o.length>0&&(i.images=o),a.length>0&&(i.shapes=a)}return i.object=n,i;function s(e){const t=[];for(const i in e){const n=e[i];delete n.metadata,t.push(n)}return t}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const i=e.children[t];this.add(i.clone())}return this}});const _vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;class Plane{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==e?e:new Vector3(1,0,0),this.constant=void 0!==t?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=_vector1.subVectors(i,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new Vector3),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new Vector3);const i=e.delta(_vector1),n=this.normal.dot(i);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):void 0;const r=-(e.start.dot(this.normal)+this.constant)/n;return r<0||r>1?void 0:t.copy(i).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new Vector3),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||_normalMatrix.getNormalMatrix(e),n=this.coplanarPoint(_vector1).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const _v0$1=new Vector3,_v1$3=new Vector3,_v2$1=new Vector3,_v3=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;class Triangle{constructor(e,t,i){this.a=void 0!==e?e:new Vector3,this.b=void 0!==t?t:new Vector3,this.c=void 0!==i?i:new Vector3}static getNormal(e,t,i,n){void 0===n&&(console.warn("THREE.Triangle: .getNormal() target is now required"),n=new Vector3),n.subVectors(i,t),_v0$1.subVectors(e,t),n.cross(_v0$1);const r=n.lengthSq();return r>0?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,i,n,r){_v0$1.subVectors(n,t),_v1$3.subVectors(i,t),_v2$1.subVectors(e,t);const s=_v0$1.dot(_v0$1),o=_v0$1.dot(_v1$3),a=_v0$1.dot(_v2$1),l=_v1$3.dot(_v1$3),c=_v1$3.dot(_v2$1),h=s*l-o*o;if(void 0===r&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new Vector3),0===h)return r.set(-2,-1,-1);const u=1/h,d=(l*a-o*c)*u,p=(s*c-o*a)*u;return r.set(1-d-p,p,d)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,_v3),_v3.x>=0&&_v3.y>=0&&_v3.x+_v3.y<=1}static getUV(e,t,i,n,r,s,o,a){return this.getBarycoord(e,t,i,n,_v3),a.set(0,0),a.addScaledVector(r,_v3.x),a.addScaledVector(s,_v3.y),a.addScaledVector(o,_v3.z),a}static isFrontFacing(e,t,i,n){return _v0$1.subVectors(i,t),_v1$3.subVectors(e,t),_v0$1.cross(_v1$3).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),.5*_v0$1.cross(_v1$3).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new Vector3),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Triangle.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Plane),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,n,r){return Triangle.getUV(e,this.a,this.b,this.c,t,i,n,r)}containsPoint(e){return Triangle.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new Vector3);const i=this.a,n=this.b,r=this.c;let s,o;_vab.subVectors(n,i),_vac.subVectors(r,i),_vap.subVectors(e,i);const a=_vab.dot(_vap),l=_vac.dot(_vap);if(a<=0&&l<=0)return t.copy(i);_vbp.subVectors(e,n);const c=_vab.dot(_vbp),h=_vac.dot(_vbp);if(c>=0&&h<=c)return t.copy(n);const u=a*h-c*l;if(u<=0&&a>=0&&c<=0)return s=a/(a-c),t.copy(i).addScaledVector(_vab,s);_vcp.subVectors(e,r);const d=_vab.dot(_vcp),p=_vac.dot(_vcp);if(p>=0&&d<=p)return t.copy(r);const m=d*l-a*p;if(m<=0&&l>=0&&p<=0)return o=l/(l-p),t.copy(i).addScaledVector(_vac,o);const f=c*p-d*h;if(f<=0&&h-c>=0&&d-p>=0)return _vbc.subVectors(r,n),o=(h-c)/(h-c+(d-p)),t.copy(n).addScaledVector(_vbc,o);const g=1/(f+m+u);return s=m*g,o=u*g,t.copy(i).addScaledVector(_vab,s).addScaledVector(_vac,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function hue2rgb(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+6*(t-e)*(2/3-i):e}function SRGBToLinear(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function LinearToSRGB(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Color{constructor(e,t,i){return Object.defineProperty(this,"isColor",{value:!0}),void 0===t&&void 0===i?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,i){return this.r=e,this.g=t,this.b=i,this}setHSL(e,t,i){if(e=MathUtils.euclideanModulo(e,1),t=MathUtils.clamp(t,0,1),i=MathUtils.clamp(i,0,1),0===t)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+t):i+t-i*t,r=2*i-n;this.r=hue2rgb(r,n,e+1/3),this.g=hue2rgb(r,n,e),this.b=hue2rgb(r,n,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let e;const n=i[1],r=i[2];switch(n){case"rgb":case"rgba":if(e=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,t(e[5]),this;if(e=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,t(e[5]),this;break;case"hsl":case"hsla":if(e=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r)){const i=parseFloat(e[1])/360,n=parseInt(e[2],10)/100,r=parseInt(e[3],10)/100;return t(e[5]),this.setHSL(i,n,r)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(e)){const e=i[1],t=e.length;if(3===t)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===t)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=_colorKeywords[e];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t){void 0===t&&(t=2);const i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this}copyLinearToSRGB(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,i=this.g,n=this.b,r=Math.max(t,i,n),s=Math.min(t,i,n);let o,a;const l=(s+r)/2;if(s===r)o=0,a=0;else{const e=r-s;switch(a=l<=.5?e/(r+s):e/(2-r-s),r){case t:o=(i-n)/e+(i<n?6:0);break;case i:o=(n-t)/e+2;break;case n:o=(t-i)/e+4}o/=6}return e.h=o,e.s=a,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,i){return this.getHSL(_hslA),_hslA.h+=e,_hslA.s+=t,_hslA.l+=i,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpHSL(e,t){this.getHSL(_hslA),e.getHSL(_hslB);const i=MathUtils.lerp(_hslA.h,_hslB.h,t),n=MathUtils.lerp(_hslA.s,_hslB.s,t),r=MathUtils.lerp(_hslA.l,_hslB.l,t);return this.setHSL(i,n,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Color.NAMES=_colorKeywords,Color.prototype.r=1,Color.prototype.g=1,Color.prototype.b=1;class Face3{constructor(e,t,i,n,r,s){this.a=e,this.b=t,this.c=i,this.normal=n&&n.isVector3?n:new Vector3,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new Color,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==s?s:0}clone(){return(new this.constructor).copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,i=e.vertexNormals.length;t<i;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,i=e.vertexColors.length;t<i;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let materialId=0;function Material(){Object.defineProperty(this,"id",{value:materialId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function MeshBasicMaterial(e){Material.call(this),this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const t in e){const i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;continue}const n=this[t];void 0!==n?n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}},toJSON:function(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){const t=[];for(const i in e){const n=e[i];delete n.metadata,t.push(n)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(i.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,i.reflectivity=this.reflectivity,i.refractionRatio=this.refractionRatio,void 0!==this.combine&&(i.combine=this.combine),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(i.size=this.size),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),!0===this.flatShading&&(i.flatShading=this.flatShading),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(i.morphTargets=!0),!0===this.morphNormals&&(i.morphNormals=!0),!0===this.skinning&&(i.skinning=!0),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t){const t=n(e.textures),r=n(e.images);t.length>0&&(i.textures=t),r.length>0&&(i.images=r)}return i},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(null!==t){const e=t.length;i=new Array(e);for(let n=0;n!==e;++n)i[n]=t[n].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Material.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),MeshBasicMaterial.prototype=Object.create(Material.prototype),MeshBasicMaterial.prototype.constructor=MeshBasicMaterial,MeshBasicMaterial.prototype.isMeshBasicMaterial=!0,MeshBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const _vector$3=new Vector3,_vector2$1=new Vector2;function BufferAttribute(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}function Int8BufferAttribute(e,t,i){BufferAttribute.call(this,new Int8Array(e),t,i)}function Uint8BufferAttribute(e,t,i){BufferAttribute.call(this,new Uint8Array(e),t,i)}function Uint8ClampedBufferAttribute(e,t,i){BufferAttribute.call(this,new Uint8ClampedArray(e),t,i)}function Int16BufferAttribute(e,t,i){BufferAttribute.call(this,new Int16Array(e),t,i)}function Uint16BufferAttribute(e,t,i){BufferAttribute.call(this,new Uint16Array(e),t,i)}function Int32BufferAttribute(e,t,i){BufferAttribute.call(this,new Int32Array(e),t,i)}function Uint32BufferAttribute(e,t,i){BufferAttribute.call(this,new Uint32Array(e),t,i)}function Float32BufferAttribute(e,t,i){BufferAttribute.call(this,new Float32Array(e),t,i)}function Float64BufferAttribute(e,t,i){BufferAttribute.call(this,new Float64Array(e),t,i)}Object.defineProperty(BufferAttribute.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(BufferAttribute.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,r=this.itemSize;n<r;n++)this.array[e+n]=t.array[i+n];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let i=0;for(let n=0,r=e.length;n<r;n++){let r=e[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),r=new Color),t[i++]=r.r,t[i++]=r.g,t[i++]=r.b}return this},copyVector2sArray:function(e){const t=this.array;let i=0;for(let n=0,r=e.length;n<r;n++){let r=e[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),r=new Vector2),t[i++]=r.x,t[i++]=r.y}return this},copyVector3sArray:function(e){const t=this.array;let i=0;for(let n=0,r=e.length;n<r;n++){let r=e[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),r=new Vector3),t[i++]=r.x,t[i++]=r.y,t[i++]=r.z}return this},copyVector4sArray:function(e){const t=this.array;let i=0;for(let n=0,r=e.length;n<r;n++){let r=e[n];void 0===r&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),r=new Vector4),t[i++]=r.x,t[i++]=r.y,t[i++]=r.z,t[i++]=r.w}return this},applyMatrix3:function(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)_vector2$1.fromBufferAttribute(this,t),_vector2$1.applyMatrix3(e),this.setXY(t,_vector2$1.x,_vector2$1.y);else if(3===this.itemSize)for(let t=0,i=this.count;t<i;t++)_vector$3.fromBufferAttribute(this,t),_vector$3.applyMatrix3(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyMatrix4:function(e){for(let t=0,i=this.count;t<i;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyMatrix4(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyNormalMatrix:function(e){for(let t=0,i=this.count;t<i;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyNormalMatrix(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},transformDirection:function(e){for(let t=0,i=this.count;t<i;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.transformDirection(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this},setXYZ:function(e,t,i,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this},setXYZW:function(e,t,i,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int8BufferAttribute.prototype.constructor=Int8BufferAttribute,Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute,Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute,Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int16BufferAttribute.prototype.constructor=Int16BufferAttribute,Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute,Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int32BufferAttribute.prototype.constructor=Int32BufferAttribute,Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute,Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float32BufferAttribute.prototype.constructor=Float32BufferAttribute,Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;class DirectGeometry{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const t=[];let i,n,r;const s=e.faces;for(n=0;n<s.length;n++){const e=s[n];e.materialIndex!==r&&(r=e.materialIndex,void 0!==i&&(i.count=3*n-i.start,t.push(i)),i={start:3*n,materialIndex:r})}void 0!==i&&(i.count=3*n-i.start,t.push(i)),this.groups=t}fromGeometry(e){const t=e.faces,i=e.vertices,n=e.faceVertexUvs,r=n[0]&&n[0].length>0,s=n[1]&&n[1].length>0,o=e.morphTargets,a=o.length;let l;if(a>0){l=[];for(let e=0;e<a;e++)l[e]={name:o[e].name,data:[]};this.morphTargets.position=l}const c=e.morphNormals,h=c.length;let u;if(h>0){u=[];for(let e=0;e<h;e++)u[e]={name:c[e].name,data:[]};this.morphTargets.normal=u}const d=e.skinIndices,p=e.skinWeights,m=d.length===i.length,f=p.length===i.length;i.length>0&&0===t.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let e=0;e<t.length;e++){const g=t[e];this.vertices.push(i[g.a],i[g.b],i[g.c]);const y=g.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{const e=g.normal;this.normals.push(e,e,e)}const v=g.vertexColors;if(3===v.length)this.colors.push(v[0],v[1],v[2]);else{const e=g.color;this.colors.push(e,e,e)}if(!0===r){const t=n[0][e];void 0!==t?this.uvs.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",e),this.uvs.push(new Vector2,new Vector2,new Vector2))}if(!0===s){const t=n[1][e];void 0!==t?this.uvs2.push(t[0],t[1],t[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",e),this.uvs2.push(new Vector2,new Vector2,new Vector2))}for(let e=0;e<a;e++){const t=o[e].vertices;l[e].data.push(t[g.a],t[g.b],t[g.c])}for(let t=0;t<h;t++){const i=c[t].vertexNormals[e];u[t].data.push(i.a,i.b,i.c)}m&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),f&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this}}function arrayMax(e){if(0===e.length)return-1/0;let t=e[0];for(let i=1,n=e.length;i<n;++i)e[i]>t&&(t=e[i]);return t}let _bufferGeometryId=1;const _m1$2=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$2=new Box3,_boxMorphTargets=new Box3,_vector$4=new Vector3;function BufferGeometry(){Object.defineProperty(this,"id",{value:_bufferGeometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){return Array.isArray(e)?this.index=new(arrayMax(e)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e,this},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,i){this.groups.push({start:e,count:t,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const t=(new Matrix3).getNormalMatrix(e);i.applyNormalMatrix(t),i.needsUpdate=!0}const n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(e){return _m1$2.makeRotationX(e),this.applyMatrix4(_m1$2),this},rotateY:function(e){return _m1$2.makeRotationY(e),this.applyMatrix4(_m1$2),this},rotateZ:function(e){return _m1$2.makeRotationZ(e),this.applyMatrix4(_m1$2),this},translate:function(e,t,i){return _m1$2.makeTranslation(e,t,i),this.applyMatrix4(_m1$2),this},scale:function(e,t,i){return _m1$2.makeScale(e,t,i),this.applyMatrix4(_m1$2),this},lookAt:function(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const e=new Float32BufferAttribute(3*t.vertices.length,3),i=new Float32BufferAttribute(3*t.colors.length,3);if(this.setAttribute("position",e.copyVector3sArray(t.vertices)),this.setAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const e=new Float32BufferAttribute(t.lineDistances.length,1);this.setAttribute("lineDistance",e.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let i=0,n=e.length;i<n;i++){const n=e[i];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Float32BufferAttribute(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let e=t.__directGeometry;if(!0===t.elementsNeedUpdate&&(e=void 0,t.elementsNeedUpdate=!1),void 0===e)return this.fromGeometry(t);e.verticesNeedUpdate=t.verticesNeedUpdate,e.normalsNeedUpdate=t.normalsNeedUpdate,e.colorsNeedUpdate=t.colorsNeedUpdate,e.uvsNeedUpdate=t.uvsNeedUpdate,e.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=e}if(!0===t.verticesNeedUpdate){const e=this.attributes.position;void 0!==e&&(e.copyVector3sArray(t.vertices),e.needsUpdate=!0),t.verticesNeedUpdate=!1}if(!0===t.normalsNeedUpdate){const e=this.attributes.normal;void 0!==e&&(e.copyVector3sArray(t.normals),e.needsUpdate=!0),t.normalsNeedUpdate=!1}if(!0===t.colorsNeedUpdate){const e=this.attributes.color;void 0!==e&&(e.copyColorsArray(t.colors),e.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const e=this.attributes.uv;void 0!==e&&(e.copyVector2sArray(t.uvs),e.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const e=this.attributes.lineDistance;void 0!==e&&(e.copyArray(t.lineDistances),e.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(3*e.vertices.length);if(this.setAttribute("position",new BufferAttribute(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const t=new Float32Array(3*e.normals.length);this.setAttribute("normal",new BufferAttribute(t,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const t=new Float32Array(3*e.colors.length);this.setAttribute("color",new BufferAttribute(t,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const t=new Float32Array(2*e.uvs.length);this.setAttribute("uv",new BufferAttribute(t,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const t=new Float32Array(2*e.uvs2.length);this.setAttribute("uv2",new BufferAttribute(t,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const t in e.morphTargets){const i=[],n=e.morphTargets[t];for(let e=0,t=n.length;e<t;e++){const t=n[e],r=new Float32BufferAttribute(3*t.data.length,3);r.name=t.name,i.push(r.copyVector3sArray(t.data))}this.morphAttributes[t]=i}if(e.skinIndices.length>0){const t=new Float32BufferAttribute(4*e.skinIndices.length,4);this.setAttribute("skinIndex",t.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const t=new Float32BufferAttribute(4*e.skinWeights.length,4);this.setAttribute("skinWeight",t.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Vector3(-1/0,-1/0,-1/0),new Vector3(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){const i=t[e];_box$2.setFromBufferAttribute(i),this.morphTargetsRelative?(_vector$4.addVectors(this.boundingBox.min,_box$2.min),this.boundingBox.expandByPoint(_vector$4),_vector$4.addVectors(this.boundingBox.max,_box$2.max),this.boundingBox.expandByPoint(_vector$4)):(this.boundingBox.expandByPoint(_box$2.min),this.boundingBox.expandByPoint(_box$2.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Vector3,1/0);if(e){const i=this.boundingSphere.center;if(_box$2.setFromBufferAttribute(e),t)for(let e=0,i=t.length;e<i;e++){const i=t[e];_boxMorphTargets.setFromBufferAttribute(i),this.morphTargetsRelative?(_vector$4.addVectors(_box$2.min,_boxMorphTargets.min),_box$2.expandByPoint(_vector$4),_vector$4.addVectors(_box$2.max,_boxMorphTargets.max),_box$2.expandByPoint(_vector$4)):(_box$2.expandByPoint(_boxMorphTargets.min),_box$2.expandByPoint(_boxMorphTargets.max))}_box$2.getCenter(i);let n=0;for(let t=0,r=e.count;t<r;t++)_vector$4.fromBufferAttribute(e,t),n=Math.max(n,i.distanceToSquared(_vector$4));if(t)for(let r=0,s=t.length;r<s;r++){const s=t[r],o=this.morphTargetsRelative;for(let t=0,r=s.count;t<r;t++)_vector$4.fromBufferAttribute(s,t),o&&(_offset.fromBufferAttribute(e,t),_vector$4.add(_offset)),n=Math.max(n,i.distanceToSquared(_vector$4))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new BufferAttribute(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let e=0,t=i.count;e<t;e++)i.setXYZ(e,0,0,0);const n=new Vector3,r=new Vector3,s=new Vector3,o=new Vector3,a=new Vector3,l=new Vector3,c=new Vector3,h=new Vector3;if(e)for(let u=0,d=e.count;u<d;u+=3){const d=e.getX(u+0),p=e.getX(u+1),m=e.getX(u+2);n.fromBufferAttribute(t,d),r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,m),c.subVectors(s,r),h.subVectors(n,r),c.cross(h),o.fromBufferAttribute(i,d),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),o.add(c),a.add(c),l.add(c),i.setXYZ(d,o.x,o.y,o.z),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(m,l.x,l.y,l.z)}else for(let e=0,o=t.count;e<o;e+=3)n.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),s.fromBufferAttribute(t,e+2),c.subVectors(s,r),h.subVectors(n,r),c.cross(h),i.setXYZ(e+0,c.x,c.y,c.z),i.setXYZ(e+1,c.x,c.y,c.z),i.setXYZ(e+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const n in i){if(void 0===e.attributes[n])continue;const r=i[n].array,s=e.attributes[n],o=s.array,a=s.itemSize*t,l=Math.min(o.length,r.length-a);for(let e=0,t=a;e<l;e++,t++)r[t]=o[e]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)_vector$4.fromBufferAttribute(e,t),_vector$4.normalize(),e.setXYZ(t,_vector$4.x,_vector$4.y,_vector$4.z)},toNonIndexed:function(){function e(e,t){const i=e.array,n=e.itemSize,r=e.normalized,s=new i.constructor(t.length*n);let o=0,a=0;for(let e=0,r=t.length;e<r;e++){o=t[e]*n;for(let e=0;e<n;e++)s[a++]=i[o++]}return new BufferAttribute(s,n,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new BufferGeometry,i=this.index.array,n=this.attributes;for(const r in n){const s=e(n[r],i);t.setAttribute(r,s)}const r=this.morphAttributes;for(const n in r){const s=[],o=r[n];for(let t=0,n=o.length;t<n;t++){const n=e(o[t],i);s.push(n)}t.morphAttributes[n]=s}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let e=0,i=s.length;e<i;e++){const i=s[e];t.addGroup(i.start,i.count,i.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const t in i){const n=i[t],r=n.toJSON(e.data);""!==n.name&&(r.name=n.name),e.data.attributes[t]=r}const n={};let r=!1;for(const t in this.morphAttributes){const i=this.morphAttributes[t],s=[];for(let t=0,n=i.length;t<n;t++){const n=i[t],r=n.toJSON(e.data);""!==n.name&&(r.name=n.name),s.push(r)}s.length>0&&(n[t]=s,r=!0)}r&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return null!==o&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e},clone:function(){return(new BufferGeometry).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;null!==i&&this.setIndex(i.clone(t));const n=e.attributes;for(const e in n){const i=n[e];this.setAttribute(e,i.clone(t))}const r=e.morphAttributes;for(const e in r){const i=[],n=r[e];for(let e=0,r=n.length;e<r;e++)i.push(n[e].clone(t));this.morphAttributes[e]=i}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let e=0,t=s.length;e<t;e++){const t=s[e];this.addGroup(t.start,t.count,t.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const a=e.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const _inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_tempA=new Vector3,_tempB=new Vector3,_tempC=new Vector3,_morphA=new Vector3,_morphB=new Vector3,_morphC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;function Mesh(e,t){Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new MeshBasicMaterial,this.updateMorphTargets()}function checkIntersection(e,t,i,n,r,s,o,a){let l;if(l=1===t.side?n.intersectTriangle(o,s,r,!0,a):n.intersectTriangle(r,s,o,2!==t.side,a),null===l)return null;_intersectionPointWorld.copy(a),_intersectionPointWorld.applyMatrix4(e.matrixWorld);const c=i.ray.origin.distanceTo(_intersectionPointWorld);return c<i.near||c>i.far?null:{distance:c,point:_intersectionPointWorld.clone(),object:e}}function checkBufferGeometryIntersection(e,t,i,n,r,s,o,a,l,c,h,u){_vA.fromBufferAttribute(r,c),_vB.fromBufferAttribute(r,h),_vC.fromBufferAttribute(r,u);const d=e.morphTargetInfluences;if(t.morphTargets&&s&&d){_morphA.set(0,0,0),_morphB.set(0,0,0),_morphC.set(0,0,0);for(let e=0,t=s.length;e<t;e++){const t=d[e],i=s[e];0!==t&&(_tempA.fromBufferAttribute(i,c),_tempB.fromBufferAttribute(i,h),_tempC.fromBufferAttribute(i,u),o?(_morphA.addScaledVector(_tempA,t),_morphB.addScaledVector(_tempB,t),_morphC.addScaledVector(_tempC,t)):(_morphA.addScaledVector(_tempA.sub(_vA),t),_morphB.addScaledVector(_tempB.sub(_vB),t),_morphC.addScaledVector(_tempC.sub(_vC),t)))}_vA.add(_morphA),_vB.add(_morphB),_vC.add(_morphC)}e.isSkinnedMesh&&(e.boneTransform(c,_vA),e.boneTransform(h,_vB),e.boneTransform(u,_vC));const p=checkIntersection(e,t,i,n,_vA,_vB,_vC,_intersectionPoint);if(p){a&&(_uvA.fromBufferAttribute(a,c),_uvB.fromBufferAttribute(a,h),_uvC.fromBufferAttribute(a,u),p.uv=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2)),l&&(_uvA.fromBufferAttribute(l,c),_uvB.fromBufferAttribute(l,h),_uvC.fromBufferAttribute(l,u),p.uv2=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2));const e=new Face3(c,h,u);Triangle.getNormal(_vA,_vB,_vC,e.normal),p.face=e}return p}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const i=this.geometry,n=this.material,r=this.matrixWorld;if(void 0===n)return;if(null===i.boundingSphere&&i.computeBoundingSphere(),_sphere.copy(i.boundingSphere),_sphere.applyMatrix4(r),!1===e.ray.intersectsSphere(_sphere))return;if(_inverseMatrix.getInverse(r),_ray.copy(e.ray).applyMatrix4(_inverseMatrix),null!==i.boundingBox&&!1===_ray.intersectsBox(i.boundingBox))return;let s;if(i.isBufferGeometry){const r=i.index,o=i.attributes.position,a=i.morphAttributes.position,l=i.morphTargetsRelative,c=i.attributes.uv,h=i.attributes.uv2,u=i.groups,d=i.drawRange;if(null!==r)if(Array.isArray(n))for(let i=0,p=u.length;i<p;i++){const p=u[i],m=n[p.materialIndex];for(let i=Math.max(p.start,d.start),n=Math.min(p.start+p.count,d.start+d.count);i<n;i+=3){const n=r.getX(i),u=r.getX(i+1),d=r.getX(i+2);s=checkBufferGeometryIntersection(this,m,e,_ray,o,a,l,c,h,n,u,d),s&&(s.faceIndex=Math.floor(i/3),s.face.materialIndex=p.materialIndex,t.push(s))}}else{for(let i=Math.max(0,d.start),u=Math.min(r.count,d.start+d.count);i<u;i+=3){const u=r.getX(i),d=r.getX(i+1),p=r.getX(i+2);s=checkBufferGeometryIntersection(this,n,e,_ray,o,a,l,c,h,u,d,p),s&&(s.faceIndex=Math.floor(i/3),t.push(s))}}else if(void 0!==o)if(Array.isArray(n))for(let i=0,r=u.length;i<r;i++){const r=u[i],p=n[r.materialIndex];for(let i=Math.max(r.start,d.start),n=Math.min(r.start+r.count,d.start+d.count);i<n;i+=3){s=checkBufferGeometryIntersection(this,p,e,_ray,o,a,l,c,h,i,i+1,i+2),s&&(s.faceIndex=Math.floor(i/3),s.face.materialIndex=r.materialIndex,t.push(s))}}else{for(let i=Math.max(0,d.start),r=Math.min(o.count,d.start+d.count);i<r;i+=3){s=checkBufferGeometryIntersection(this,n,e,_ray,o,a,l,c,h,i,i+1,i+2),s&&(s.faceIndex=Math.floor(i/3),t.push(s))}}}else if(i.isGeometry){const r=Array.isArray(n),o=i.vertices,a=i.faces;let l;const c=i.faceVertexUvs[0];c.length>0&&(l=c);for(let i=0,c=a.length;i<c;i++){const c=a[i],h=r?n[c.materialIndex]:n;if(void 0===h)continue;const u=o[c.a],d=o[c.b],p=o[c.c];if(s=checkIntersection(this,h,e,_ray,u,d,p,_intersectionPoint),s){if(l&&l[i]){const e=l[i];_uvA.copy(e[0]),_uvB.copy(e[1]),_uvC.copy(e[2]),s.uv=Triangle.getUV(_intersectionPoint,u,d,p,_uvA,_uvB,_uvC,new Vector2)}s.face=c,s.faceIndex=i,t.push(s)}}}}});class BoxBufferGeometry extends BufferGeometry{constructor(e=1,t=1,i=1,n=1,r=1,s=1){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:s};const o=this;n=Math.floor(n),r=Math.floor(r),s=Math.floor(s);const a=[],l=[],c=[],h=[];let u=0,d=0;function p(e,t,i,n,r,s,p,m,f,g,y){const v=s/f,b=p/g,_=s/2,x=p/2,w=m/2,S=f+1,M=g+1;let C=0,T=0;const A=new Vector3;for(let s=0;s<M;s++){const o=s*b-x;for(let a=0;a<S;a++){const u=a*v-_;A[e]=u*n,A[t]=o*r,A[i]=w,l.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[i]=m>0?1:-1,c.push(A.x,A.y,A.z),h.push(a/f),h.push(1-s/g),C+=1}}for(let e=0;e<g;e++)for(let t=0;t<f;t++){const i=u+t+S*e,n=u+t+S*(e+1),r=u+(t+1)+S*(e+1),s=u+(t+1)+S*e;a.push(i,n,s),a.push(n,r,s),T+=6}o.addGroup(d,T,y),d+=T,u+=C}p("z","y","x",-1,-1,i,t,e,s,r,0),p("z","y","x",1,-1,i,t,-e,s,r,1),p("x","z","y",1,1,e,i,t,n,s,2),p("x","z","y",1,-1,e,i,-t,n,s,3),p("x","y","z",1,-1,e,t,i,n,r,4),p("x","y","z",-1,-1,e,t,-i,n,r,5),this.setIndex(a),this.setAttribute("position",new Float32BufferAttribute(l,3)),this.setAttribute("normal",new Float32BufferAttribute(c,3)),this.setAttribute("uv",new Float32BufferAttribute(h,2))}}function cloneUniforms(e){const t={};for(const i in e){t[i]={};for(const n in e[i]){const r=e[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[i][n]=r.clone():Array.isArray(r)?t[i][n]=r.slice():t[i][n]=r}}return t}function mergeUniforms(e){const t={};for(let i=0;i<e.length;i++){const n=cloneUniforms(e[i]);for(const e in n)t[e]=n[e]}return t}const UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",default_fragment="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";function ShaderMaterial(e){Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}function Camera(){Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}function PerspectiveCamera(e,t,i,n){Camera.call(this),this.type="PerspectiveCamera",this.fov=void 0!==e?e:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==t?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}ShaderMaterial.prototype=Object.create(Material.prototype),ShaderMaterial.prototype.constructor=ShaderMaterial,ShaderMaterial.prototype.isShaderMaterial=!0,ShaderMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this},ShaderMaterial.prototype.toJSON=function(e){const t=Material.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?t.uniforms[i]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[i]={type:"m4",value:n.toArray()}:t.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const e in this.extensions)!0===this.extensions[e]&&(i[e]=!0);return Object.keys(i).length>0&&(t.extensions=i),t},Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new Vector3),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){Object3D.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=2*MathUtils.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(.5*MathUtils.DEG2RAD*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return 2*MathUtils.RAD2DEG*Math.atan(Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,i,n,r,s){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom,i=2*t,n=this.aspect*i,r=-.5*n;const s=this.view;if(null!==this.view&&this.view.enabled){const e=s.fullWidth,o=s.fullHeight;r+=s.offsetX*n/e,t-=s.offsetY*i/o,n*=s.width/e,i*=s.height/o}const o=this.filmOffset;0!==o&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,t,t-i,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const fov=90,aspect=1;function CubeCamera(e,t,i){if(Object3D.call(this),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=i;const n=new PerspectiveCamera(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Vector3(1,0,0)),this.add(n);const r=new PerspectiveCamera(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new Vector3(-1,0,0)),this.add(r);const s=new PerspectiveCamera(90,1,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new Vector3(0,1,0)),this.add(s);const o=new PerspectiveCamera(90,1,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new Vector3(0,-1,0)),this.add(o);const a=new PerspectiveCamera(90,1,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new Vector3(0,0,1)),this.add(a);const l=new PerspectiveCamera(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new Vector3(0,0,-1)),this.add(l),this.update=function(e,t){null===this.parent&&this.updateMatrixWorld();const c=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;const u=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,n),e.setRenderTarget(i,1),e.render(t,r),e.setRenderTarget(i,2),e.render(t,s),e.setRenderTarget(i,3),e.render(t,o),e.setRenderTarget(i,4),e.render(t,a),i.texture.generateMipmaps=u,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(h),e.xr.enabled=c},this.clear=function(e,t,n,r){const s=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(i,s),e.clear(t,n,r);e.setRenderTarget(s)}}function CubeTexture(e,t,i,n,r,s,o,a,l,c){e=void 0!==e?e:[],t=void 0!==t?t:301,o=void 0!==o?o:1022,Texture.call(this,e,t,i,n,r,s,o,a,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}function WebGLCubeRenderTarget(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i),WebGLRenderTarget.call(this,e,e,t),t=t||{},this.texture=new CubeTexture(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture._needsFlipEnvMap=!1}function DataTexture(e,t,i,n,r,s,o,a,l,c,h,u){Texture.call(this,null,s,o,a,l,c,n,r,h,u),this.image={data:e||null,width:t||1,height:i||1},this.magFilter=void 0!==l?l:1003,this.minFilter=void 0!==c?c:1003,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}CubeCamera.prototype=Object.create(Object3D.prototype),CubeCamera.prototype.constructor=CubeCamera,CubeTexture.prototype=Object.create(Texture.prototype),CubeTexture.prototype.constructor=CubeTexture,CubeTexture.prototype.isCubeTexture=!0,Object.defineProperty(CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),WebGLCubeRenderTarget.prototype=Object.create(WebGLRenderTarget.prototype),WebGLCubeRenderTarget.prototype.constructor=WebGLCubeRenderTarget,WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=!0,WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=1023,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",fragmentShader:"\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t"},n=new BoxBufferGeometry(5,5,5),r=new ShaderMaterial({name:"CubemapFromEquirect",uniforms:cloneUniforms(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});r.uniforms.tEquirect.value=t;const s=new Mesh(n,r),o=t.minFilter;1008===t.minFilter&&(t.minFilter=1006);return new CubeCamera(1,10,this).update(e,s),t.minFilter=o,s.geometry.dispose(),s.material.dispose(),this},DataTexture.prototype=Object.create(Texture.prototype),DataTexture.prototype.constructor=DataTexture,DataTexture.prototype.isDataTexture=!0;const _sphere$1=new Sphere,_vector$5=new Vector3;class Frustum{constructor(e,t,i,n,r,s){this.planes=[void 0!==e?e:new Plane,void 0!==t?t:new Plane,void 0!==i?i:new Plane,void 0!==n?n:new Plane,void 0!==r?r:new Plane,void 0!==s?s:new Plane]}set(e,t,i,n,r,s){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(i),o[3].copy(n),o[4].copy(r),o[5].copy(s),this}clone(){return(new this.constructor).copy(this)}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,n=i[0],r=i[1],s=i[2],o=i[3],a=i[4],l=i[5],c=i[6],h=i[7],u=i[8],d=i[9],p=i[10],m=i[11],f=i[12],g=i[13],y=i[14],v=i[15];return t[0].setComponents(o-n,h-a,m-u,v-f).normalize(),t[1].setComponents(o+n,h+a,m+u,v+f).normalize(),t[2].setComponents(o+r,h+l,m+d,v+g).normalize(),t[3].setComponents(o-r,h-l,m-d,v-g).normalize(),t[4].setComponents(o-s,h-c,m-p,v-y).normalize(),t[5].setComponents(o+s,h+c,m+p,v+y).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),_sphere$1.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)}intersectsSprite(e){return _sphere$1.center.set(0,0,0),_sphere$1.radius=.7071067811865476,_sphere$1.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let e=0;e<6;e++){if(t[e].distanceToPoint(i)<n)return!1}return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(_vector$5.x=n.normal.x>0?e.max.x:e.min.x,_vector$5.y=n.normal.y>0?e.max.y:e.min.y,_vector$5.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(_vector$5)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}}function WebGLAnimation(){let e=null,t=!1,i=null,n=null;function r(t,s){i(t,s),n=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==i&&(n=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function WebGLAttributes(e,t){const i=t.isWebGL2,n=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const i=n.get(t);i&&(e.deleteBuffer(i.buffer),n.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){var s=n.get(t);return void((!s||s.version<t.version)&&n.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const o=n.get(t);void 0===o?n.set(t,function(t,i){const n=t.array,r=t.usage,s=e.createBuffer();e.bindBuffer(i,s),e.bufferData(i,n,r),t.onUploadCallback();let o=5126;return n instanceof Float32Array?o=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?o=5123:n instanceof Int16Array?o=5122:n instanceof Uint32Array?o=5125:n instanceof Int32Array?o=5124:n instanceof Int8Array?o=5120:n instanceof Uint8Array&&(o=5121),{buffer:s,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:t.version}}(t,r)):o.version<t.version&&(!function(t,n,r){const s=n.array,o=n.updateRange;e.bindBuffer(r,t),-1===o.count?e.bufferSubData(r,0,s):(i?e.bufferSubData(r,o.offset*s.BYTES_PER_ELEMENT,s,o.offset,o.count):e.bufferSubData(r,o.offset*s.BYTES_PER_ELEMENT,s.subarray(o.offset,o.offset+o.count)),o.count=-1)}(o.buffer,t,r),o.version=t.version)}}}class PlaneBufferGeometry extends BufferGeometry{constructor(e,t,i,n){super(),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const r=(e=e||1)/2,s=(t=t||1)/2,o=Math.floor(i)||1,a=Math.floor(n)||1,l=o+1,c=a+1,h=e/o,u=t/a,d=[],p=[],m=[],f=[];for(let e=0;e<c;e++){const t=e*u-s;for(let i=0;i<l;i++){const n=i*h-r;p.push(n,-t,0),m.push(0,0,1),f.push(i/o),f.push(1-e/a)}}for(let e=0;e<a;e++)for(let t=0;t<o;t++){const i=t+l*e,n=t+l*(e+1),r=t+1+l*(e+1),s=t+1+l*e;d.push(i,n,s),d.push(n,r,s)}this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2))}}var alphamap_fragment="#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment="#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment="#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment="#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex="vec3 transformed = vec3( position );",beginnormal_vertex="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs="vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment="#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment="#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex="#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex="#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment="#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex="#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_vertex="#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex="#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex="#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment="#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment="#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment="#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment="#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",envmap_physical_pars_fragment="#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",lights_toon_fragment="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment="struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps="#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end="#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment="#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment="#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin="#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps="#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin="#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps="#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment="#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing="vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment="#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment="#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex="#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment="float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex="#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex="#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex="#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex="#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment="#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment="#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment="#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment="#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex="#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex="#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag="#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert="#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert="#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag="#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert="#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";const ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmissionmap_fragment:transmissionmap_fragment,transmissionmap_pars_fragment:transmissionmap_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshtoon_frag:meshtoon_frag,meshtoon_vert:meshtoon_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert},UniformsLib={common:{diffuse:{value:new Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(15658734)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}}},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};function WebGLBackground(e,t,i,n,r){const s=new Color(0);let o,a,l=0,c=null,h=0,u=null;function d(e,t){i.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return s},setClearColor:function(e,t){s.set(e),l=void 0!==t?t:1,d(s,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,d(s,l)},render:function(i,r,p,m){let f=!0===r.isScene?r.background:null;f&&f.isTexture&&(f=t.get(f));const g=e.xr,y=g.getSession&&g.getSession();y&&"additive"===y.environmentBlendMode&&(f=null),null===f?d(s,l):f&&f.isColor&&(d(f,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),f&&(f.isCubeTexture||f.isWebGLCubeRenderTarget||306===f.mapping)?(void 0===a&&(a=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({name:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(a)),f.isWebGLCubeRenderTarget&&(f=f.texture),a.material.uniforms.envMap.value=f,a.material.uniforms.flipEnvMap.value=f.isCubeTexture&&f._needsFlipEnvMap?-1:1,c===f&&h===f.version&&u===e.toneMapping||(a.material.needsUpdate=!0,c=f,h=f.version,u=e.toneMapping),i.unshift(a,a.geometry,a.material,0,0,null)):f&&f.isTexture&&(void 0===o&&(o=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({name:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(o)),o.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),o.material.uniforms.uvTransform.value.copy(f.matrix),c===f&&h===f.version&&u===e.toneMapping||(o.material.needsUpdate=!0,c=f,h=f.version,u=e.toneMapping),i.unshift(o,o.geometry,o.material,0,0,null))}}}function WebGLBindingStates(e,t,i,n){const r=e.getParameter(34921),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||null!==s,a={},l=d(null);let c=l;function h(t){return n.isWebGL2?e.bindVertexArray(t):s.bindVertexArrayOES(t)}function u(t){return n.isWebGL2?e.deleteVertexArray(t):s.deleteVertexArrayOES(t)}function d(e){const t=[],i=[],n=[];for(let e=0;e<r;e++)t[e]=0,i[e]=0,n[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:n,object:e,attributes:{},index:null}}function p(){const e=c.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function m(e){f(e,0)}function f(i,r){const s=c.newAttributes,o=c.enabledAttributes,a=c.attributeDivisors;if(s[i]=1,0===o[i]&&(e.enableVertexAttribArray(i),o[i]=1),a[i]!==r){(n.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,r),a[i]=r}}function g(){const t=c.newAttributes,i=c.enabledAttributes;for(let n=0,r=i.length;n<r;n++)i[n]!==t[n]&&(e.disableVertexAttribArray(n),i[n]=0)}function y(t,i,r,s,o,a){!0!==n.isWebGL2||5124!==r&&5125!==r?e.vertexAttribPointer(t,i,r,s,o,a):e.vertexAttribIPointer(t,i,r,o,a)}function v(){b(),c!==l&&(c=l,h(c.object))}function b(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,u,v,b){let _=!1;if(o){const t=function(t,i,r){const o=!0===r.wireframe;let l=a[t.id];void 0===l&&(l={},a[t.id]=l);let c=l[i.id];void 0===c&&(c={},l[i.id]=c);let h=c[o];void 0===h&&(h=d(n.isWebGL2?e.createVertexArray():s.createVertexArrayOES()),c[o]=h);return h}(v,u,l);c!==t&&(c=t,h(c.object)),_=function(e,t){const i=c.attributes,n=e.attributes;if(Object.keys(i).length!==Object.keys(n).length)return!0;for(const e in n){const t=i[e],r=n[e];if(void 0===t)return!0;if(t.attribute!==r)return!0;if(t.data!==r.data)return!0}return c.index!==t}(v,b),_&&function(e,t){const i={},n=e.attributes;for(const e in n){const t=n[e],r={};r.attribute=t,t.data&&(r.data=t.data),i[e]=r}c.attributes=i,c.index=t}(v,b)}else{const e=!0===l.wireframe;c.geometry===v.id&&c.program===u.id&&c.wireframe===e||(c.geometry=v.id,c.program=u.id,c.wireframe=e,_=!0)}!0===r.isInstancedMesh&&(_=!0),null!==b&&i.update(b,34963),_&&(!function(r,s,o,a){if(!1===n.isWebGL2&&(r.isInstancedMesh||a.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const l=a.attributes,c=o.getAttributes(),h=s.defaultAttributeValues;for(const t in c){const n=c[t];if(n>=0){const s=l[t];if(void 0!==s){const t=s.normalized,r=s.itemSize,o=i.get(s);if(void 0===o)continue;const l=o.buffer,c=o.type,h=o.bytesPerElement;if(s.isInterleavedBufferAttribute){const i=s.data,o=i.stride,u=s.offset;i&&i.isInstancedInterleavedBuffer?(f(n,i.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=i.meshPerAttribute*i.count)):m(n),e.bindBuffer(34962,l),y(n,r,c,t,o*h,u*h)}else s.isInstancedBufferAttribute?(f(n,s.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=s.meshPerAttribute*s.count)):m(n),e.bindBuffer(34962,l),y(n,r,c,t,0,0)}else if("instanceMatrix"===t){const t=i.get(r.instanceMatrix);if(void 0===t)continue;const s=t.buffer,o=t.type;f(n+0,1),f(n+1,1),f(n+2,1),f(n+3,1),e.bindBuffer(34962,s),e.vertexAttribPointer(n+0,4,o,!1,64,0),e.vertexAttribPointer(n+1,4,o,!1,64,16),e.vertexAttribPointer(n+2,4,o,!1,64,32),e.vertexAttribPointer(n+3,4,o,!1,64,48)}else if("instanceColor"===t){const t=i.get(r.instanceColor);if(void 0===t)continue;const s=t.buffer,o=t.type;f(n,1),e.bindBuffer(34962,s),e.vertexAttribPointer(n,3,o,!1,12,0)}else if(void 0!==h){const i=h[t];if(void 0!==i)switch(i.length){case 2:e.vertexAttrib2fv(n,i);break;case 3:e.vertexAttrib3fv(n,i);break;case 4:e.vertexAttrib4fv(n,i);break;default:e.vertexAttrib1fv(n,i)}}}}g()}(r,l,u,v),null!==b&&e.bindBuffer(34963,i.get(b).buffer))},reset:v,resetDefaultState:b,dispose:function(){v();for(const e in a){const t=a[e];for(const e in t){const i=t[e];for(const e in i)u(i[e].object),delete i[e];delete t[e]}delete a[e]}},releaseStatesOfGeometry:function(e){if(void 0===a[e.id])return;const t=a[e.id];for(const e in t){const i=t[e];for(const e in i)u(i[e].object),delete i[e];delete t[e]}delete a[e.id]},releaseStatesOfProgram:function(e){for(const t in a){const i=a[t];if(void 0===i[e.id])continue;const n=i[e.id];for(const e in n)u(n[e].object),delete n[e];delete i[e.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:g}}function WebGLBufferRenderer(e,t,i,n){const r=n.isWebGL2;let s;this.setMode=function(e){s=e},this.render=function(t,n){e.drawArrays(s,t,n),i.update(n,s,1)},this.renderInstances=function(n,o,a){if(0===a)return;let l,c;if(r)l=e,c="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[c](s,n,o,a),i.update(o,s,a)}}function WebGLCapabilities(e,t,i){let n;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext;let o=void 0!==i.precision?i.precision:"highp";const a=r(o);a!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",a,"instead."),o=a);const l=!0===i.logarithmicDepthBuffer,c=e.getParameter(34930),h=e.getParameter(35660),u=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),m=e.getParameter(36347),f=e.getParameter(36348),g=e.getParameter(36349),y=h>0,v=s||!!t.get("OES_texture_float");return{isWebGL2:s,getMaxAnisotropy:function(){if(void 0!==n)return n;const i=t.get("EXT_texture_filter_anisotropic");return n=null!==i?e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,n},getMaxPrecision:r,precision:o,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:y,floatFragmentTextures:v,floatVertexTextures:y&&v,maxSamples:s?e.getParameter(36183):0}}function WebGLClipping(e){const t=this;let i=null,n=0,r=!1,s=!1;const o=new Plane,a=new Matrix3,l={value:null,needsUpdate:!1};function c(){l.value!==i&&(l.value=i,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(e,i,n,r){const s=null!==e?e.length:0;let c=null;if(0!==s){if(c=l.value,!0!==r||null===c){const t=n+4*s,r=i.matrixWorldInverse;a.getNormalMatrix(r),(null===c||c.length<t)&&(c=new Float32Array(t));for(let t=0,i=n;t!==s;++t,i+=4)o.copy(e[t]).applyMatrix4(r,a),o.normal.toArray(c,i),c[i+3]=o.constant}l.value=c,l.needsUpdate=!0}return t.numPlanes=s,t.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,s){const o=0!==e.length||t||0!==n||r;return r=t,i=h(e,s,0),n=e.length,o},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,c()},this.setState=function(t,o,a){const u=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,m=e.get(t);if(!r||null===u||0===u.length||s&&!p)s?h(null):c();else{const e=s?0:n,t=4*e;let r=m.clippingState||null;l.value=r,r=h(u,o,t,a);for(let e=0;e!==t;++e)r[e]=i[e];m.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=e}}}function WebGLCubeMaps(e){let t=new WeakMap;function i(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}return{get:function(n){if(n&&n.isTexture){const r=n.mapping;if(303===r||304===r){if(t.has(n)){return i(t.get(n).texture,n.mapping)}{const r=n.image;if(r&&r.height>0){const s=e.getRenderList(),o=e.getRenderTarget(),a=e.getRenderState(),l=new WebGLCubeRenderTarget(r.height/2);return l.fromEquirectangularTexture(e,n),t.set(n,l),e.setRenderTarget(o),e.setRenderList(s),e.setRenderState(a),i(l.texture,n.mapping)}return null}}}return n},dispose:function(){t=new WeakMap}}}function WebGLExtensions(e){const t={};return{has:function(i){if(void 0!==t[i])return null!==t[i];let n;switch(i){case"WEBGL_depth_texture":n=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=e.getExtension(i)}return t[i]=n,null!==n},get:function(e){return this.has(e)||console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t[e]}}}function WebGLGeometries(e,t,i,n){const r=new WeakMap,s=new WeakMap;function o(e){const a=e.target,l=r.get(a);null!==l.index&&t.remove(l.index);for(const e in l.attributes)t.remove(l.attributes[e]);a.removeEventListener("dispose",o),r.delete(a);const c=s.get(l);c&&(t.remove(c),s.delete(l)),n.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,i.memory.geometries--}function a(e){const i=[],n=e.index,r=e.attributes.position;let o=0;if(null!==n){const e=n.array;o=n.version;for(let t=0,n=e.length;t<n;t+=3){const n=e[t+0],r=e[t+1],s=e[t+2];i.push(n,r,r,s,s,n)}}else{const e=r.array;o=r.version;for(let t=0,n=e.length/3-1;t<n;t+=3){const e=t+0,n=t+1,r=t+2;i.push(e,n,n,r,r,e)}}const a=new(arrayMax(i)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(i,1);a.version=o;const l=s.get(e);l&&t.remove(l),s.set(e,a)}return{get:function(e,t){let n=r.get(t);return n||(t.addEventListener("dispose",o),t.isBufferGeometry?n=t:t.isGeometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new BufferGeometry).setFromObject(e)),n=t._bufferGeometry),r.set(t,n),i.memory.geometries++,n)},update:function(e){const i=e.attributes;for(const e in i)t.update(i[e],34962);const n=e.morphAttributes;for(const e in n){const i=n[e];for(let e=0,n=i.length;e<n;e++)t.update(i[e],34962)}},getWireframeAttribute:function(e){const t=s.get(e);if(t){const i=e.index;null!==i&&t.version<i.version&&a(e)}else a(e);return s.get(e)}}}function WebGLIndexedBufferRenderer(e,t,i,n){const r=n.isWebGL2;let s,o,a;this.setMode=function(e){s=e},this.setIndex=function(e){o=e.type,a=e.bytesPerElement},this.render=function(t,n){e.drawElements(s,n,o,t*a),i.update(n,s,1)},this.renderInstances=function(n,l,c){if(0===c)return;let h,u;if(r)h=e,u="drawElementsInstanced";else if(h=t.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[u](s,l,o,n*a,c),i.update(l,s,c)}}function WebGLInfo(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,i,n){switch(t.calls++,i){case 4:t.triangles+=n*(e/3);break;case 1:t.lines+=n*(e/2);break;case 3:t.lines+=n*(e-1);break;case 2:t.lines+=n*e;break;case 0:t.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function numericalSort(e,t){return e[0]-t[0]}function absNumericalSort(e,t){return Math.abs(t[1])-Math.abs(e[1])}function WebGLMorphtargets(e){const t={},i=new Float32Array(8),n=[];for(let e=0;e<8;e++)n[e]=[e,0];return{update:function(r,s,o,a){const l=r.morphTargetInfluences,c=void 0===l?0:l.length;let h=t[s.id];if(void 0===h){h=[];for(let e=0;e<c;e++)h[e]=[e,0];t[s.id]=h}for(let e=0;e<c;e++){const t=h[e];t[0]=e,t[1]=l[e]}h.sort(absNumericalSort);for(let e=0;e<8;e++)e<c&&h[e][1]?(n[e][0]=h[e][0],n[e][1]=h[e][1]):(n[e][0]=Number.MAX_SAFE_INTEGER,n[e][1]=0);n.sort(numericalSort);const u=o.morphTargets&&s.morphAttributes.position,d=o.morphNormals&&s.morphAttributes.normal;let p=0;for(let e=0;e<8;e++){const t=n[e],r=t[0],o=t[1];r!==Number.MAX_SAFE_INTEGER&&o?(u&&s.getAttribute("morphTarget"+e)!==u[r]&&s.setAttribute("morphTarget"+e,u[r]),d&&s.getAttribute("morphNormal"+e)!==d[r]&&s.setAttribute("morphNormal"+e,d[r]),i[e]=o,p+=o):(u&&void 0!==s.getAttribute("morphTarget"+e)&&s.deleteAttribute("morphTarget"+e),d&&void 0!==s.getAttribute("morphNormal"+e)&&s.deleteAttribute("morphNormal"+e),i[e]=0)}const m=s.morphTargetsRelative?1:1-p;a.getUniforms().setValue(e,"morphTargetBaseInfluence",m),a.getUniforms().setValue(e,"morphTargetInfluences",i)}}}function WebGLObjects(e,t,i,n){let r=new WeakMap;return{update:function(e){const s=n.render.frame,o=e.geometry,a=t.get(e,o);return r.get(a)!==s&&(o.isGeometry&&a.updateFromObject(e),t.update(a),r.set(a,s)),e.isInstancedMesh&&(i.update(e.instanceMatrix,34962),null!==e.instanceColor&&i.update(e.instanceColor,34962)),a},dispose:function(){r=new WeakMap}}}function DataTexture2DArray(e,t,i,n){Texture.call(this,null),this.image={data:e||null,width:t||1,height:i||1,depth:n||1},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function DataTexture3D(e,t,i,n){Texture.call(this,null),this.image={data:e||null,width:t||1,height:i||1,depth:n||1},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Color(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},DataTexture2DArray.prototype=Object.create(Texture.prototype),DataTexture2DArray.prototype.constructor=DataTexture2DArray,DataTexture2DArray.prototype.isDataTexture2DArray=!0,DataTexture3D.prototype=Object.create(Texture.prototype),DataTexture3D.prototype.constructor=DataTexture3D,DataTexture3D.prototype.isDataTexture3D=!0;const emptyTexture=new Texture,emptyTexture2dArray=new DataTexture2DArray,emptyTexture3d=new DataTexture3D,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(e,t,i){const n=e[0];if(n<=0||n>0)return e;const r=t*i;let s=arrayCacheF32[r];if(void 0===s&&(s=new Float32Array(r),arrayCacheF32[r]=s),0!==t){n.toArray(s,0);for(let n=1,r=0;n!==t;++n)r+=i,e[n].toArray(s,r)}return s}function arraysEqual(e,t){if(e.length!==t.length)return!1;for(let i=0,n=e.length;i<n;i++)if(e[i]!==t[i])return!1;return!0}function copyArray(e,t){for(let i=0,n=t.length;i<n;i++)e[i]=t[i]}function allocTexUnits(e,t){let i=arrayCacheI32[t];void 0===i&&(i=new Int32Array(t),arrayCacheI32[t]=i);for(let n=0;n!==t;++n)i[n]=e.allocateTextureUnit();return i}function setValueV1f(e,t){const i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function setValueV2f(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(arraysEqual(i,t))return;e.uniform2fv(this.addr,t),copyArray(i,t)}}function setValueV3f(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)i[0]===t.r&&i[1]===t.g&&i[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(arraysEqual(i,t))return;e.uniform3fv(this.addr,t),copyArray(i,t)}}function setValueV4f(e,t){const i=this.cache;if(void 0!==t.x)i[0]===t.x&&i[1]===t.y&&i[2]===t.z&&i[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(arraysEqual(i,t))return;e.uniform4fv(this.addr,t),copyArray(i,t)}}function setValueM2(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),copyArray(i,t)}else{if(arraysEqual(i,n))return;mat2array.set(n),e.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(i,n)}}function setValueM3(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),copyArray(i,t)}else{if(arraysEqual(i,n))return;mat3array.set(n),e.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(i,n)}}function setValueM4(e,t){const i=this.cache,n=t.elements;if(void 0===n){if(arraysEqual(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),copyArray(i,t)}else{if(arraysEqual(i,n))return;mat4array.set(n),e.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(i,n)}}function setValueT1(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.safeSetTexture2D(t||emptyTexture,r)}function setValueT2DArray1(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture2DArray(t||emptyTexture2dArray,r)}function setValueT3D1(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.setTexture3D(t||emptyTexture3d,r)}function setValueT6(e,t,i){const n=this.cache,r=i.allocateTextureUnit();n[0]!==r&&(e.uniform1i(this.addr,r),n[0]=r),i.safeSetTextureCube(t||emptyCubeTexture,r)}function setValueV1i(e,t){const i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function setValueV2i(e,t){const i=this.cache;arraysEqual(i,t)||(e.uniform2iv(this.addr,t),copyArray(i,t))}function setValueV3i(e,t){const i=this.cache;arraysEqual(i,t)||(e.uniform3iv(this.addr,t),copyArray(i,t))}function setValueV4i(e,t){const i=this.cache;arraysEqual(i,t)||(e.uniform4iv(this.addr,t),copyArray(i,t))}function setValueV1ui(e,t){const i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function getSingularSetter(e){switch(e){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(e,t){e.uniform1fv(this.addr,t)}function setValueV1iArray(e,t){e.uniform1iv(this.addr,t)}function setValueV2iArray(e,t){e.uniform2iv(this.addr,t)}function setValueV3iArray(e,t){e.uniform3iv(this.addr,t)}function setValueV4iArray(e,t){e.uniform4iv(this.addr,t)}function setValueV2fArray(e,t){const i=flatten(t,this.size,2);e.uniform2fv(this.addr,i)}function setValueV3fArray(e,t){const i=flatten(t,this.size,3);e.uniform3fv(this.addr,i)}function setValueV4fArray(e,t){const i=flatten(t,this.size,4);e.uniform4fv(this.addr,i)}function setValueM2Array(e,t){const i=flatten(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function setValueM3Array(e,t){const i=flatten(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function setValueM4Array(e,t){const i=flatten(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function setValueT1Array(e,t,i){const n=t.length,r=allocTexUnits(i,n);e.uniform1iv(this.addr,r);for(let e=0;e!==n;++e)i.safeSetTexture2D(t[e]||emptyTexture,r[e])}function setValueT6Array(e,t,i){const n=t.length,r=allocTexUnits(i,n);e.uniform1iv(this.addr,r);for(let e=0;e!==n;++e)i.safeSetTextureCube(t[e]||emptyCubeTexture,r[e])}function getPureArraySetter(e){switch(e){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35680:case 36300:case 36308:case 36293:return setValueT6Array}}function SingleUniform(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=getSingularSetter(t.type)}function PureArrayUniform(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=getPureArraySetter(t.type)}function StructuredUniform(e){this.id=e,this.seq=[],this.map={}}PureArrayUniform.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),copyArray(t,e)},StructuredUniform.prototype.setValue=function(e,t,i){const n=this.seq;for(let r=0,s=n.length;r!==s;++r){const s=n[r];s.setValue(e,t[s.id],i)}};const RePathPart=/([\w\d_]+)(\])?(\[|\.)?/g;function addUniform(e,t){e.seq.push(t),e.map[t.id]=t}function parseUniform(e,t,i){const n=e.name,r=n.length;for(RePathPart.lastIndex=0;;){const s=RePathPart.exec(n),o=RePathPart.lastIndex;let a=s[1];const l="]"===s[2],c=s[3];if(l&&(a|=0),void 0===c||"["===c&&o+2===r){addUniform(i,void 0===c?new SingleUniform(a,e,t):new PureArrayUniform(a,e,t));break}{let e=i.map[a];void 0===e&&(e=new StructuredUniform(a),addUniform(i,e)),i=e}}}function WebGLUniforms(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let n=0;n<i;++n){const i=e.getActiveUniform(t,n);parseUniform(i,e.getUniformLocation(t,i.name),this)}}function WebGLShader(e,t,i){const n=e.createShader(t);return e.shaderSource(n,i),e.compileShader(n),n}WebGLUniforms.prototype.setValue=function(e,t,i,n){const r=this.map[t];void 0!==r&&r.setValue(e,i,n)},WebGLUniforms.prototype.setOptional=function(e,t,i){const n=t[i];void 0!==n&&this.setValue(e,i,n)},WebGLUniforms.upload=function(e,t,i,n){for(let r=0,s=t.length;r!==s;++r){const s=t[r],o=i[s.id];!1!==o.needsUpdate&&s.setValue(e,o.value,n)}},WebGLUniforms.seqWithValue=function(e,t){const i=[];for(let n=0,r=e.length;n!==r;++n){const r=e[n];r.id in t&&i.push(r)}return i};let programIdCount=0;function addLineNumbers(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}function getEncodingComponents(e){switch(e){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function getShaderErrors(e,t,i){const n=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(n&&""===r)return"";return"THREE.WebGLShader: gl.getShaderInfoLog() "+i+"\n"+r+addLineNumbers(e.getShaderSource(t))}function getTexelDecodingFunction(e,t){const i=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function getTexelEncodingFunction(e,t){const i=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function getToneMappingFunction(e,t){let i;switch(t){case 1:i="Linear";break;case 2:i="Reinhard";break;case 3:i="OptimizedCineon";break;case 4:i="ACESFilmic";break;case 5:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),i="Linear"}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function generateExtensions(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(filterEmptyLine).join("\n")}function generateDefines(e){const t=[];for(const i in e){const n=e[i];!1!==n&&t.push("#define "+i+" "+n)}return t.join("\n")}function fetchAttributeLocations(e,t){const i={},n=e.getProgramParameter(t,35721);for(let r=0;r<n;r++){const n=e.getActiveAttrib(t,r).name;i[n]=e.getAttribLocation(t,n)}return i}function filterEmptyLine(e){return""!==e}function replaceLightNums(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function replaceClippingPlaneNums(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(e){return e.replace(includePattern,includeReplacer)}function includeReplacer(e,t){const i=ShaderChunk[t];if(void 0===i)throw new Error("Can not resolve #include <"+t+">");return resolveIncludes(i)}const deprecatedUnrollLoopPattern=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,unrollLoopPattern=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function unrollLoops(e){return e.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer)}function deprecatedLoopReplacer(e,t,i,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),loopReplacer(e,t,i,n)}function loopReplacer(e,t,i,n){let r="";for(let e=parseInt(t);e<parseInt(i);e++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function generatePrecision(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function generateShadowMapTypeDefine(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}function generateEnvMapTypeDefine(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case 301:case 302:t="ENVMAP_TYPE_CUBE";break;case 306:case 307:t="ENVMAP_TYPE_CUBE_UV"}return t}function generateEnvMapModeDefine(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case 302:case 307:t="ENVMAP_MODE_REFRACTION"}return t}function generateEnvMapBlendingDefine(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}function WebGLProgram(e,t,i,n){const r=e.getContext(),s=i.defines;let o=i.vertexShader,a=i.fragmentShader;const l=generateShadowMapTypeDefine(i),c=generateEnvMapTypeDefine(i),h=generateEnvMapModeDefine(i),u=generateEnvMapBlendingDefine(i),d=e.gammaFactor>0?e.gammaFactor:1,p=i.isWebGL2?"":generateExtensions(i),m=generateDefines(s),f=r.createProgram();let g,y,v=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(g=[m].filter(filterEmptyLine).join("\n"),g.length>0&&(g+="\n"),y=[p,m].filter(filterEmptyLine).join("\n"),y.length>0&&(y+="\n")):(g=[generatePrecision(i),"#define SHADER_NAME "+i.shaderName,m,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+i.maxBones,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+h:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&!1===i.flatShading?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(filterEmptyLine).join("\n"),y=[p,generatePrecision(i),"#define SHADER_NAME "+i.shaderName,m,i.alphaTest?"#define ALPHATEST "+i.alphaTest+(i.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+c:"",i.envMap?"#define "+h:"",i.envMap?"#define "+u:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.sheen?"#define USE_SHEEN":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(i.extensionShaderTextureLOD||i.envMap)&&i.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==i.toneMapping?"#define TONE_MAPPING":"",0!==i.toneMapping?ShaderChunk.tonemapping_pars_fragment:"",0!==i.toneMapping?getToneMappingFunction("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",ShaderChunk.encodings_pars_fragment,i.map?getTexelDecodingFunction("mapTexelToLinear",i.mapEncoding):"",i.matcap?getTexelDecodingFunction("matcapTexelToLinear",i.matcapEncoding):"",i.envMap?getTexelDecodingFunction("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMap?getTexelDecodingFunction("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.lightMap?getTexelDecodingFunction("lightMapTexelToLinear",i.lightMapEncoding):"",getTexelEncodingFunction("linearToOutputTexel",i.outputEncoding),i.depthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(filterEmptyLine).join("\n")),o=resolveIncludes(o),o=replaceLightNums(o,i),o=replaceClippingPlaneNums(o,i),a=resolveIncludes(a),a=replaceLightNums(a,i),a=replaceClippingPlaneNums(a,i),o=unrollLoops(o),a=unrollLoops(a),i.isWebGL2&&!0!==i.isRawShaderMaterial&&(v="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,y=["#define varying in",i.glslVersion===GLSL3?"":"out highp vec4 pc_fragColor;",i.glslVersion===GLSL3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const b=v+y+a,_=WebGLShader(r,35633,v+g+o),x=WebGLShader(r,35632,b);if(r.attachShader(f,_),r.attachShader(f,x),void 0!==i.index0AttributeName?r.bindAttribLocation(f,0,i.index0AttributeName):!0===i.morphTargets&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),e.debug.checkShaderErrors){const e=r.getProgramInfoLog(f).trim(),t=r.getShaderInfoLog(_).trim(),i=r.getShaderInfoLog(x).trim();let n=!0,s=!0;if(!1===r.getProgramParameter(f,35714)){n=!1;const t=getShaderErrors(r,_,"vertex"),i=getShaderErrors(r,x,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(f,35715),"gl.getProgramInfoLog",e,t,i)}else""!==e?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",e):""!==t&&""!==i||(s=!1);s&&(this.diagnostics={runnable:n,programLog:e,vertexShader:{log:t,prefix:g},fragmentShader:{log:i,prefix:y}})}let w,S;return r.deleteShader(_),r.deleteShader(x),this.getUniforms=function(){return void 0===w&&(w=new WebGLUniforms(r,f)),w},this.getAttributes=function(){return void 0===S&&(S=fetchAttributeLocations(r,f)),S},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.name=i.shaderName,this.id=programIdCount++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=_,this.fragmentShader=x,this}function WebGLPrograms(e,t,i,n,r,s){const o=[],a=n.isWebGL2,l=n.logarithmicDepthBuffer,c=n.floatVertexTextures,h=n.maxVertexUniforms,u=n.vertexTextures;let d=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function f(e){let t;return e?e.isTexture?t=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=3e3,t}return{getParameters:function(r,o,m,g,y){const v=g.fog,b=r.isMeshStandardMaterial?g.environment:null,_=t.get(r.envMap||b),x=p[r.type],w=y.isSkinnedMesh?function(e){const t=e.skeleton.bones;if(c)return 1024;{const e=h,i=Math.floor((e-20)/4),n=Math.min(i,t.length);return n<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+n+"."),0):n}}(y):0;let S,M;if(null!==r.precision&&(d=n.getMaxPrecision(r.precision),d!==r.precision&&console.warn("THREE.WebGLProgram.getParameters:",r.precision,"not supported, using",d,"instead.")),x){const e=ShaderLib[x];S=e.vertexShader,M=e.fragmentShader}else S=r.vertexShader,M=r.fragmentShader;const C=e.getRenderTarget();return{isWebGL2:a,shaderID:x,shaderName:r.type,vertexShader:S,fragmentShader:M,defines:r.defines,isRawShaderMaterial:!0===r.isRawShaderMaterial,glslVersion:r.glslVersion,precision:d,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:u,outputEncoding:null!==C?f(C.texture):e.outputEncoding,map:!!r.map,mapEncoding:f(r.map),matcap:!!r.matcap,matcapEncoding:f(r.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:f(_),envMapCubeUV:!!_&&(306===_.mapping||307===_.mapping),lightMap:!!r.lightMap,lightMapEncoding:f(r.lightMap),aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:f(r.emissiveMap),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,objectSpaceNormalMap:1===r.normalMapType,tangentSpaceNormalMap:0===r.normalMapType,clearcoatMap:!!r.clearcoatMap,clearcoatRoughnessMap:!!r.clearcoatRoughnessMap,clearcoatNormalMap:!!r.clearcoatNormalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,gradientMap:!!r.gradientMap,sheen:!!r.sheen,transmissionMap:!!r.transmissionMap,combine:r.combine,vertexTangents:r.normalMap&&r.vertexTangents,vertexColors:r.vertexColors,vertexUvs:!!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatMap||r.clearcoatRoughnessMap||r.clearcoatNormalMap||r.displacementMap||r.transmissionMap),uvsVertexOnly:!(r.map||r.bumpMap||r.normalMap||r.specularMap||r.alphaMap||r.emissiveMap||r.roughnessMap||r.metalnessMap||r.clearcoatNormalMap||r.transmissionMap||!r.displacementMap),fog:!!v,useFog:r.fog,fogExp2:v&&v.isFogExp2,flatShading:r.flatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:l,skinning:r.skinning&&w>0,maxBones:w,useVertexTexture:c,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:r.dithering,shadowMapEnabled:e.shadowMap.enabled&&m.length>0,shadowMapType:e.shadowMap.type,toneMapping:r.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:2===r.side,flipSided:1===r.side,depthPacking:void 0!==r.depthPacking&&r.depthPacking,index0AttributeName:r.index0AttributeName,extensionDerivatives:r.extensions&&r.extensions.derivatives,extensionFragDepth:r.extensions&&r.extensions.fragDepth,extensionDrawBuffers:r.extensions&&r.extensions.drawBuffers,extensionShaderTextureLOD:r.extensions&&r.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||i.has("EXT_shader_texture_lod"),customProgramCacheKey:r.customProgramCacheKey()}},getProgramCacheKey:function(t){const i=[];if(t.shaderID?i.push(t.shaderID):(i.push(t.fragmentShader),i.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)i.push(e),i.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<m.length;e++)i.push(t[m[e]]);i.push(e.outputEncoding),i.push(e.gammaFactor)}return i.push(t.customProgramCacheKey),i.join()},getUniforms:function(e){const t=p[e.type];let i;if(t){const e=ShaderLib[t];i=UniformsUtils.clone(e.uniforms)}else i=e.uniforms;return i},acquireProgram:function(t,i){let n;for(let e=0,t=o.length;e<t;e++){const t=o[e];if(t.cacheKey===i){n=t,++n.usedTimes;break}}return void 0===n&&(n=new WebGLProgram(e,i,t,r),o.push(n)),n},releaseProgram:function(e){if(0==--e.usedTimes){const t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},programs:o}}function WebGLProperties(){let e=new WeakMap;return{get:function(t){let i=e.get(t);return void 0===i&&(i={},e.set(t,i)),i},remove:function(t){e.delete(t)},update:function(t,i,n){e.get(t)[i]=n},dispose:function(){e=new WeakMap}}}function painterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function reversePainterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function WebGLRenderList(e){const t=[];let i=0;const n=[],r=[],s={id:-1};function o(n,r,o,a,l,c){let h=t[i];const u=e.get(o);return void 0===h?(h={id:n.id,object:n,geometry:r,material:o,program:u.program||s,groupOrder:a,renderOrder:n.renderOrder,z:l,group:c},t[i]=h):(h.id=n.id,h.object=n,h.geometry=r,h.material=o,h.program=u.program||s,h.groupOrder=a,h.renderOrder=n.renderOrder,h.z=l,h.group=c),i++,h}return{opaque:n,transparent:r,init:function(){i=0,n.length=0,r.length=0},push:function(e,t,i,s,a,l){const c=o(e,t,i,s,a,l);(!0===i.transparent?r:n).push(c)},unshift:function(e,t,i,s,a,l){const c=o(e,t,i,s,a,l);(!0===i.transparent?r:n).unshift(c)},finish:function(){for(let e=i,n=t.length;e<n;e++){const i=t[e];if(null===i.id)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.program=null,i.group=null}},sort:function(e,t){n.length>1&&n.sort(e||painterSortStable),r.length>1&&r.sort(t||reversePainterSortStable)}}}function WebGLRenderLists(e){let t=new WeakMap;return{get:function(i,n){const r=t.get(i);let s;return void 0===r?(s=new WebGLRenderList(e),t.set(i,new WeakMap),t.get(i).set(n,s)):(s=r.get(n),void 0===s&&(s=new WebGLRenderList(e),r.set(n,s))),s},dispose:function(){t=new WeakMap}}}function UniformsCache(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new Vector3,color:new Color};break;case"SpotLight":i={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new Vector3,color:new Color,distance:0,decay:0};break;case"HemisphereLight":i={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":i={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3}}return e[t.id]=i,i}}}function ShadowUniformsCache(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=i,i}}}let nextVersion=0;function shadowCastingLightsFirst(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function WebGLLights(){const e=new UniformsCache,t=ShadowUniformsCache(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)i.probe.push(new Vector3);const n=new Vector3,r=new Matrix4,s=new Matrix4;return{setup:function(o,a,l){let c=0,h=0,u=0;for(let e=0;e<9;e++)i.probe[e].set(0,0,0);let d=0,p=0,m=0,f=0,g=0,y=0,v=0,b=0;const _=l.matrixWorldInverse;o.sort(shadowCastingLightsFirst);for(let a=0,l=o.length;a<l;a++){const l=o[a],x=l.color,w=l.intensity,S=l.distance,M=l.shadow&&l.shadow.map?l.shadow.map.texture:null;if(l.isAmbientLight)c+=x.r*w,h+=x.g*w,u+=x.b*w;else if(l.isLightProbe)for(let e=0;e<9;e++)i.probe[e].addScaledVector(l.sh.coefficients[e],w);else if(l.isDirectionalLight){const r=e.get(l);if(r.color.copy(l.color).multiplyScalar(l.intensity),r.direction.setFromMatrixPosition(l.matrixWorld),n.setFromMatrixPosition(l.target.matrixWorld),r.direction.sub(n),r.direction.transformDirection(_),l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.directionalShadow[d]=n,i.directionalShadowMap[d]=M,i.directionalShadowMatrix[d]=l.shadow.matrix,y++}i.directional[d]=r,d++}else if(l.isSpotLight){const r=e.get(l);if(r.position.setFromMatrixPosition(l.matrixWorld),r.position.applyMatrix4(_),r.color.copy(x).multiplyScalar(w),r.distance=S,r.direction.setFromMatrixPosition(l.matrixWorld),n.setFromMatrixPosition(l.target.matrixWorld),r.direction.sub(n),r.direction.transformDirection(_),r.coneCos=Math.cos(l.angle),r.penumbraCos=Math.cos(l.angle*(1-l.penumbra)),r.decay=l.decay,l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,i.spotShadow[m]=n,i.spotShadowMap[m]=M,i.spotShadowMatrix[m]=l.shadow.matrix,b++}i.spot[m]=r,m++}else if(l.isRectAreaLight){const t=e.get(l);t.color.copy(x).multiplyScalar(w),t.position.setFromMatrixPosition(l.matrixWorld),t.position.applyMatrix4(_),s.identity(),r.copy(l.matrixWorld),r.premultiply(_),s.extractRotation(r),t.halfWidth.set(.5*l.width,0,0),t.halfHeight.set(0,.5*l.height,0),t.halfWidth.applyMatrix4(s),t.halfHeight.applyMatrix4(s),i.rectArea[f]=t,f++}else if(l.isPointLight){const n=e.get(l);if(n.position.setFromMatrixPosition(l.matrixWorld),n.position.applyMatrix4(_),n.color.copy(l.color).multiplyScalar(l.intensity),n.distance=l.distance,n.decay=l.decay,l.castShadow){const e=l.shadow,n=t.get(l);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,i.pointShadow[p]=n,i.pointShadowMap[p]=M,i.pointShadowMatrix[p]=l.shadow.matrix,v++}i.point[p]=n,p++}else if(l.isHemisphereLight){const t=e.get(l);t.direction.setFromMatrixPosition(l.matrixWorld),t.direction.transformDirection(_),t.direction.normalize(),t.skyColor.copy(l.color).multiplyScalar(w),t.groundColor.copy(l.groundColor).multiplyScalar(w),i.hemi[g]=t,g++}}f>0&&(i.rectAreaLTC1=UniformsLib.LTC_1,i.rectAreaLTC2=UniformsLib.LTC_2),i.ambient[0]=c,i.ambient[1]=h,i.ambient[2]=u;const x=i.hash;x.directionalLength===d&&x.pointLength===p&&x.spotLength===m&&x.rectAreaLength===f&&x.hemiLength===g&&x.numDirectionalShadows===y&&x.numPointShadows===v&&x.numSpotShadows===b||(i.directional.length=d,i.spot.length=m,i.rectArea.length=f,i.point.length=p,i.hemi.length=g,i.directionalShadow.length=y,i.directionalShadowMap.length=y,i.pointShadow.length=v,i.pointShadowMap.length=v,i.spotShadow.length=b,i.spotShadowMap.length=b,i.directionalShadowMatrix.length=y,i.pointShadowMatrix.length=v,i.spotShadowMatrix.length=b,x.directionalLength=d,x.pointLength=p,x.spotLength=m,x.rectAreaLength=f,x.hemiLength=g,x.numDirectionalShadows=y,x.numPointShadows=v,x.numSpotShadows=b,i.version=nextVersion++)},state:i}}function WebGLRenderState(){const e=new WebGLLights,t=[],i=[];return{init:function(){t.length=0,i.length=0},state:{lightsArray:t,shadowsArray:i,lights:e},setupLights:function(n){e.setup(t,i,n)},pushLight:function(e){t.push(e)},pushShadow:function(e){i.push(e)}}}function WebGLRenderStates(){let e=new WeakMap;return{get:function(t,i){let n;return!1===e.has(t)?(n=new WebGLRenderState,e.set(t,new WeakMap),e.get(t).set(i,n)):!1===e.get(t).has(i)?(n=new WebGLRenderState,e.get(t).set(i,n)):n=e.get(t).get(i),n},dispose:function(){e=new WeakMap}}}function MeshDepthMaterial(e){Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}function MeshDistanceMaterial(e){Material.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}MeshDepthMaterial.prototype=Object.create(Material.prototype),MeshDepthMaterial.prototype.constructor=MeshDepthMaterial,MeshDepthMaterial.prototype.isMeshDepthMaterial=!0,MeshDepthMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},MeshDistanceMaterial.prototype=Object.create(Material.prototype),MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial,MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0,MeshDistanceMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var vsm_frag="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",vsm_vert="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function WebGLShadowMap(e,t,i){let n=new Frustum;const r=new Vector2,s=new Vector2,o=new Vector4,a=[],l=[],c={},h={0:1,1:0,2:2},u=new ShaderMaterial({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vsm_vert,fragmentShader:vsm_frag}),d=u.clone();d.defines.HORIZONAL_PASS=1;const p=new BufferGeometry;p.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Mesh(p,u),f=this;function g(i,n){const r=t.update(m);u.uniforms.shadow_pass.value=i.map.texture,u.uniforms.resolution.value=i.mapSize,u.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(n,null,r,u,m,null),d.uniforms.shadow_pass.value=i.mapPass.texture,d.uniforms.resolution.value=i.mapSize,d.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(n,null,r,d,m,null)}function y(e,t,i){const n=e<<0|t<<1|i<<2;let r=a[n];return void 0===r&&(r=new MeshDepthMaterial({depthPacking:3201,morphTargets:e,skinning:t}),a[n]=r),r}function v(e,t,i){const n=e<<0|t<<1|i<<2;let r=l[n];return void 0===r&&(r=new MeshDistanceMaterial({morphTargets:e,skinning:t}),l[n]=r),r}function b(t,i,n,r,s,o,a){let l=null,u=y,d=t.customDepthMaterial;if(!0===r.isPointLight&&(u=v,d=t.customDistanceMaterial),void 0===d){let e=!1;!0===n.morphTargets&&(e=i.morphAttributes&&i.morphAttributes.position&&i.morphAttributes.position.length>0);let r=!1;!0===t.isSkinnedMesh&&(!0===n.skinning?r=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t));l=u(e,r,!0===t.isInstancedMesh)}else l=d;if(e.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length){const e=l.uuid,t=n.uuid;let i=c[e];void 0===i&&(i={},c[e]=i);let r=i[t];void 0===r&&(r=l.clone(),i[t]=r),l=r}return l.visible=n.visible,l.wireframe=n.wireframe,l.side=3===a?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:h[n.side],l.clipShadows=n.clipShadows,l.clippingPlanes=n.clippingPlanes,l.clipIntersection=n.clipIntersection,l.wireframeLinewidth=n.wireframeLinewidth,l.linewidth=n.linewidth,!0===r.isPointLight&&!0===l.isMeshDistanceMaterial&&(l.referencePosition.setFromMatrixPosition(r.matrixWorld),l.nearDistance=s,l.farDistance=o),l}function _(i,r,s,o,a){if(!1===i.visible)return;if(i.layers.test(r.layers)&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===a)&&(!i.frustumCulled||n.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,i.matrixWorld);const n=t.update(i),r=i.material;if(Array.isArray(r)){const t=n.groups;for(let l=0,c=t.length;l<c;l++){const c=t[l],h=r[c.materialIndex];if(h&&h.visible){const t=b(i,n,h,o,s.near,s.far,a);e.renderBufferDirect(s,null,n,t,i,c)}}}else if(r.visible){const t=b(i,n,r,o,s.near,s.far,a);e.renderBufferDirect(s,null,n,t,i,null)}}const l=i.children;for(let e=0,t=l.length;e<t;e++)_(l[e],r,s,o,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,a,l){if(!1===f.enabled)return;if(!1===f.autoUpdate&&!1===f.needsUpdate)return;if(0===t.length)return;const c=e.getRenderTarget(),h=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let c=0,h=t.length;c<h;c++){const h=t[c],u=h.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",h,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const p=u.getFrameExtents();if(r.multiply(p),s.copy(u.mapSize),(r.x>i||r.y>i)&&(r.x>i&&(s.x=Math.floor(i/p.x),r.x=s.x*p.x,u.mapSize.x=s.x),r.y>i&&(s.y=Math.floor(i/p.y),r.y=s.y*p.y,u.mapSize.y=s.y)),null===u.map&&!u.isPointLightShadow&&3===this.type){const e={minFilter:1006,magFilter:1006,format:1023};u.map=new WebGLRenderTarget(r.x,r.y,e),u.map.texture.name=h.name+".shadowMap",u.mapPass=new WebGLRenderTarget(r.x,r.y,e),u.camera.updateProjectionMatrix()}if(null===u.map){const e={minFilter:1003,magFilter:1003,format:1023};u.map=new WebGLRenderTarget(r.x,r.y,e),u.map.texture.name=h.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const m=u.getViewportCount();for(let e=0;e<m;e++){const t=u.getViewport(e);o.set(s.x*t.x,s.y*t.y,s.x*t.z,s.y*t.w),d.viewport(o),u.updateMatrices(h,e),n=u.getFrustum(),_(a,l,u.camera,h,this.type)}u.isPointLightShadow||3!==this.type||g(u,l),u.needsUpdate=!1}f.needsUpdate=!1,e.setRenderTarget(c,h,u)}}function WebGLState(e,t,i){const n=i.isWebGL2;const r=new function(){let t=!1;const i=new Vector4;let n=null;const r=new Vector4(0,0,0,0);return{setMask:function(i){n===i||t||(e.colorMask(i,i,i,i),n=i)},setLocked:function(e){t=e},setClear:function(t,n,s,o,a){!0===a&&(t*=o,n*=o,s*=o),i.set(t,n,s,o),!1===r.equals(i)&&(e.clearColor(t,n,s,o),r.copy(i))},reset:function(){t=!1,n=null,r.set(-1,0,0,0)}}},s=new function(){let t=!1,i=null,n=null,r=null;return{setTest:function(e){e?I(2929):D(2929)},setMask:function(n){i===n||t||(e.depthMask(n),i=n)},setFunc:function(t){if(n!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}else e.depthFunc(515);n=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,i=null,n=null,r=null}}},o=new function(){let t=!1,i=null,n=null,r=null,s=null,o=null,a=null,l=null,c=null;return{setTest:function(e){t||(e?I(2960):D(2960))},setMask:function(n){i===n||t||(e.stencilMask(n),i=n)},setFunc:function(t,i,o){n===t&&r===i&&s===o||(e.stencilFunc(t,i,o),n=t,r=i,s=o)},setOp:function(t,i,n){o===t&&a===i&&l===n||(e.stencilOp(t,i,n),o=t,a=i,l=n)},setLocked:function(e){t=e},setClear:function(t){c!==t&&(e.clearStencil(t),c=t)},reset:function(){t=!1,i=null,n=null,r=null,s=null,o=null,a=null,l=null,c=null}}};let a={},l=null,c=null,h=null,u=null,d=null,p=null,m=null,f=null,g=null,y=!1,v=null,b=null,_=null,x=null,w=null;const S=e.getParameter(35661);let M=!1,C=0;const T=e.getParameter(7938);-1!==T.indexOf("WebGL")?(C=parseFloat(/^WebGL\ ([0-9])/.exec(T)[1]),M=C>=1):-1!==T.indexOf("OpenGL ES")&&(C=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(T)[1]),M=C>=2);let A=null,L={};const E=new Vector4,P=new Vector4;function R(t,i,n){const r=new Uint8Array(4),s=e.createTexture();e.bindTexture(t,s),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(let t=0;t<n;t++)e.texImage2D(i+t,0,6408,1,1,0,6408,5121,r);return s}const B={};function I(t){!0!==a[t]&&(e.enable(t),a[t]=!0)}function D(t){!1!==a[t]&&(e.disable(t),a[t]=!1)}B[3553]=R(3553,3553,1),B[34067]=R(34067,34069,6),r.setClear(0,0,0,1),s.setClear(1),o.setClear(0),I(2929),s.setFunc(3),H(!1),F(1),I(2884),k(0);const N={100:32774,101:32778,102:32779};if(n)N[103]=32775,N[104]=32776;else{const e=t.get("EXT_blend_minmax");null!==e&&(N[103]=e.MIN_EXT,N[104]=e.MAX_EXT)}const O={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function k(t,i,n,r,s,o,a,l){if(0!==t){if(c||(I(3042),c=!0),5===t)s=s||i,o=o||n,a=a||r,i===u&&s===m||(e.blendEquationSeparate(N[i],N[s]),u=i,m=s),n===d&&r===p&&o===f&&a===g||(e.blendFuncSeparate(O[n],O[r],O[o],O[a]),d=n,p=r,f=o,g=a),h=t,y=null;else if(t!==h||l!==y){if(100===u&&100===m||(e.blendEquation(32774),u=100,m=100),l)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}d=null,p=null,f=null,g=null,h=t,y=l}}else c&&(D(3042),c=!1)}function H(t){v!==t&&(t?e.frontFace(2304):e.frontFace(2305),v=t)}function F(t){0!==t?(I(2884),t!==b&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):D(2884),b=t}function G(t,i,n){t?(I(32823),x===i&&w===n||(e.polygonOffset(i,n),x=i,w=n)):D(32823)}function U(t){void 0===t&&(t=33984+S-1),A!==t&&(e.activeTexture(t),A=t)}return{buffers:{color:r,depth:s,stencil:o},enable:I,disable:D,useProgram:function(t){return l!==t&&(e.useProgram(t),l=t,!0)},setBlending:k,setMaterial:function(e,t){2===e.side?D(2884):I(2884);let i=1===e.side;t&&(i=!i),H(i),1===e.blending&&!1===e.transparent?k(0):k(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),s.setFunc(e.depthFunc),s.setTest(e.depthTest),s.setMask(e.depthWrite),r.setMask(e.colorWrite);const n=e.stencilWrite;o.setTest(n),n&&(o.setMask(e.stencilWriteMask),o.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),o.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),G(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:H,setCullFace:F,setLineWidth:function(t){t!==_&&(M&&e.lineWidth(t),_=t)},setPolygonOffset:G,setScissorTest:function(e){e?I(3089):D(3089)},activeTexture:U,bindTexture:function(t,i){null===A&&U();let n=L[A];void 0===n&&(n={type:void 0,texture:void 0},L[A]=n),n.type===t&&n.texture===i||(e.bindTexture(t,i||B[t]),n.type=t,n.texture=i)},unbindTexture:function(){const t=L[A];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===E.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),E.copy(t))},viewport:function(t){!1===P.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),P.copy(t))},reset:function(){a={},A=null,L={},l=null,h=null,v=null,b=null,r.reset(),s.reset(),o.reset()}}}function WebGLTextures(e,t,i,n,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,d=new WeakMap;let p,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function f(e,t){return m?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(e,t,i,n){let r=1;if((e.width>n||e.height>n)&&(r=n/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const n=t?MathUtils.floorPowerOfTwo:Math.floor,s=n(r*e.width),o=n(r*e.height);void 0===p&&(p=f(s,o));const a=i?f(s,o):p;a.width=s,a.height=o;return a.getContext("2d").drawImage(e,0,0,s,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+o+")."),a}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function y(e){return MathUtils.isPowerOfTwo(e.width)&&MathUtils.isPowerOfTwo(e.height)}function v(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&1006!==e.minFilter}function b(t,i,r,s){e.generateMipmap(t);n.get(i).__maxMipLevel=Math.log(Math.max(r,s))*Math.LOG2E}function _(i,n,r){if(!1===a)return n;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let s=n;return 6403===n&&(5126===r&&(s=33326),5131===r&&(s=33325),5121===r&&(s=33321)),6407===n&&(5126===r&&(s=34837),5131===r&&(s=34843),5121===r&&(s=32849)),6408===n&&(5126===r&&(s=34836),5131===r&&(s=34842),5121===r&&(s=32856)),33325!==s&&33326!==s&&34842!==s&&34836!==s||t.get("EXT_color_buffer_float"),s}function x(e){return 1003===e||1004===e||1005===e?9728:9729}function w(t){const i=t.target;i.removeEventListener("dispose",w),function(t){const i=n.get(t);if(void 0===i.__webglInit)return;e.deleteTexture(i.__webglTexture),n.remove(t)}(i),i.isVideoTexture&&d.delete(i),o.memory.textures--}function S(t){const i=t.target;i.removeEventListener("dispose",S),function(t){const i=n.get(t),r=n.get(t.texture);if(!t)return;void 0!==r.__webglTexture&&e.deleteTexture(r.__webglTexture);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(i.__webglFramebuffer[t]),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[t]);else e.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer&&e.deleteRenderbuffer(i.__webglColorRenderbuffer),i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer);n.remove(t.texture),n.remove(t)}(i),o.memory.textures--}let M=0;function C(e,t){const r=n.get(e);if(e.isVideoTexture&&function(e){const t=o.render.frame;d.get(e)!==t&&(d.set(e,t),e.update())}(e),e.version>0&&r.__version!==e.version){const i=e.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void R(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}i.activeTexture(33984+t),i.bindTexture(3553,r.__webglTexture)}function T(t,r){const o=n.get(t);t.version>0&&o.__version!==t.version?function(t,n,r){if(6!==n.image.length)return;P(t,n),i.activeTexture(33984+r),i.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,n.flipY);const o=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),l=n.image[0]&&n.image[0].isDataTexture,h=[];for(let e=0;e<6;e++)h[e]=o||l?l?n.image[e].image:n.image[e]:g(n.image[e],!1,!0,c);const u=h[0],d=y(u)||a,p=s.convert(n.format),m=s.convert(n.type),f=_(n.internalFormat,p,m);let x;if(E(34067,n,d),o){for(let e=0;e<6;e++){x=h[e].mipmaps;for(let t=0;t<x.length;t++){const r=x[t];1023!==n.format&&1022!==n.format?null!==p?i.compressedTexImage2D(34069+e,t,f,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(34069+e,t,f,r.width,r.height,0,p,m,r.data)}}t.__maxMipLevel=x.length-1}else{x=n.mipmaps;for(let e=0;e<6;e++)if(l){i.texImage2D(34069+e,0,f,h[e].width,h[e].height,0,p,m,h[e].data);for(let t=0;t<x.length;t++){const n=x[t].image[e].image;i.texImage2D(34069+e,t+1,f,n.width,n.height,0,p,m,n.data)}}else{i.texImage2D(34069+e,0,f,p,m,h[e]);for(let t=0;t<x.length;t++){const n=x[t];i.texImage2D(34069+e,t+1,f,p,m,n.image[e])}}t.__maxMipLevel=x.length}v(n,d)&&b(34067,n,u.width,u.height);t.__version=n.version,n.onUpdate&&n.onUpdate(n)}(o,t,r):(i.activeTexture(33984+r),i.bindTexture(34067,o.__webglTexture))}const A={1e3:10497,1001:33071,1002:33648},L={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function E(i,s,o){o?(e.texParameteri(i,10242,A[s.wrapS]),e.texParameteri(i,10243,A[s.wrapT]),32879!==i&&35866!==i||e.texParameteri(i,32882,A[s.wrapR]),e.texParameteri(i,10240,L[s.magFilter]),e.texParameteri(i,10241,L[s.minFilter])):(e.texParameteri(i,10242,33071),e.texParameteri(i,10243,33071),32879!==i&&35866!==i||e.texParameteri(i,32882,33071),1001===s.wrapS&&1001===s.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(i,10240,x(s.magFilter)),e.texParameteri(i,10241,x(s.minFilter)),1003!==s.minFilter&&1006!==s.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const l=t.get("EXT_texture_filter_anisotropic");if(l){if(1015===s.type&&null===t.get("OES_texture_float_linear"))return;if(1016===s.type&&null===(a||t.get("OES_texture_half_float_linear")))return;(s.anisotropy>1||n.get(s).__currentAnisotropy)&&(e.texParameterf(i,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(s.anisotropy,r.getMaxAnisotropy())),n.get(s).__currentAnisotropy=s.anisotropy)}}function P(t,i){void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",w),t.__webglTexture=e.createTexture(),o.memory.textures++)}function R(t,n,r){let o=3553;n.isDataTexture2DArray&&(o=35866),n.isDataTexture3D&&(o=32879),P(t,n),i.activeTexture(33984+r),i.bindTexture(o,t.__webglTexture),e.pixelStorei(37440,n.flipY),e.pixelStorei(37441,n.premultiplyAlpha),e.pixelStorei(3317,n.unpackAlignment);const l=function(e){return!a&&(1001!==e.wrapS||1001!==e.wrapT||1003!==e.minFilter&&1006!==e.minFilter)}(n)&&!1===y(n.image),c=g(n.image,l,!1,h),u=y(c)||a,d=s.convert(n.format);let p,m=s.convert(n.type),f=_(n.internalFormat,d,m);E(o,n,u);const x=n.mipmaps;if(n.isDepthTexture)f=6402,a?f=1015===n.type?36012:1014===n.type?33190:1020===n.type?35056:33189:1015===n.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===n.format&&6402===f&&1012!==n.type&&1014!==n.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=1012,m=s.convert(n.type)),1027===n.format&&6402===f&&(f=34041,1020!==n.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=1020,m=s.convert(n.type))),i.texImage2D(3553,0,f,c.width,c.height,0,d,m,null);else if(n.isDataTexture)if(x.length>0&&u){for(let e=0,t=x.length;e<t;e++)p=x[e],i.texImage2D(3553,e,f,p.width,p.height,0,d,m,p.data);n.generateMipmaps=!1,t.__maxMipLevel=x.length-1}else i.texImage2D(3553,0,f,c.width,c.height,0,d,m,c.data),t.__maxMipLevel=0;else if(n.isCompressedTexture){for(let e=0,t=x.length;e<t;e++)p=x[e],1023!==n.format&&1022!==n.format?null!==d?i.compressedTexImage2D(3553,e,f,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(3553,e,f,p.width,p.height,0,d,m,p.data);t.__maxMipLevel=x.length-1}else if(n.isDataTexture2DArray)i.texImage3D(35866,0,f,c.width,c.height,c.depth,0,d,m,c.data),t.__maxMipLevel=0;else if(n.isDataTexture3D)i.texImage3D(32879,0,f,c.width,c.height,c.depth,0,d,m,c.data),t.__maxMipLevel=0;else if(x.length>0&&u){for(let e=0,t=x.length;e<t;e++)p=x[e],i.texImage2D(3553,e,f,d,m,p);n.generateMipmaps=!1,t.__maxMipLevel=x.length-1}else i.texImage2D(3553,0,f,d,m,c),t.__maxMipLevel=0;v(n,u)&&b(o,n,c.width,c.height),t.__version=n.version,n.onUpdate&&n.onUpdate(n)}function B(t,r,o,a){const l=s.convert(r.texture.format),c=s.convert(r.texture.type),h=_(r.texture.internalFormat,l,c);i.texImage2D(a,0,h,r.width,r.height,0,l,c,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,a,n.get(r.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function I(t,i,n){if(e.bindRenderbuffer(36161,t),i.depthBuffer&&!i.stencilBuffer){let r=33189;if(n){const t=i.depthTexture;t&&t.isDepthTexture&&(1015===t.type?r=36012:1014===t.type&&(r=33190));const n=N(i);e.renderbufferStorageMultisample(36161,n,r,i.width,i.height)}else e.renderbufferStorage(36161,r,i.width,i.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(i.depthBuffer&&i.stencilBuffer){if(n){const t=N(i);e.renderbufferStorageMultisample(36161,t,35056,i.width,i.height)}else e.renderbufferStorage(36161,34041,i.width,i.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{const t=s.convert(i.texture.format),r=s.convert(i.texture.type),o=_(i.texture.internalFormat,t,r);if(n){const t=N(i);e.renderbufferStorageMultisample(36161,t,o,i.width,i.height)}else e.renderbufferStorage(36161,o,i.width,i.height)}e.bindRenderbuffer(36161,null)}function D(t){const i=n.get(t),r=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),C(i.depthTexture,0);const r=n.get(i.depthTexture).__webglTexture;if(1026===i.depthTexture.format)e.framebufferTexture2D(36160,36096,3553,r,0);else{if(1027!==i.depthTexture.format)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,r,0)}}(i.__webglFramebuffer,t)}else if(r){i.__webglDepthbuffer=[];for(let n=0;n<6;n++)e.bindFramebuffer(36160,i.__webglFramebuffer[n]),i.__webglDepthbuffer[n]=e.createRenderbuffer(),I(i.__webglDepthbuffer[n],t,!1)}else e.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),I(i.__webglDepthbuffer,t,!1);e.bindFramebuffer(36160,null)}function N(e){return a&&e.isWebGLMultisampleRenderTarget?Math.min(u,e.samples):0}let O=!1,k=!1;this.allocateTextureUnit=function(){const e=M;return e>=l&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+l),M+=1,e},this.resetTextureUnits=function(){M=0},this.setTexture2D=C,this.setTexture2DArray=function(e,t){const r=n.get(e);e.version>0&&r.__version!==e.version?R(r,e,t):(i.activeTexture(33984+t),i.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(e,t){const r=n.get(e);e.version>0&&r.__version!==e.version?R(r,e,t):(i.activeTexture(33984+t),i.bindTexture(32879,r.__webglTexture))},this.setTextureCube=T,this.setupRenderTarget=function(t){const r=n.get(t),l=n.get(t.texture);t.addEventListener("dispose",S),l.__webglTexture=e.createTexture(),o.memory.textures++;const c=!0===t.isWebGLCubeRenderTarget,h=!0===t.isWebGLMultisampleRenderTarget,u=y(t)||a;if(!a||1022!==t.texture.format||1015!==t.texture.type&&1016!==t.texture.type||(t.texture.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){r.__webglFramebuffer=[];for(let t=0;t<6;t++)r.__webglFramebuffer[t]=e.createFramebuffer()}else if(r.__webglFramebuffer=e.createFramebuffer(),h)if(a){r.__webglMultisampledFramebuffer=e.createFramebuffer(),r.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,r.__webglColorRenderbuffer);const i=s.convert(t.texture.format),n=s.convert(t.texture.type),o=_(t.texture.internalFormat,i,n),a=N(t);e.renderbufferStorageMultisample(36161,a,o,t.width,t.height),e.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(r.__webglDepthRenderbuffer=e.createRenderbuffer(),I(r.__webglDepthRenderbuffer,t,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(c){i.bindTexture(34067,l.__webglTexture),E(34067,t.texture,u);for(let e=0;e<6;e++)B(r.__webglFramebuffer[e],t,36064,34069+e);v(t.texture,u)&&b(34067,t.texture,t.width,t.height),i.bindTexture(34067,null)}else i.bindTexture(3553,l.__webglTexture),E(3553,t.texture,u),B(r.__webglFramebuffer,t,36064,3553),v(t.texture,u)&&b(3553,t.texture,t.width,t.height),i.bindTexture(3553,null);t.depthBuffer&&D(t)},this.updateRenderTargetMipmap=function(e){const t=e.texture;if(v(t,y(e)||a)){const r=e.isWebGLCubeRenderTarget?34067:3553,s=n.get(t).__webglTexture;i.bindTexture(r,s),b(r,t,e.width,e.height),i.bindTexture(r,null)}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(a){const i=n.get(t);e.bindFramebuffer(36008,i.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,i.__webglFramebuffer);const r=t.width,s=t.height;let o=16384;t.depthBuffer&&(o|=256),t.stencilBuffer&&(o|=1024),e.blitFramebuffer(0,0,r,s,0,0,r,s,o,9728),e.bindFramebuffer(36160,i.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===O&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0),e=e.texture),C(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===k&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),k=!0),e=e.texture),T(e,t)}}function WebGLUtils(e,t,i){const n=i.isWebGL2;return{convert:function(e){let i;if(1009===e)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(1012===e)return 5123;if(1013===e)return 5124;if(1014===e)return 5125;if(1015===e)return 5126;if(1016===e)return n?5131:(i=t.get("OES_texture_half_float"),null!==i?i.HALF_FLOAT_OES:null);if(1021===e)return 6406;if(1022===e)return 6407;if(1023===e)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(1026===e)return 6402;if(1027===e)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e){if(i=t.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(33776===e)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(i=t.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(35840===e)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return i=t.get("WEBGL_compressed_texture_etc1"),null!==i?i.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===e||37496===e)&&(i=t.get("WEBGL_compressed_texture_etc"),null!==i)){if(37492===e)return i.COMPRESSED_RGB8_ETC2;if(37496===e)return i.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?(i=t.get("WEBGL_compressed_texture_astc"),null!==i?e:null):36492===e?(i=t.get("EXT_texture_compression_bptc"),null!==i?e:null):1020===e?n?34042:(i=t.get("WEBGL_depth_texture"),null!==i?i.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function ArrayCamera(e){PerspectiveCamera.call(this),this.cameras=e||[]}function Group(){Object3D.call(this),this.type="Group"}function WebXRController(){this._targetRay=null,this._grip=null,this._hand=null}function WebXRManager(e,t){const i=this;let n=null,r=1,s=null,o="local-floor",a=null;const l=[],c=new Map,h=new PerspectiveCamera;h.layers.enable(1),h.viewport=new Vector4;const u=new PerspectiveCamera;u.layers.enable(2),u.viewport=new Vector4;const d=[h,u],p=new ArrayCamera;p.layers.enable(1),p.layers.enable(2);let m=null,f=null;function g(e){const t=c.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function y(){c.forEach((function(e,t){e.disconnect(t)})),c.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),M.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function v(e){s=e,M.setContext(n),M.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}function b(e){const t=n.inputSources;for(let e=0;e<l.length;e++)c.set(t[e],l[e]);for(let t=0;t<e.removed.length;t++){const i=e.removed[t],n=c.get(i);n&&(n.dispatchEvent({type:"disconnected",data:i}),c.delete(i))}for(let t=0;t<e.added.length;t++){const i=e.added[t],n=c.get(i);n&&n.dispatchEvent({type:"connected",data:i})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=l[e];return void 0===t&&(t=new WebXRController,l[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=l[e];return void 0===t&&(t=new WebXRController,l[e]=t),t.getGripSpace()},this.getHand=function(e){let t=l[e];return void 0===t&&(t=new WebXRController,l[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){o=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return n},this.setSession=function(e){if(n=e,null!==n){n.addEventListener("select",g),n.addEventListener("selectstart",g),n.addEventListener("selectend",g),n.addEventListener("squeeze",g),n.addEventListener("squeezestart",g),n.addEventListener("squeezeend",g),n.addEventListener("end",y);const e=t.getContextAttributes();!0!==e.xrCompatible&&t.makeXRCompatible();const i={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:r},s=new XRWebGLLayer(n,t,i);n.updateRenderState({baseLayer:s}),n.requestReferenceSpace(o).then(v),n.addEventListener("inputsourceschange",b)}};const _=new Vector3,x=new Vector3;function w(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}this.getCamera=function(e){p.near=u.near=h.near=e.near,p.far=u.far=h.far=e.far,m===p.near&&f===p.far||(n.updateRenderState({depthNear:p.near,depthFar:p.far}),m=p.near,f=p.far);const t=e.parent,i=p.cameras;w(p,t);for(let e=0;e<i.length;e++)w(i[e],t);e.matrixWorld.copy(p.matrixWorld);const r=e.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(!0);return 2===i.length?function(e,t,i){_.setFromMatrixPosition(t.matrixWorld),x.setFromMatrixPosition(i.matrixWorld);const n=_.distanceTo(x),r=t.projectionMatrix.elements,s=i.projectionMatrix.elements,o=r[14]/(r[10]-1),a=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(s[8]+1)/s[0],d=o*h,p=o*u,m=n/(-h+u),f=m*-h;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(f),e.translateZ(m),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld);const g=o+m,y=a+m,v=d-f,b=p+(n-f),w=l*a/y*g,S=c*a/y*g;e.projectionMatrix.makePerspective(v,b,w,S,g,y)}(p,h,u):p.projectionMatrix.copy(h.projectionMatrix),p};let S=null;const M=new WebGLAnimation;M.setAnimationLoop((function(t,i){if(a=i.getViewerPose(s),null!==a){const t=a.views,i=n.renderState.baseLayer;e.setFramebuffer(i.framebuffer);let r=!1;t.length!==p.cameras.length&&(p.cameras.length=0,r=!0);for(let e=0;e<t.length;e++){const n=t[e],s=i.getViewport(n),o=d[e];o.matrix.fromArray(n.transform.matrix),o.projectionMatrix.fromArray(n.projectionMatrix),o.viewport.set(s.x,s.y,s.width,s.height),0===e&&p.matrix.copy(o.matrix),!0===r&&p.cameras.push(o)}}const r=n.inputSources;for(let e=0;e<l.length;e++){const t=l[e],n=r[e];t.update(n,i,s)}S&&S(t,i)})),this.setAnimationLoop=function(e){S=e},this.dispose=function(){}}function WebGLMaterials(e){function t(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map),i.alphaMap&&(t.alphaMap.value=i.alphaMap),i.specularMap&&(t.specularMap.value=i.specularMap);const n=e.get(i).envMap;if(n){t.envMap.value=n,t.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,t.reflectivity.value=i.reflectivity,t.refractionRatio.value=i.refractionRatio;const r=e.get(n).__maxMipLevel;void 0!==r&&(t.maxMipLevel.value=r)}let r,s;i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity),i.map?r=i.map:i.specularMap?r=i.specularMap:i.displacementMap?r=i.displacementMap:i.normalMap?r=i.normalMap:i.bumpMap?r=i.bumpMap:i.roughnessMap?r=i.roughnessMap:i.metalnessMap?r=i.metalnessMap:i.alphaMap?r=i.alphaMap:i.emissiveMap?r=i.emissiveMap:i.clearcoatMap?r=i.clearcoatMap:i.clearcoatNormalMap?r=i.clearcoatNormalMap:i.clearcoatRoughnessMap&&(r=i.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uvTransform.value.copy(r.matrix)),i.aoMap?s=i.aoMap:i.lightMap&&(s=i.lightMap),void 0!==s&&(s.isWebGLRenderTarget&&(s=s.texture),!0===s.matrixAutoUpdate&&s.updateMatrix(),t.uv2Transform.value.copy(s.matrix))}function i(t,i){t.roughness.value=i.roughness,t.metalness.value=i.metalness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap),i.bumpMap&&(t.bumpMap.value=i.bumpMap,t.bumpScale.value=i.bumpScale,1===i.side&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,t.normalScale.value.copy(i.normalScale),1===i.side&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias);e.get(i).envMap&&(t.envMapIntensity.value=i.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,n,r,s){n.isMeshBasicMaterial?t(e,n):n.isMeshLambertMaterial?(t(e,n),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,n)):n.isMeshToonMaterial?(t(e,n),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshPhongMaterial?(t(e,n),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshStandardMaterial?(t(e,n),n.isMeshPhysicalMaterial?function(e,t){i(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate());e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}(e,n):i(e,n)):n.isMeshMatcapMaterial?(t(e,n),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDepthMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isMeshDistanceMaterial?(t(e,n),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,n)):n.isMeshNormalMaterial?(t(e,n),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,n)):n.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,n),n.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,n)):n.isPointsMaterial?function(e,t,i,n){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*i,e.scale.value=.5*n,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,n,r,s):n.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,n):n.isShadowMaterial?(e.color.value.copy(n.color),e.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function WebGLRenderer(e){const t=void 0!==(e=e||{}).canvas?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),i=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,s=void 0===e.stencil||e.stencil,o=void 0!==e.antialias&&e.antialias,a=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,c=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let u=null,d=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let m=!1,f=null,g=0,y=0,v=null,b=null,_=-1,x=null,w=null;const S=new Vector4,M=new Vector4;let C=null,T=t.width,A=t.height,L=1,E=null,P=null;const R=new Vector4(0,0,T,A),B=new Vector4(0,0,T,A);let I=!1;const D=new Frustum;let N=!1,O=!1;const k=new Matrix4,H=new Vector3,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function G(){return null===v?L:1}let U,V,z,j,W,q,$,X,Y,K,J,Z,Q,ee,te,ie,ne,re,se,oe,ae,le=i;function ce(e,i){for(let n=0;n<e.length;n++){const r=e[n],s=t.getContext(r,i);if(null!==s)return s}return null}try{const e={alpha:n,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",pe,!1),t.addEventListener("webglcontextrestored",me,!1),null===le){const t=["webgl2","webgl","experimental-webgl"];if(!0===p.isWebGL1Renderer&&t.shift(),le=ce(t,e),null===le)throw ce(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===le.getShaderPrecisionFormat&&(le.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function he(){U=new WebGLExtensions(le),V=new WebGLCapabilities(le,U,e),!1===V.isWebGL2&&(U.get("WEBGL_depth_texture"),U.get("OES_texture_float"),U.get("OES_texture_half_float"),U.get("OES_texture_half_float_linear"),U.get("OES_standard_derivatives"),U.get("OES_element_index_uint"),U.get("OES_vertex_array_object"),U.get("ANGLE_instanced_arrays")),U.get("OES_texture_float_linear"),oe=new WebGLUtils(le,U,V),z=new WebGLState(le,U,V),z.scissor(M.copy(B).multiplyScalar(L).floor()),z.viewport(S.copy(R).multiplyScalar(L).floor()),j=new WebGLInfo,W=new WebGLProperties,q=new WebGLTextures(le,U,z,W,V,oe,j),$=new WebGLCubeMaps(p),X=new WebGLAttributes(le,V),ae=new WebGLBindingStates(le,U,X,V),Y=new WebGLGeometries(le,X,j,ae),K=new WebGLObjects(le,Y,X,j),ne=new WebGLMorphtargets(le),te=new WebGLClipping(W),J=new WebGLPrograms(p,$,U,V,ae,te),Z=new WebGLMaterials(W),Q=new WebGLRenderLists(W),ee=new WebGLRenderStates,ie=new WebGLBackground(p,$,z,K,a),re=new WebGLBufferRenderer(le,U,j,V),se=new WebGLIndexedBufferRenderer(le,U,j,V),j.programs=J.programs,p.capabilities=V,p.extensions=U,p.properties=W,p.renderLists=Q,p.state=z,p.info=j}he();const ue=new WebXRManager(p,le);this.xr=ue;const de=new WebGLShadowMap(p,K,V.maxTextureSize);function pe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function me(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,he()}function fe(e){const t=e.target;t.removeEventListener("dispose",fe),function(e){ge(e),W.remove(e)}(t)}function ge(e){const t=W.get(e).program;void 0!==t&&J.releaseProgram(t)}this.shadowMap=de,this.getContext=function(){return le},this.getContextAttributes=function(){return le.getContextAttributes()},this.forceContextLoss=function(){const e=U.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=U.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(e){void 0!==e&&(L=e,this.setSize(T,A,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Vector2),e.set(T,A)},this.setSize=function(e,i,n){ue.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(T=e,A=i,t.width=Math.floor(e*L),t.height=Math.floor(i*L),!1!==n&&(t.style.width=e+"px",t.style.height=i+"px"),this.setViewport(0,0,e,i))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Vector2),e.set(T*L,A*L).floor()},this.setDrawingBufferSize=function(e,i,n){T=e,A=i,L=n,t.width=Math.floor(e*n),t.height=Math.floor(i*n),this.setViewport(0,0,e,i)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new Vector4),e.copy(S)},this.getViewport=function(e){return e.copy(R)},this.setViewport=function(e,t,i,n){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,t,i,n),z.viewport(S.copy(R).multiplyScalar(L).floor())},this.getScissor=function(e){return e.copy(B)},this.setScissor=function(e,t,i,n){e.isVector4?B.set(e.x,e.y,e.z,e.w):B.set(e,t,i,n),z.scissor(M.copy(B).multiplyScalar(L).floor())},this.getScissorTest=function(){return I},this.setScissorTest=function(e){z.setScissorTest(I=e)},this.setOpaqueSort=function(e){E=e},this.setTransparentSort=function(e){P=e},this.getClearColor=function(){return ie.getClearColor()},this.setClearColor=function(){ie.setClearColor.apply(ie,arguments)},this.getClearAlpha=function(){return ie.getClearAlpha()},this.setClearAlpha=function(){ie.setClearAlpha.apply(ie,arguments)},this.clear=function(e,t,i){let n=0;(void 0===e||e)&&(n|=16384),(void 0===t||t)&&(n|=256),(void 0===i||i)&&(n|=1024),le.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",pe,!1),t.removeEventListener("webglcontextrestored",me,!1),Q.dispose(),ee.dispose(),W.dispose(),$.dispose(),K.dispose(),ae.dispose(),ue.dispose(),ve.stop()},this.renderBufferImmediate=function(e,t){ae.initAttributes();const i=W.get(e);e.hasPositions&&!i.position&&(i.position=le.createBuffer()),e.hasNormals&&!i.normal&&(i.normal=le.createBuffer()),e.hasUvs&&!i.uv&&(i.uv=le.createBuffer()),e.hasColors&&!i.color&&(i.color=le.createBuffer());const n=t.getAttributes();e.hasPositions&&(le.bindBuffer(34962,i.position),le.bufferData(34962,e.positionArray,35048),ae.enableAttribute(n.position),le.vertexAttribPointer(n.position,3,5126,!1,0,0)),e.hasNormals&&(le.bindBuffer(34962,i.normal),le.bufferData(34962,e.normalArray,35048),ae.enableAttribute(n.normal),le.vertexAttribPointer(n.normal,3,5126,!1,0,0)),e.hasUvs&&(le.bindBuffer(34962,i.uv),le.bufferData(34962,e.uvArray,35048),ae.enableAttribute(n.uv),le.vertexAttribPointer(n.uv,2,5126,!1,0,0)),e.hasColors&&(le.bindBuffer(34962,i.color),le.bufferData(34962,e.colorArray,35048),ae.enableAttribute(n.color),le.vertexAttribPointer(n.color,3,5126,!1,0,0)),ae.disableUnusedAttributes(),le.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,n,r,s){null===t&&(t=F);const o=r.isMesh&&r.matrixWorld.determinant()<0,a=Se(e,t,n,r);z.setMaterial(n,o);let l=i.index;const c=i.attributes.position;if(null===l){if(void 0===c||0===c.count)return}else if(0===l.count)return;let h,u=1;!0===n.wireframe&&(l=Y.getWireframeAttribute(i),u=2),(n.morphTargets||n.morphNormals)&&ne.update(r,i,n,a),ae.setup(r,n,a,i,l);let d=re;null!==l&&(h=X.get(l),d=se,d.setIndex(h));const p=null!==l?l.count:c.count,m=i.drawRange.start*u,f=i.drawRange.count*u,g=null!==s?s.start*u:0,y=null!==s?s.count*u:1/0,v=Math.max(m,g),b=Math.min(p,m+f,g+y)-1,_=Math.max(0,b-v+1);if(0!==_){if(r.isMesh)!0===n.wireframe?(z.setLineWidth(n.wireframeLinewidth*G()),d.setMode(1)):d.setMode(4);else if(r.isLine){let e=n.linewidth;void 0===e&&(e=1),z.setLineWidth(e*G()),r.isLineSegments?d.setMode(1):r.isLineLoop?d.setMode(2):d.setMode(3)}else r.isPoints?d.setMode(0):r.isSprite&&d.setMode(4);if(r.isInstancedMesh)d.renderInstances(v,_,r.count);else if(i.isInstancedBufferGeometry){const e=Math.min(i.instanceCount,i._maxInstanceCount);d.renderInstances(v,_,e)}else d.render(v,_)}},this.compile=function(e,t){d=ee.get(e,t),d.init(),e.traverse((function(e){e.isLight&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))})),d.setupLights(t);const i=new WeakMap;e.traverse((function(t){const n=t.material;if(n)if(Array.isArray(n))for(let r=0;r<n.length;r++){const s=n[r];!1===i.has(s)&&(we(s,e,t),i.set(s))}else!1===i.has(n)&&(we(n,e,t),i.set(n))}))};let ye=null;const ve=new WebGLAnimation;function be(e,t,i,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)i=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)d.pushLight(e),e.castShadow&&d.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||D.intersectsSprite(e)){n&&H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(k);const t=K.update(e),r=e.material;r.visible&&u.push(e,t,r,i,H.z,null)}}else if(e.isImmediateRenderObject)n&&H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(k),u.push(e,null,e.material,i,H.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==j.render.frame&&(e.skeleton.update(),e.skeleton.frame=j.render.frame),!e.frustumCulled||D.intersectsObject(e))){n&&H.setFromMatrixPosition(e.matrixWorld).applyMatrix4(k);const t=K.update(e),r=e.material;if(Array.isArray(r)){const n=t.groups;for(let s=0,o=n.length;s<o;s++){const o=n[s],a=r[o.materialIndex];a&&a.visible&&u.push(e,t,a,i,H.z,o)}}else r.visible&&u.push(e,t,r,i,H.z,null)}const r=e.children;for(let e=0,s=r.length;e<s;e++)be(r[e],t,i,n)}function _e(e,t,i){const n=!0===t.isScene?t.overrideMaterial:null;for(let r=0,s=e.length;r<s;r++){const s=e[r],o=s.object,a=s.geometry,l=null===n?s.material:n,c=s.group;if(i.isArrayCamera){w=i;const e=i.cameras;for(let i=0,n=e.length;i<n;i++){const n=e[i];o.layers.test(n.layers)&&(z.viewport(S.copy(n.viewport)),d.setupLights(n),xe(o,t,n,a,l,c))}}else w=null,xe(o,t,i,a,l,c)}}function xe(e,t,i,n,r,s){if(e.onBeforeRender(p,t,i,n,r,s),d=ee.get(t,w||i),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){const n=Se(i,t,r,e);z.setMaterial(r),ae.reset(),function(e,t){e.render((function(e){p.renderBufferImmediate(e,t)}))}(e,n)}else p.renderBufferDirect(i,t,n,r,e,s);e.onAfterRender(p,t,i,n,r,s),d=ee.get(t,w||i)}function we(e,t,i){!0!==t.isScene&&(t=F);const n=W.get(e),r=d.state.lights,s=d.state.shadowsArray,o=r.state.version,a=J.getParameters(e,r.state,s,t,i),l=J.getProgramCacheKey(a);let c=n.program,h=!0;if(void 0===c)e.addEventListener("dispose",fe);else if(c.cacheKey!==l)ge(e);else if(n.lightsStateVersion!==o)h=!1;else{if(void 0!==a.shaderID){const i=e.isMeshStandardMaterial?t.environment:null;return void(n.envMap=$.get(e.envMap||i))}h=!1}h&&(a.uniforms=J.getUniforms(e),e.onBeforeCompile(a,p),c=J.acquireProgram(a,l),n.program=c,n.uniforms=a.uniforms,n.outputEncoding=a.outputEncoding);const u=n.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(n.numClippingPlanes=te.numPlanes,n.numIntersection=te.numIntersection,u.clippingPlanes=te.uniform),n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=$.get(e.envMap||n.environment),n.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),n.lightsStateVersion=o,n.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotShadowMatrix.value=r.state.spotShadowMatrix,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const m=n.program.getUniforms(),f=WebGLUniforms.seqWithValue(m.seq,u);n.uniformsList=f}function Se(e,t,i,n){!0!==t.isScene&&(t=F),q.resetTextureUnits();const r=t.fog,s=i.isMeshStandardMaterial?t.environment:null,o=null===v?p.outputEncoding:v.texture.encoding,a=$.get(i.envMap||s),l=W.get(i),c=d.state.lights;if(!0===N&&(!0===O||e!==x)){const t=e===x&&i.id===_;te.setState(i,e,t)}i.version===l.__version?i.fog&&l.fog!==r||l.environment!==s||l.needsLights&&l.lightsStateVersion!==c.state.version?we(i,t,n):void 0===l.numClippingPlanes||l.numClippingPlanes===te.numPlanes&&l.numIntersection===te.numIntersection?(l.outputEncoding!==o||l.envMap!==a)&&we(i,t,n):we(i,t,n):(we(i,t,n),l.__version=i.version);let h=!1,u=!1,m=!1;const f=l.program,g=f.getUniforms(),y=l.uniforms;if(z.useProgram(f.program)&&(h=!0,u=!0,m=!0),i.id!==_&&(_=i.id,u=!0),h||x!==e){if(g.setValue(le,"projectionMatrix",e.projectionMatrix),V.logarithmicDepthBuffer&&g.setValue(le,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),x!==e&&(x=e,u=!0,m=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const t=g.map.cameraPosition;void 0!==t&&t.setValue(le,H.setFromMatrixPosition(e.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&g.setValue(le,"isOrthographic",!0===e.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||i.skinning)&&g.setValue(le,"viewMatrix",e.matrixWorldInverse)}if(i.skinning){g.setOptional(le,n,"bindMatrix"),g.setOptional(le,n,"bindMatrixInverse");const e=n.skeleton;if(e){const t=e.bones;if(V.floatVertexTextures){if(void 0===e.boneTexture){let i=Math.sqrt(4*t.length);i=MathUtils.ceilPowerOfTwo(i),i=Math.max(i,4);const n=new Float32Array(i*i*4);n.set(e.boneMatrices);const r=new DataTexture(n,i,i,1023,1015);e.boneMatrices=n,e.boneTexture=r,e.boneTextureSize=i}g.setValue(le,"boneTexture",e.boneTexture,q),g.setValue(le,"boneTextureSize",e.boneTextureSize)}else g.setOptional(le,e,"boneMatrices")}}var b,w;return(u||l.receiveShadow!==n.receiveShadow)&&(l.receiveShadow=n.receiveShadow,g.setValue(le,"receiveShadow",n.receiveShadow)),u&&(g.setValue(le,"toneMappingExposure",p.toneMappingExposure),l.needsLights&&(w=m,(b=y).ambientLightColor.needsUpdate=w,b.lightProbe.needsUpdate=w,b.directionalLights.needsUpdate=w,b.directionalLightShadows.needsUpdate=w,b.pointLights.needsUpdate=w,b.pointLightShadows.needsUpdate=w,b.spotLights.needsUpdate=w,b.spotLightShadows.needsUpdate=w,b.rectAreaLights.needsUpdate=w,b.hemisphereLights.needsUpdate=w),r&&i.fog&&Z.refreshFogUniforms(y,r),Z.refreshMaterialUniforms(y,i,L,A),WebGLUniforms.upload(le,l.uniformsList,y,q)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(WebGLUniforms.upload(le,l.uniformsList,y,q),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&g.setValue(le,"center",n.center),g.setValue(le,"modelViewMatrix",n.modelViewMatrix),g.setValue(le,"normalMatrix",n.normalMatrix),g.setValue(le,"modelMatrix",n.matrixWorld),f}ve.setAnimationLoop((function(e){ue.isPresenting||ye&&ye(e)})),"undefined"!=typeof window&&ve.setContext(window),this.setAnimationLoop=function(e){ye=e,ue.setAnimationLoop(e),null===e?ve.stop():ve.start()},this.render=function(e,t){let i,n;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),i=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),n=arguments[3]),void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===m)return;ae.resetDefaultState(),_=-1,x=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===ue.enabled&&!0===ue.isPresenting&&(t=ue.getCamera(t)),!0===e.isScene&&e.onBeforeRender(p,e,t,i||v),d=ee.get(e,t),d.init(),k.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),D.setFromProjectionMatrix(k),O=this.localClippingEnabled,N=te.init(this.clippingPlanes,O,t),u=Q.get(e,t),u.init(),be(e,t,0,p.sortObjects),u.finish(),!0===p.sortObjects&&u.sort(E,P),!0===N&&te.beginShadows();const r=d.state.shadowsArray;de.render(r,e,t),d.setupLights(t),!0===N&&te.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==i&&this.setRenderTarget(i),ie.render(u,e,t,n);const s=u.opaque,o=u.transparent;s.length>0&&_e(s,e,t),o.length>0&&_e(o,e,t),!0===e.isScene&&e.onAfterRender(p,e,t),null!==v&&(q.updateRenderTargetMipmap(v),q.updateMultisampleRenderTarget(v)),z.buffers.depth.setTest(!0),z.buffers.depth.setMask(!0),z.buffers.color.setMask(!0),z.setPolygonOffset(!1),u=null,d=null},this.setFramebuffer=function(e){f!==e&&null===v&&le.bindFramebuffer(36160,e),f=e},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return y},this.getRenderList=function(){return u},this.setRenderList=function(e){u=e},this.getRenderState=function(){return d},this.setRenderState=function(e){d=e},this.getRenderTarget=function(){return v},this.setRenderTarget=function(e,t=0,i=0){v=e,g=t,y=i,e&&void 0===W.get(e).__webglFramebuffer&&q.setupRenderTarget(e);let n=f,r=!1;if(e){const i=W.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(n=i[t],r=!0):n=e.isWebGLMultisampleRenderTarget?W.get(e).__webglMultisampledFramebuffer:i,S.copy(e.viewport),M.copy(e.scissor),C=e.scissorTest}else S.copy(R).multiplyScalar(L).floor(),M.copy(B).multiplyScalar(L).floor(),C=I;if(b!==n&&(le.bindFramebuffer(36160,n),b=n),z.viewport(S),z.scissor(M),z.setScissorTest(C),r){const n=W.get(e.texture);le.framebufferTexture2D(36160,36064,34069+t,n.__webglTexture,i)}},this.readRenderTargetPixels=function(e,t,i,n,r,s,o){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=W.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(a=a[o]),a){let o=!1;a!==b&&(le.bindFramebuffer(36160,a),o=!0);try{const a=e.texture,l=a.format,c=a.type;if(1023!==l&&oe.convert(l)!==le.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(1009===c||oe.convert(c)===le.getParameter(35738)||1015===c&&(V.isWebGL2||U.get("OES_texture_float")||U.get("WEBGL_color_buffer_float"))||1016===c&&(V.isWebGL2?U.get("EXT_color_buffer_float"):U.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===le.checkFramebufferStatus(36160)?t>=0&&t<=e.width-n&&i>=0&&i<=e.height-r&&le.readPixels(t,i,n,r,oe.convert(l),oe.convert(c),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{o&&le.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(e,t,i){void 0===i&&(i=0);const n=Math.pow(2,-i),r=Math.floor(t.image.width*n),s=Math.floor(t.image.height*n),o=oe.convert(t.format);q.setTexture2D(t,0),le.copyTexImage2D(3553,i,o,e.x,e.y,r,s,0),z.unbindTexture()},this.copyTextureToTexture=function(e,t,i,n){void 0===n&&(n=0);const r=t.image.width,s=t.image.height,o=oe.convert(i.format),a=oe.convert(i.type);q.setTexture2D(i,0),le.pixelStorei(37440,i.flipY),le.pixelStorei(37441,i.premultiplyAlpha),le.pixelStorei(3317,i.unpackAlignment),t.isDataTexture?le.texSubImage2D(3553,n,e.x,e.y,r,s,o,a,t.image.data):t.isCompressedTexture?le.compressedTexSubImage2D(3553,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):le.texSubImage2D(3553,n,e.x,e.y,o,a,t.image),0===n&&i.generateMipmaps&&le.generateMipmap(3553),z.unbindTexture()},this.initTexture=function(e){q.setTexture2D(e,0),z.unbindTexture()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function WebGL1Renderer(e){WebGLRenderer.call(this,e)}ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:!0}),Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:!0}),Object.assign(WebXRController.prototype,{constructor:WebXRController,getHandSpace:function(){if(null===this._hand&&(this._hand=new Group,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let e=0;e<=window.XRHand.LITTLE_PHALANX_TIP;e++){const e=new Group;e.matrixAutoUpdate=!1,e.visible=!1,this._hand.joints.push(e),this._hand.add(e)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Group,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Group,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(e,t,i){let n=null,r=null,s=null;const o=this._targetRay,a=this._grip,l=this._hand;if(e)if(l&&e.hand){s=!0;for(let n=0;n<=window.XRHand.LITTLE_PHALANX_TIP;n++)if(e.hand[n]){const r=t.getJointPose(e.hand[n],i),s=l.joints[n];null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.jointRadius=r.radius),s.visible=null!==r;const o=l.joints[window.XRHand.INDEX_PHALANX_TIP],a=l.joints[window.XRHand.THUMB_PHALANX_TIP],c=o.position.distanceTo(a.position),h=.02,u=.005;l.inputState.pinching&&c>h+u?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&c<=h-u&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}}else null!==o&&(n=t.getPose(e.targetRaySpace,i),null!==n&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),null!==a&&e.gripSpace&&(r=t.getPose(e.gripSpace,i),null!==r&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return null!==o&&(o.visible=null!==n),null!==a&&(a.visible=null!==r),null!==l&&(l.visible=null!==s),this}}),Object.assign(WebXRManager.prototype,EventDispatcher.prototype),WebGL1Renderer.prototype=Object.assign(Object.create(WebGLRenderer.prototype),{constructor:WebGL1Renderer,isWebGL1Renderer:!0});class FogExp2{constructor(e,t){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new Color(e),this.density=void 0!==t?t:25e-5}clone(){return new FogExp2(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Fog{constructor(e,t,i){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3}clone(){return new Fog(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Scene extends Object3D{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}function InterleavedBuffer(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=MathUtils.generateUUID()}Object.defineProperty(InterleavedBuffer.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,r=this.stride;n<r;n++)this.array[e+n]=t.array[i+n];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new InterleavedBuffer(new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),this.stride);return t.setUsage(this.usage),t},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=MathUtils.generateUUID()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const _vector$6=new Vector3;function InterleavedBufferAttribute(e,t,i,n){this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=!0===n}function SpriteMaterial(e){Material.call(this),this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}let _geometry;Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}}),Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,i=this.data.count;t<i;t++)_vector$6.x=this.getX(t),_vector$6.y=this.getY(t),_vector$6.z=this.getZ(t),_vector$6.applyMatrix4(e),this.setXYZ(t,_vector$6.x,_vector$6.y,_vector$6.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this},setXYZ:function(e,t,i,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this},setXYZW:function(e,t,i,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=r,this},clone:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return new BufferAttribute(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new InterleavedBufferAttribute(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[i+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),SpriteMaterial.prototype=Object.create(Material.prototype),SpriteMaterial.prototype.constructor=SpriteMaterial,SpriteMaterial.prototype.isSpriteMaterial=!0,SpriteMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};const _intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2;function Sprite(e){if(Object3D.call(this),this.type="Sprite",void 0===_geometry){_geometry=new BufferGeometry;const e=new InterleavedBuffer(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);_geometry.setIndex([0,1,2,0,2,3]),_geometry.setAttribute("position",new InterleavedBufferAttribute(e,3,0,!1)),_geometry.setAttribute("uv",new InterleavedBufferAttribute(e,2,3,!1))}this.geometry=_geometry,this.material=void 0!==e?e:new SpriteMaterial,this.center=new Vector2(.5,.5)}function transformVertex(e,t,i,n,r,s){_alignedPosition.subVectors(e,i).addScalar(.5).multiply(n),void 0!==r?(_rotatedPosition.x=s*_alignedPosition.x-r*_alignedPosition.y,_rotatedPosition.y=r*_alignedPosition.x+s*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition),e.copy(t),e.x+=_rotatedPosition.x,e.y+=_rotatedPosition.y,e.applyMatrix4(_viewWorldMatrix)}Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:!0,raycast:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),_worldScale.setFromMatrixScale(this.matrixWorld),_viewWorldMatrix.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_mvPosition.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&_worldScale.multiplyScalar(-_mvPosition.z);const i=this.material.rotation;let n,r;0!==i&&(r=Math.cos(i),n=Math.sin(i));const s=this.center;transformVertex(_vA$1.set(-.5,-.5,0),_mvPosition,s,_worldScale,n,r),transformVertex(_vB$1.set(.5,-.5,0),_mvPosition,s,_worldScale,n,r),transformVertex(_vC$1.set(.5,.5,0),_mvPosition,s,_worldScale,n,r),_uvA$1.set(0,0),_uvB$1.set(1,0),_uvC$1.set(1,1);let o=e.ray.intersectTriangle(_vA$1,_vB$1,_vC$1,!1,_intersectPoint);if(null===o&&(transformVertex(_vB$1.set(-.5,.5,0),_mvPosition,s,_worldScale,n,r),_uvB$1.set(0,1),o=e.ray.intersectTriangle(_vA$1,_vC$1,_vB$1,!1,_intersectPoint),null===o))return;const a=e.ray.origin.distanceTo(_intersectPoint);a<e.near||a>e.far||t.push({distance:a,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2),face:null,object:this})},copy:function(e){return Object3D.prototype.copy.call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}});const _v1$4=new Vector3,_v2$2=new Vector3;function LOD(){Object3D.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}function SkinnedMesh(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4}LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,isLOD:!0,copy:function(e){Object3D.prototype.copy.call(this,e,!1);const t=e.levels;for(let e=0,i=t.length;e<i;e++){const i=t[e];this.addLevel(i.object.clone(),i.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){void 0===t&&(t=0),t=Math.abs(t);const i=this.levels;let n;for(n=0;n<i.length&&!(t<i[n].distance);n++);return i.splice(n,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let i,n;for(i=1,n=t.length;i<n&&!(e<t[i].distance);i++);return t[i-1].object}return null},raycast:function(e,t){if(this.levels.length>0){_v1$4.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(_v1$4);this.getObjectForDistance(i).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){_v1$4.setFromMatrixPosition(e.matrixWorld),_v2$2.setFromMatrixPosition(this.matrixWorld);const i=_v1$4.distanceTo(_v2$2)/e.zoom;let n,r;for(t[0].object.visible=!0,n=1,r=t.length;n<r&&i>=t[n].distance;n++)t[n-1].object.visible=!1,t[n].object.visible=!0;for(this._currentLevel=n-1;n<r;n++)t[n].object.visible=!1}},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];const i=this.levels;for(let e=0,n=i.length;e<n;e++){const n=i[e];t.object.levels.push({object:n.object.uuid,distance:n.distance})}return t}}),SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,copy:function(e){return Mesh.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new Vector4,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.w=t.getW(i);const n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){Mesh.prototype.updateMatrixWorld.call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const e=new Vector3,t=new Vector4,i=new Vector4,n=new Vector3,r=new Matrix4;return function(s,o){const a=this.skeleton,l=this.geometry;t.fromBufferAttribute(l.attributes.skinIndex,s),i.fromBufferAttribute(l.attributes.skinWeight,s),e.fromBufferAttribute(l.attributes.position,s).applyMatrix4(this.bindMatrix),o.set(0,0,0);for(let s=0;s<4;s++){const l=i.getComponent(s);if(0!==l){const i=t.getComponent(s);r.multiplyMatrices(a.bones[i].matrixWorld,a.boneInverses[i]),o.addScaledVector(n.copy(e).applyMatrix4(r),l)}}return o.applyMatrix4(this.bindMatrixInverse)}}()});const _offsetMatrix=new Matrix4,_identityMatrix=new Matrix4;function Skeleton(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),this.frame=-1,void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Matrix4)}}function Bone(){Object3D.call(this),this.type="Bone"}Object.assign(Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){const t=new Matrix4;this.bones[e]&&t.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(t)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&t.matrixWorld.getInverse(this.boneInverses[e])}for(let e=0,t=this.bones.length;e<t;e++){const t=this.bones[e];t&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}},update:function(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let n=0,r=e.length;n<r;n++){const r=e[n]?e[n].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(r,t[n]),_offsetMatrix.toArray(i,16*n)}void 0!==n&&(n.needsUpdate=!0)},clone:function(){return new Skeleton(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,i=this.bones.length;t<i;t++){const i=this.bones[t];if(i.name===e)return i}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}}),Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:!0});const _instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh;function InstancedMesh(e,t,i){Mesh.call(this,e,t),this.instanceMatrix=new BufferAttribute(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}function LineBasicMaterial(e){Material.call(this),this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:!0,copy:function(e){return Mesh.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},setColorAt:function(e,t){null===this.instanceColor&&(this.instanceColor=new BufferAttribute(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)},raycast:function(e,t){const i=this.matrixWorld,n=this.count;if(_mesh.geometry=this.geometry,_mesh.material=this.material,void 0!==_mesh.material)for(let r=0;r<n;r++){this.getMatrixAt(r,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(i,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(e,_instanceIntersects);for(let e=0,i=_instanceIntersects.length;e<i;e++){const i=_instanceIntersects[e];i.instanceId=r,i.object=this,t.push(i)}_instanceIntersects.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,16*e)},updateMorphTargets:function(){}}),LineBasicMaterial.prototype=Object.create(Material.prototype),LineBasicMaterial.prototype.constructor=LineBasicMaterial,LineBasicMaterial.prototype.isLineBasicMaterial=!0,LineBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const _start=new Vector3,_end=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$2=new Sphere;function Line(e,t,i){1===i&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new LineBasicMaterial,this.updateMorphTargets()}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,i=[0];for(let e=1,n=t.count;e<n;e++)_start.fromBufferAttribute(t,e-1),_end.fromBufferAttribute(t,e),i[e]=i[e-1],i[e]+=_start.distanceTo(_end);e.setAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,i=e.lineDistances;i[0]=0;for(let e=1,n=t.length;e<n;e++)i[e]=i[e-1],i[e]+=t[e-1].distanceTo(t[e])}return this},raycast:function(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Line.threshold;if(null===i.boundingSphere&&i.computeBoundingSphere(),_sphere$2.copy(i.boundingSphere),_sphere$2.applyMatrix4(n),_sphere$2.radius+=r,!1===e.ray.intersectsSphere(_sphere$2))return;_inverseMatrix$1.getInverse(n),_ray$1.copy(e.ray).applyMatrix4(_inverseMatrix$1);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new Vector3,l=new Vector3,c=new Vector3,h=new Vector3,u=this.isLineSegments?2:1;if(i.isBufferGeometry){const n=i.index,r=i.attributes.position;if(null!==n){const i=n.array;for(let n=0,s=i.length-1;n<s;n+=u){const s=i[n],u=i[n+1];a.fromBufferAttribute(r,s),l.fromBufferAttribute(r,u);if(_ray$1.distanceSqToSegment(a,l,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const d=e.ray.origin.distanceTo(h);d<e.near||d>e.far||t.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else for(let i=0,n=r.count-1;i<n;i+=u){a.fromBufferAttribute(r,i),l.fromBufferAttribute(r,i+1);if(_ray$1.distanceSqToSegment(a,l,h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const n=e.ray.origin.distanceTo(h);n<e.near||n>e.far||t.push({distance:n,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}else if(i.isGeometry){const n=i.vertices,r=n.length;for(let i=0;i<r-1;i+=u){if(_ray$1.distanceSqToSegment(n[i],n[i+1],h,c)>o)continue;h.applyMatrix4(this.matrixWorld);const r=e.ray.origin.distanceTo(h);r<e.near||r>e.far||t.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const _start$1=new Vector3,_end$1=new Vector3;function LineSegments(e,t){Line.call(this,e,t),this.type="LineSegments"}function LineLoop(e,t){Line.call(this,e,t),this.type="LineLoop"}function PointsMaterial(e){Material.call(this),this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,i=[];for(let e=0,n=t.count;e<n;e+=2)_start$1.fromBufferAttribute(t,e),_end$1.fromBufferAttribute(t,e+1),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+_start$1.distanceTo(_end$1);e.setAttribute("lineDistance",new Float32BufferAttribute(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,i=e.lineDistances;for(let e=0,n=t.length;e<n;e+=2)_start$1.copy(t[e]),_end$1.copy(t[e+1]),i[e]=0===e?0:i[e-1],i[e+1]=i[e]+_start$1.distanceTo(_end$1)}return this}}),LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:!0}),PointsMaterial.prototype=Object.create(Material.prototype),PointsMaterial.prototype.constructor=PointsMaterial,PointsMaterial.prototype.isPointsMaterial=!0,PointsMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const _inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_position$1=new Vector3;function Points(e,t){Object3D.call(this),this.type="Points",this.geometry=void 0!==e?e:new BufferGeometry,this.material=void 0!==t?t:new PointsMaterial,this.updateMorphTargets()}function testPoint(e,t,i,n,r,s,o){const a=_ray$2.distanceSqToPoint(e);if(a<i){const i=new Vector3;_ray$2.closestPointToPoint(e,i),i.applyMatrix4(n);const l=r.ray.origin.distanceTo(i);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:i,index:t,face:null,object:o})}}function VideoTexture(e,t,i,n,r,s,o,a,l){Texture.call(this,e,t,i,n,r,s,o,a,l),this.format=void 0!==o?o:1022,this.minFilter=void 0!==s?s:1006,this.magFilter=void 0!==r?r:1006,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){c.needsUpdate=!0,e.requestVideoFrameCallback(t)}))}function CompressedTexture(e,t,i,n,r,s,o,a,l,c,h,u){Texture.call(this,null,s,o,a,l,c,n,r,h,u),this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}function CanvasTexture(e,t,i,n,r,s,o,a,l){Texture.call(this,e,t,i,n,r,s,o,a,l),this.needsUpdate=!0}function DepthTexture(e,t,i,n,r,s,o,a,l,c){if(1026!==(c=void 0!==c?c:1026)&&1027!==c)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&1026===c&&(i=1012),void 0===i&&1027===c&&(i=1020),Texture.call(this,null,n,r,s,o,a,c,i,l),this.image={width:e,height:t},this.magFilter=void 0!==o?o:1003,this.minFilter=void 0!==a?a:1003,this.flipY=!1,this.generateMipmaps=!1}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const i=this.geometry,n=this.matrixWorld,r=e.params.Points.threshold;if(null===i.boundingSphere&&i.computeBoundingSphere(),_sphere$3.copy(i.boundingSphere),_sphere$3.applyMatrix4(n),_sphere$3.radius+=r,!1===e.ray.intersectsSphere(_sphere$3))return;_inverseMatrix$2.getInverse(n),_ray$2.copy(e.ray).applyMatrix4(_inverseMatrix$2);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(i.isBufferGeometry){const r=i.index,s=i.attributes.position;if(null!==r){const i=r.array;for(let r=0,a=i.length;r<a;r++){const a=i[r];_position$1.fromBufferAttribute(s,a),testPoint(_position$1,a,o,n,e,t,this)}}else for(let i=0,r=s.count;i<r;i++)_position$1.fromBufferAttribute(s,i),testPoint(_position$1,i,o,n,e,t,this)}else{const r=i.vertices;for(let i=0,s=r.length;i<s;i++)testPoint(r[i],i,o,n,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,i=Object.keys(t);if(i.length>0){const e=t[i[0]];if(void 0!==e){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,i=e.length;t<i;t++){const i=e[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,isVideoTexture:!0,update:function(){const e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),CompressedTexture.prototype=Object.create(Texture.prototype),CompressedTexture.prototype.constructor=CompressedTexture,CompressedTexture.prototype.isCompressedTexture=!0,CanvasTexture.prototype=Object.create(Texture.prototype),CanvasTexture.prototype.constructor=CanvasTexture,CanvasTexture.prototype.isCanvasTexture=!0,DepthTexture.prototype=Object.create(Texture.prototype),DepthTexture.prototype.constructor=DepthTexture,DepthTexture.prototype.isDepthTexture=!0;let _geometryId=0;const _m1$3=new Matrix4,_obj$1=new Object3D,_offset$1=new Vector3;function Geometry(){Object.defineProperty(this,"id",{value:_geometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:!0,applyMatrix4:function(e){const t=(new Matrix3).getNormalMatrix(e);for(let t=0,i=this.vertices.length;t<i;t++){this.vertices[t].applyMatrix4(e)}for(let e=0,i=this.faces.length;e<i;e++){const i=this.faces[e];i.normal.applyMatrix3(t).normalize();for(let e=0,n=i.vertexNormals.length;e<n;e++)i.vertexNormals[e].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return _m1$3.makeRotationX(e),this.applyMatrix4(_m1$3),this},rotateY:function(e){return _m1$3.makeRotationY(e),this.applyMatrix4(_m1$3),this},rotateZ:function(e){return _m1$3.makeRotationZ(e),this.applyMatrix4(_m1$3),this},translate:function(e,t,i){return _m1$3.makeTranslation(e,t,i),this.applyMatrix4(_m1$3),this},scale:function(e,t,i){return _m1$3.makeScale(e,t,i),this.applyMatrix4(_m1$3),this},lookAt:function(e){return _obj$1.lookAt(e),_obj$1.updateMatrix(),this.applyMatrix4(_obj$1.matrix),this},fromBufferGeometry:function(e){const t=this,i=null!==e.index?e.index:void 0,n=e.attributes;if(void 0===n.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=n.position,s=n.normal,o=n.color,a=n.uv,l=n.uv2;void 0!==l&&(this.faceVertexUvs[1]=[]);for(let e=0;e<r.count;e++)t.vertices.push((new Vector3).fromBufferAttribute(r,e)),void 0!==o&&t.colors.push((new Color).fromBufferAttribute(o,e));function c(e,i,n,r){const c=void 0===o?[]:[t.colors[e].clone(),t.colors[i].clone(),t.colors[n].clone()],h=void 0===s?[]:[(new Vector3).fromBufferAttribute(s,e),(new Vector3).fromBufferAttribute(s,i),(new Vector3).fromBufferAttribute(s,n)],u=new Face3(e,i,n,h,c,r);t.faces.push(u),void 0!==a&&t.faceVertexUvs[0].push([(new Vector2).fromBufferAttribute(a,e),(new Vector2).fromBufferAttribute(a,i),(new Vector2).fromBufferAttribute(a,n)]),void 0!==l&&t.faceVertexUvs[1].push([(new Vector2).fromBufferAttribute(l,e),(new Vector2).fromBufferAttribute(l,i),(new Vector2).fromBufferAttribute(l,n)])}const h=e.groups;if(h.length>0)for(let e=0;e<h.length;e++){const t=h[e],n=t.start;for(let e=n,r=n+t.count;e<r;e+=3)void 0!==i?c(i.getX(e),i.getX(e+1),i.getX(e+2),t.materialIndex):c(e,e+1,e+2,t.materialIndex)}else if(void 0!==i)for(let e=0;e<i.count;e+=3)c(i.getX(e),i.getX(e+1),i.getX(e+2));else for(let e=0;e<r.count;e+=3)c(e,e+1,e+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset$1).negate(),this.translate(_offset$1.x,_offset$1.y,_offset$1.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,i=0===t?1:1/t,n=new Matrix4;return n.set(i,0,0,-i*e.x,0,i,0,-i*e.y,0,0,i,-i*e.z,0,0,0,1),this.applyMatrix4(n),this},computeFaceNormals:function(){const e=new Vector3,t=new Vector3;for(let i=0,n=this.faces.length;i<n;i++){const n=this.faces[i],r=this.vertices[n.a],s=this.vertices[n.b],o=this.vertices[n.c];e.subVectors(o,s),t.subVectors(r,s),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){void 0===e&&(e=!0);const t=new Array(this.vertices.length);for(let e=0,i=this.vertices.length;e<i;e++)t[e]=new Vector3;if(e){const e=new Vector3,i=new Vector3;for(let n=0,r=this.faces.length;n<r;n++){const r=this.faces[n],s=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c];e.subVectors(a,o),i.subVectors(s,o),e.cross(i),t[r.a].add(e),t[r.b].add(e),t[r.c].add(e)}}else{this.computeFaceNormals();for(let e=0,i=this.faces.length;e<i;e++){const i=this.faces[e];t[i.a].add(i.normal),t[i.b].add(i.normal),t[i.c].add(i.normal)}}for(let e=0,i=this.vertices.length;e<i;e++)t[e].normalize();for(let e=0,i=this.faces.length;e<i;e++){const i=this.faces[e],n=i.vertexNormals;3===n.length?(n[0].copy(t[i.a]),n[1].copy(t[i.b]),n[2].copy(t[i.c])):(n[0]=t[i.a].clone(),n[1]=t[i.b].clone(),n[2]=t[i.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],i=t.vertexNormals;3===i.length?(i[0].copy(t.normal),i[1].copy(t.normal),i[2].copy(t.normal)):(i[0]=t.normal.clone(),i[1]=t.normal.clone(),i[2]=t.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.__originalFaceNormal?t.__originalFaceNormal.copy(t.normal):t.__originalFaceNormal=t.normal.clone(),t.__originalVertexNormals||(t.__originalVertexNormals=[]);for(let e=0,i=t.vertexNormals.length;e<i;e++)t.__originalVertexNormals[e]?t.__originalVertexNormals[e].copy(t.vertexNormals[e]):t.__originalVertexNormals[e]=t.vertexNormals[e].clone()}const e=new Geometry;e.faces=this.faces;for(let t=0,i=this.morphTargets.length;t<i;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const e=this.morphNormals[t].faceNormals,i=this.morphNormals[t].vertexNormals;for(let t=0,n=this.faces.length;t<n;t++){const t=new Vector3,n={a:new Vector3,b:new Vector3,c:new Vector3};e.push(t),i.push(n)}}const i=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e],n=i.faceNormals[e],r=i.vertexNormals[e];n.copy(t.normal),r.a.copy(t.vertexNormals[0]),r.b.copy(t.vertexNormals[1]),r.c.copy(t.vertexNormals[2])}}for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.normal=t.__originalFaceNormal,t.vertexNormals=t.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,i){if(!e||!e.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);let n;const r=this.vertices.length,s=this.vertices,o=e.vertices,a=this.faces,l=e.faces,c=this.colors,h=e.colors;void 0===i&&(i=0),void 0!==t&&(n=(new Matrix3).getNormalMatrix(t));for(let e=0,i=o.length;e<i;e++){const i=o[e].clone();void 0!==t&&i.applyMatrix4(t),s.push(i)}for(let e=0,t=h.length;e<t;e++)c.push(h[e].clone());for(let e=0,t=l.length;e<t;e++){const t=l[e];let s,o;const c=t.vertexNormals,h=t.vertexColors,u=new Face3(t.a+r,t.b+r,t.c+r);u.normal.copy(t.normal),void 0!==n&&u.normal.applyMatrix3(n).normalize();for(let e=0,t=c.length;e<t;e++)s=c[e].clone(),void 0!==n&&s.applyMatrix3(n).normalize(),u.vertexNormals.push(s);u.color.copy(t.color);for(let e=0,t=h.length;e<t;e++)o=h[e],u.vertexColors.push(o.clone());u.materialIndex=t.materialIndex+i,a.push(u)}for(let t=0,i=e.faceVertexUvs.length;t<i;t++){const i=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,n=i.length;e<n;e++){const n=i[e],r=[];for(let e=0,t=n.length;e<t;e++)r.push(n[e].clone());this.faceVertexUvs[t].push(r)}}},mergeMesh:function(e){e&&e.isMesh?(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e)},mergeVertices:function(){const e={},t=[],i=[],n=Math.pow(10,4);for(let r=0,s=this.vertices.length;r<s;r++){const s=this.vertices[r],o=Math.round(s.x*n)+"_"+Math.round(s.y*n)+"_"+Math.round(s.z*n);void 0===e[o]?(e[o]=r,t.push(this.vertices[r]),i[r]=t.length-1):i[r]=i[e[o]]}const r=[];for(let e=0,t=this.faces.length;e<t;e++){const t=this.faces[e];t.a=i[t.a],t.b=i[t.b],t.c=i[t.c];const n=[t.a,t.b,t.c];for(let t=0;t<3;t++)if(n[t]===n[(t+1)%3]){r.push(e);break}}for(let e=r.length-1;e>=0;e--){const t=r[e];this.faces.splice(t,1);for(let e=0,i=this.faceVertexUvs.length;e<i;e++)this.faceVertexUvs[e].splice(t,1)}const s=this.vertices.length-t.length;return this.vertices=t,s},setFromPoints:function(e){this.vertices=[];for(let t=0,i=e.length;t<i;t++){const i=e[t];this.vertices.push(new Vector3(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let i=0;i<t;i++)e[i]._id=i;e.sort((function(e,t){return e.materialIndex-t.materialIndex}));const i=this.faceVertexUvs[0],n=this.faceVertexUvs[1];let r,s;i&&i.length===t&&(r=[]),n&&n.length===t&&(s=[]);for(let o=0;o<t;o++){const t=e[o]._id;r&&r.push(i[t]),s&&s.push(n[t])}r&&(this.faceVertexUvs[0]=r),s&&(this.faceVertexUvs[1]=s)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){const t=this.parameters;for(const i in t)void 0!==t[i]&&(e[i]=t[i]);return e}const t=[];for(let e=0;e<this.vertices.length;e++){const i=this.vertices[e];t.push(i.x,i.y,i.z)}const i=[],n=[],r={},s=[],o={},a=[],l={};for(let e=0;e<this.faces.length;e++){const t=this.faces[e],n=!0,r=!1,s=void 0!==this.faceVertexUvs[0][e],o=t.normal.length()>0,a=t.vertexNormals.length>0,l=1!==t.color.r||1!==t.color.g||1!==t.color.b,p=t.vertexColors.length>0;let m=0;if(m=c(m,0,0),m=c(m,1,n),m=c(m,2,r),m=c(m,3,s),m=c(m,4,o),m=c(m,5,a),m=c(m,6,l),m=c(m,7,p),i.push(m),i.push(t.a,t.b,t.c),i.push(t.materialIndex),s){const t=this.faceVertexUvs[0][e];i.push(d(t[0]),d(t[1]),d(t[2]))}if(o&&i.push(h(t.normal)),a){const e=t.vertexNormals;i.push(h(e[0]),h(e[1]),h(e[2]))}if(l&&i.push(u(t.color)),p){const e=t.vertexColors;i.push(u(e[0]),u(e[1]),u(e[2]))}}function c(e,t,i){return i?e|1<<t:e&~(1<<t)}function h(e){const t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==r[t]||(r[t]=n.length/3,n.push(e.x,e.y,e.z)),r[t]}function u(e){const t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==o[t]||(o[t]=s.length,s.push(e.getHex())),o[t]}function d(e){const t=e.x.toString()+e.y.toString();return void 0!==l[t]||(l[t]=a.length/2,a.push(e.x,e.y)),l[t]}return e.data={},e.data.vertices=t,e.data.normals=n,s.length>0&&(e.data.colors=s),a.length>0&&(e.data.uvs=[a]),e.data.faces=i,e},clone:function(){return(new Geometry).copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let e=0,i=t.length;e<i;e++)this.vertices.push(t[e].clone());const i=e.colors;for(let e=0,t=i.length;e<t;e++)this.colors.push(i[e].clone());const n=e.faces;for(let e=0,t=n.length;e<t;e++)this.faces.push(n[e].clone());for(let t=0,i=e.faceVertexUvs.length;t<i;t++){const i=e.faceVertexUvs[t];void 0===this.faceVertexUvs[t]&&(this.faceVertexUvs[t]=[]);for(let e=0,n=i.length;e<n;e++){const n=i[e],r=[];for(let e=0,t=n.length;e<t;e++){const t=n[e];r.push(t.clone())}this.faceVertexUvs[t].push(r)}}const r=e.morphTargets;for(let e=0,t=r.length;e<t;e++){const t={};if(t.name=r[e].name,void 0!==r[e].vertices){t.vertices=[];for(let i=0,n=r[e].vertices.length;i<n;i++)t.vertices.push(r[e].vertices[i].clone())}if(void 0!==r[e].normals){t.normals=[];for(let i=0,n=r[e].normals.length;i<n;i++)t.normals.push(r[e].normals[i].clone())}this.morphTargets.push(t)}const s=e.morphNormals;for(let e=0,t=s.length;e<t;e++){const t={};if(void 0!==s[e].vertexNormals){t.vertexNormals=[];for(let i=0,n=s[e].vertexNormals.length;i<n;i++){const n=s[e].vertexNormals[i],r={};r.a=n.a.clone(),r.b=n.b.clone(),r.c=n.c.clone(),t.vertexNormals.push(r)}}if(void 0!==s[e].faceNormals){t.faceNormals=[];for(let i=0,n=s[e].faceNormals.length;i<n;i++)t.faceNormals.push(s[e].faceNormals[i].clone())}this.morphNormals.push(t)}const o=e.skinWeights;for(let e=0,t=o.length;e<t;e++)this.skinWeights.push(o[e].clone());const a=e.skinIndices;for(let e=0,t=a.length;e<t;e++)this.skinIndices.push(a[e].clone());const l=e.lineDistances;for(let e=0,t=l.length;e<t;e++)this.lineDistances.push(l[e]);const c=e.boundingBox;null!==c&&(this.boundingBox=c.clone());const h=e.boundingSphere;return null!==h&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class BoxGeometry extends Geometry{constructor(e,t,i,n,r,s){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:r,depthSegments:s},this.fromBufferGeometry(new BoxBufferGeometry(e,t,i,n,r,s)),this.mergeVertices()}}class CircleBufferGeometry extends BufferGeometry{constructor(e,t,i,n){super(),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},e=e||1,t=void 0!==t?Math.max(3,t):8,i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;const r=[],s=[],o=[],a=[],l=new Vector3,c=new Vector2;s.push(0,0,0),o.push(0,0,1),a.push(.5,.5);for(let r=0,h=3;r<=t;r++,h+=3){const u=i+r/t*n;l.x=e*Math.cos(u),l.y=e*Math.sin(u),s.push(l.x,l.y,l.z),o.push(0,0,1),c.x=(s[h]/e+1)/2,c.y=(s[h+1]/e+1)/2,a.push(c.x,c.y)}for(let e=1;e<=t;e++)r.push(e,e+1,0);this.setIndex(r),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("normal",new Float32BufferAttribute(o,3)),this.setAttribute("uv",new Float32BufferAttribute(a,2))}}class CircleGeometry extends Geometry{constructor(e,t,i,n){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new CircleBufferGeometry(e,t,i,n)),this.mergeVertices()}}class CylinderBufferGeometry extends BufferGeometry{constructor(e,t,i,n,r,s,o,a){super(),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a};const l=this;e=void 0!==e?e:1,t=void 0!==t?t:1,i=i||1,n=Math.floor(n)||8,r=Math.floor(r)||1,s=void 0!==s&&s,o=void 0!==o?o:0,a=void 0!==a?a:2*Math.PI;const c=[],h=[],u=[],d=[];let p=0;const m=[],f=i/2;let g=0;function y(i){const r=p,s=new Vector2,m=new Vector3;let y=0;const v=!0===i?e:t,b=!0===i?1:-1;for(let e=1;e<=n;e++)h.push(0,f*b,0),u.push(0,b,0),d.push(.5,.5),p++;const _=p;for(let e=0;e<=n;e++){const t=e/n*a+o,i=Math.cos(t),r=Math.sin(t);m.x=v*r,m.y=f*b,m.z=v*i,h.push(m.x,m.y,m.z),u.push(0,b,0),s.x=.5*i+.5,s.y=.5*r*b+.5,d.push(s.x,s.y),p++}for(let e=0;e<n;e++){const t=r+e,n=_+e;!0===i?c.push(n,n+1,t):c.push(n+1,n,t),y+=3}l.addGroup(g,y,!0===i?1:2),g+=y}!function(){const s=new Vector3,y=new Vector3;let v=0;const b=(t-e)/i;for(let l=0;l<=r;l++){const c=[],g=l/r,v=g*(t-e)+e;for(let e=0;e<=n;e++){const t=e/n,r=t*a+o,l=Math.sin(r),m=Math.cos(r);y.x=v*l,y.y=-g*i+f,y.z=v*m,h.push(y.x,y.y,y.z),s.set(l,b,m).normalize(),u.push(s.x,s.y,s.z),d.push(t,1-g),c.push(p++)}m.push(c)}for(let e=0;e<n;e++)for(let t=0;t<r;t++){const i=m[t][e],n=m[t+1][e],r=m[t+1][e+1],s=m[t][e+1];c.push(i,n,s),c.push(n,r,s),v+=6}l.addGroup(g,v,0),g+=v}(),!1===s&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(c),this.setAttribute("position",new Float32BufferAttribute(h,3)),this.setAttribute("normal",new Float32BufferAttribute(u,3)),this.setAttribute("uv",new Float32BufferAttribute(d,2))}}class CylinderGeometry extends Geometry{constructor(e,t,i,n,r,s,o,a){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new CylinderBufferGeometry(e,t,i,n,r,s,o,a)),this.mergeVertices()}}class ConeGeometry extends CylinderGeometry{constructor(e,t,i,n,r,s,o){super(0,e,t,i,n,r,s,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:o}}}class ConeBufferGeometry extends CylinderBufferGeometry{constructor(e,t,i,n,r,s,o){super(0,e,t,i,n,r,s,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:s,thetaLength:o}}}class PolyhedronBufferGeometry extends BufferGeometry{constructor(e,t,i,n){super(),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n},i=i||1;const r=[],s=[];function o(e,t,i,n){const r=n+1,s=[];for(let n=0;n<=r;n++){s[n]=[];const o=e.clone().lerp(i,n/r),a=t.clone().lerp(i,n/r),l=r-n;for(let e=0;e<=l;e++)s[n][e]=0===e&&n===r?o:o.clone().lerp(a,e/l)}for(let e=0;e<r;e++)for(let t=0;t<2*(r-e)-1;t++){const i=Math.floor(t/2);t%2==0?(a(s[e][i+1]),a(s[e+1][i]),a(s[e][i])):(a(s[e][i+1]),a(s[e+1][i+1]),a(s[e+1][i]))}}function a(e){r.push(e.x,e.y,e.z)}function l(t,i){const n=3*t;i.x=e[n+0],i.y=e[n+1],i.z=e[n+2]}function c(e,t,i,n){n<0&&1===e.x&&(s[t]=e.x-1),0===i.x&&0===i.z&&(s[t]=n/2/Math.PI+.5)}function h(e){return Math.atan2(e.z,-e.x)}!function(e){const i=new Vector3,n=new Vector3,r=new Vector3;for(let s=0;s<t.length;s+=3)l(t[s+0],i),l(t[s+1],n),l(t[s+2],r),o(i,n,r,e)}(n=n||0),function(e){const t=new Vector3;for(let i=0;i<r.length;i+=3)t.x=r[i+0],t.y=r[i+1],t.z=r[i+2],t.normalize().multiplyScalar(e),r[i+0]=t.x,r[i+1]=t.y,r[i+2]=t.z}(i),function(){const e=new Vector3;for(let i=0;i<r.length;i+=3){e.x=r[i+0],e.y=r[i+1],e.z=r[i+2];const n=h(e)/2/Math.PI+.5,o=(t=e,Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5);s.push(n,1-o)}var t;(function(){const e=new Vector3,t=new Vector3,i=new Vector3,n=new Vector3,o=new Vector2,a=new Vector2,l=new Vector2;for(let u=0,d=0;u<r.length;u+=9,d+=6){e.set(r[u+0],r[u+1],r[u+2]),t.set(r[u+3],r[u+4],r[u+5]),i.set(r[u+6],r[u+7],r[u+8]),o.set(s[d+0],s[d+1]),a.set(s[d+2],s[d+3]),l.set(s[d+4],s[d+5]),n.copy(e).add(t).add(i).divideScalar(3);const p=h(n);c(o,d+0,e,p),c(a,d+2,t,p),c(l,d+4,i,p)}})(),function(){for(let e=0;e<s.length;e+=6){const t=s[e+0],i=s[e+2],n=s[e+4],r=Math.max(t,i,n),o=Math.min(t,i,n);r>.9&&o<.1&&(t<.2&&(s[e+0]+=1),i<.2&&(s[e+2]+=1),n<.2&&(s[e+4]+=1))}}()}(),this.setAttribute("position",new Float32BufferAttribute(r,3)),this.setAttribute("normal",new Float32BufferAttribute(r.slice(),3)),this.setAttribute("uv",new Float32BufferAttribute(s,2)),0===n?this.computeVertexNormals():this.normalizeNormals()}}class DodecahedronBufferGeometry extends PolyhedronBufferGeometry{constructor(e,t){const i=(1+Math.sqrt(5))/2,n=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class DodecahedronGeometry extends Geometry{constructor(e,t){super(),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new DodecahedronBufferGeometry(e,t)),this.mergeVertices()}}const _v0$2=new Vector3,_v1$5=new Vector3,_normal$1=new Vector3,_triangle=new Triangle;class EdgesGeometry extends BufferGeometry{constructor(e,t){super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,e.isGeometry&&(e=(new BufferGeometry).fromGeometry(e));const i=Math.pow(10,4),n=Math.cos(MathUtils.DEG2RAD*t),r=e.getIndex(),s=e.getAttribute("position"),o=r?r.count:s.count,a=[0,0,0],l=["a","b","c"],c=new Array(3),h={},u=[];for(let e=0;e<o;e+=3){r?(a[0]=r.getX(e),a[1]=r.getX(e+1),a[2]=r.getX(e+2)):(a[0]=e,a[1]=e+1,a[2]=e+2);const{a:t,b:o,c:d}=_triangle;if(t.fromBufferAttribute(s,a[0]),o.fromBufferAttribute(s,a[1]),d.fromBufferAttribute(s,a[2]),_triangle.getNormal(_normal$1),c[0]=`${Math.round(t.x*i)},${Math.round(t.y*i)},${Math.round(t.z*i)}`,c[1]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,c[2]=`${Math.round(d.x*i)},${Math.round(d.y*i)},${Math.round(d.z*i)}`,c[0]!==c[1]&&c[1]!==c[2]&&c[2]!==c[0])for(let e=0;e<3;e++){const t=(e+1)%3,i=c[e],r=c[t],s=_triangle[l[e]],o=_triangle[l[t]],d=`${i}_${r}`,p=`${r}_${i}`;p in h&&h[p]?(_normal$1.dot(h[p].normal)<=n&&(u.push(s.x,s.y,s.z),u.push(o.x,o.y,o.z)),h[p]=null):d in h||(h[d]={index0:a[e],index1:a[t],normal:_normal$1.clone()})}}for(const e in h)if(h[e]){const{index0:t,index1:i}=h[e];_v0$2.fromBufferAttribute(s,t),_v1$5.fromBufferAttribute(s,i),u.push(_v0$2.x,_v0$2.y,_v0$2.z),u.push(_v1$5.x,_v1$5.y,_v1$5.z)}this.setAttribute("position",new Float32BufferAttribute(u,3))}}const Earcut={triangulate:function(e,t,i){i=i||2;const n=t&&t.length,r=n?t[0]*i:e.length;let s=linkedList(e,0,r,i,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,h,u,d,p;if(n&&(s=eliminateHoles(e,t,s,i)),e.length>80*i){a=c=e[0],l=h=e[1];for(let t=i;t<r;t+=i)u=e[t],d=e[t+1],u<a&&(a=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-a,h-l),p=0!==p?1/p:0}return earcutLinked(s,o,i,a,l,p),o}};function linkedList(e,t,i,n,r){let s,o;if(r===signedArea(e,t,i,n)>0)for(s=t;s<i;s+=n)o=insertNode(s,e[s],e[s+1],o);else for(s=i-n;s>=t;s-=n)o=insertNode(s,e[s],e[s+1],o);return o&&equals(o,o.next)&&(removeNode(o),o=o.next),o}function filterPoints(e,t){if(!e)return e;t||(t=e);let i,n=e;do{if(i=!1,n.steiner||!equals(n,n.next)&&0!==area(n.prev,n,n.next))n=n.next;else{if(removeNode(n),n=t=n.prev,n===n.next)break;i=!0}}while(i||n!==t);return t}function earcutLinked(e,t,i,n,r,s,o){if(!e)return;!o&&s&&indexCurve(e,n,r,s);let a,l,c=e;for(;e.prev!==e.next;)if(a=e.prev,l=e.next,s?isEarHashed(e,n,r,s):isEar(e))t.push(a.i/i),t.push(e.i/i),t.push(l.i/i),removeNode(e),e=l.next,c=l.next;else if((e=l)===c){o?1===o?earcutLinked(e=cureLocalIntersections(filterPoints(e),t,i),t,i,n,r,s,2):2===o&&splitEarcut(e,t,i,n,r,s):earcutLinked(filterPoints(e),t,i,n,r,s,1);break}}function isEar(e){const t=e.prev,i=e,n=e.next;if(area(t,i,n)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(pointInTriangle(t.x,t.y,i.x,i.y,n.x,n.y,r.x,r.y)&&area(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function isEarHashed(e,t,i,n){const r=e.prev,s=e,o=e.next;if(area(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=zOrder(a,l,t,i,n),d=zOrder(c,h,t,i,n);let p=e.prevZ,m=e.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&pointInTriangle(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&pointInTriangle(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&area(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&pointInTriangle(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&pointInTriangle(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&area(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function cureLocalIntersections(e,t,i){let n=e;do{const r=n.prev,s=n.next.next;!equals(r,s)&&intersects(r,n,n.next,s)&&locallyInside(r,s)&&locallyInside(s,r)&&(t.push(r.i/i),t.push(n.i/i),t.push(s.i/i),removeNode(n),removeNode(n.next),n=e=s),n=n.next}while(n!==e);return filterPoints(n)}function splitEarcut(e,t,i,n,r,s){let o=e;do{let e=o.next.next;for(;e!==o.prev;){if(o.i!==e.i&&isValidDiagonal(o,e)){let a=splitPolygon(o,e);return o=filterPoints(o,o.next),a=filterPoints(a,a.next),earcutLinked(o,t,i,n,r,s),void earcutLinked(a,t,i,n,r,s)}e=e.next}o=o.next}while(o!==e)}function eliminateHoles(e,t,i,n){const r=[];let s,o,a,l,c;for(s=0,o=t.length;s<o;s++)a=t[s]*n,l=s<o-1?t[s+1]*n:e.length,c=linkedList(e,a,l,n,!1),c===c.next&&(c.steiner=!0),r.push(getLeftmost(c));for(r.sort(compareX),s=0;s<r.length;s++)eliminateHole(r[s],i),i=filterPoints(i,i.next);return i}function compareX(e,t){return e.x-t.x}function eliminateHole(e,t){if(t=findHoleBridge(e,t)){const i=splitPolygon(t,e);filterPoints(t,t.next),filterPoints(i,i.next)}}function findHoleBridge(e,t){let i=t;const n=e.x,r=e.y;let s,o=-1/0;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){const e=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(e<=n&&e>o){if(o=e,e===n){if(r===i.y)return i;if(r===i.next.y)return i.next}s=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!s)return null;if(n===o)return s;const a=s,l=s.x,c=s.y;let h,u=1/0;i=s;do{n>=i.x&&i.x>=l&&n!==i.x&&pointInTriangle(r<c?n:o,r,l,c,r<c?o:n,r,i.x,i.y)&&(h=Math.abs(r-i.y)/(n-i.x),locallyInside(i,e)&&(h<u||h===u&&(i.x>s.x||i.x===s.x&&sectorContainsSector(s,i)))&&(s=i,u=h)),i=i.next}while(i!==a);return s}function sectorContainsSector(e,t){return area(e.prev,e,t.prev)<0&&area(t.next,e,e.next)<0}function indexCurve(e,t,i,n){let r=e;do{null===r.z&&(r.z=zOrder(r.x,r.y,t,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,sortLinked(r)}function sortLinked(e){let t,i,n,r,s,o,a,l,c=1;do{for(i=e,e=null,s=null,o=0;i;){for(o++,n=i,a=0,t=0;t<c&&(a++,n=n.nextZ,n);t++);for(l=c;a>0||l>0&&n;)0!==a&&(0===l||!n||i.z<=n.z)?(r=i,i=i.nextZ,a--):(r=n,n=n.nextZ,l--),s?s.nextZ=r:e=r,r.prevZ=s,s=r;i=n}s.nextZ=null,c*=2}while(o>1);return e}function zOrder(e,t,i,n,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-i)*r)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*r)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function getLeftmost(e){let t=e,i=e;do{(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next}while(t!==e);return i}function pointInTriangle(e,t,i,n,r,s,o,a){return(r-o)*(t-a)-(e-o)*(s-a)>=0&&(e-o)*(n-a)-(i-o)*(t-a)>=0&&(i-o)*(s-a)-(r-o)*(n-a)>=0}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&(locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)&&(area(e.prev,e,t.prev)||area(e,t.prev,t))||equals(e,t)&&area(e.prev,e,e.next)>0&&area(t.prev,t,t.next)>0)}function area(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,i,n){const r=sign(area(e,t,i)),s=sign(area(e,t,n)),o=sign(area(i,n,e)),a=sign(area(i,n,t));return r!==s&&o!==a||(!(0!==r||!onSegment(e,i,t))||(!(0!==s||!onSegment(e,n,t))||(!(0!==o||!onSegment(i,e,n))||!(0!==a||!onSegment(i,t,n)))))}function onSegment(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function sign(e){return e>0?1:e<0?-1:0}function intersectsPolygon(e,t){let i=e;do{if(i.i!==e.i&&i.next.i!==e.i&&i.i!==t.i&&i.next.i!==t.i&&intersects(i,i.next,e,t))return!0;i=i.next}while(i!==e);return!1}function locallyInside(e,t){return area(e.prev,e,e.next)<0?area(e,t,e.next)>=0&&area(e,e.prev,t)>=0:area(e,t,e.prev)<0||area(e,e.next,t)<0}function middleInside(e,t){let i=e,n=!1;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do{i.y>s!=i.next.y>s&&i.next.y!==i.y&&r<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==e);return n}function splitPolygon(e,t){const i=new Node(e.i,e.x,e.y),n=new Node(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function insertNode(e,t,i,n){const r=new Node(e,t,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Node(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(e,t,i,n){let r=0;for(let s=t,o=i-n;s<i;s+=n)r+=(e[o]-e[s])*(e[s+1]+e[o+1]),o=s;return r}const ShapeUtils={area:function(e){const t=e.length;let i=0;for(let n=t-1,r=0;r<t;n=r++)i+=e[n].x*e[r].y-e[r].x*e[n].y;return.5*i},isClockWise:function(e){return ShapeUtils.area(e)<0},triangulateShape:function(e,t){const i=[],n=[],r=[];removeDupEndPts(e),addContour(i,e);let s=e.length;t.forEach(removeDupEndPts);for(let e=0;e<t.length;e++)n.push(s),s+=t[e].length,addContour(i,t[e]);const o=Earcut.triangulate(i,n);for(let e=0;e<o.length;e+=3)r.push(o.slice(e,e+3));return r}};function removeDupEndPts(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function addContour(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class ExtrudeBufferGeometry extends BufferGeometry{constructor(e,t){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const i=this,n=[],r=[];for(let t=0,i=e.length;t<i;t++){s(e[t])}function s(e){const s=[],o=void 0!==t.curveSegments?t.curveSegments:12,a=void 0!==t.steps?t.steps:1;let l=void 0!==t.depth?t.depth:100,c=void 0===t.bevelEnabled||t.bevelEnabled,h=void 0!==t.bevelThickness?t.bevelThickness:6,u=void 0!==t.bevelSize?t.bevelSize:h-2,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3;const m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:WorldUVGenerator;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,y,v,b,_,x=!1;m&&(g=m.getSpacedPoints(a),x=!0,c=!1,y=m.computeFrenetFrames(a,!1),v=new Vector3,b=new Vector3,_=new Vector3),c||(p=0,h=0,u=0,d=0);const w=e.extractPoints(o);let S=w.shape;const M=w.holes;if(!ShapeUtils.isClockWise(S)){S=S.reverse();for(let e=0,t=M.length;e<t;e++){const t=M[e];ShapeUtils.isClockWise(t)&&(M[e]=t.reverse())}}const C=ShapeUtils.triangulateShape(S,M),T=S;for(let e=0,t=M.length;e<t;e++){const t=M[e];S=S.concat(t)}function A(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(i).add(e)}const L=S.length,E=C.length;function P(e,t,i){let n,r,s;const o=e.x-t.x,a=e.y-t.y,l=i.x-e.x,c=i.y-e.y,h=o*o+a*a,u=o*c-a*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=t.x-a/u,m=t.y+o/u,f=((i.x-c/d-p)*c-(i.y+l/d-m)*l)/(o*c-a*l);n=p+o*f-e.x,r=m+a*f-e.y;const g=n*n+r*r;if(g<=2)return new Vector2(n,r);s=Math.sqrt(g/2)}else{let e=!1;o>Number.EPSILON?l>Number.EPSILON&&(e=!0):o<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(a)===Math.sign(c)&&(e=!0),e?(n=-a,r=o,s=Math.sqrt(h)):(n=o,r=a,s=Math.sqrt(h/2))}return new Vector2(n/s,r/s)}const R=[];for(let e=0,t=T.length,i=t-1,n=e+1;e<t;e++,i++,n++)i===t&&(i=0),n===t&&(n=0),R[e]=P(T[e],T[i],T[n]);const B=[];let I,D=R.concat();for(let e=0,t=M.length;e<t;e++){const t=M[e];I=[];for(let e=0,i=t.length,n=i-1,r=e+1;e<i;e++,n++,r++)n===i&&(n=0),r===i&&(r=0),I[e]=P(t[e],t[n],t[r]);B.push(I),D=D.concat(I)}for(let e=0;e<p;e++){const t=e/p,i=h*Math.cos(t*Math.PI/2),n=u*Math.sin(t*Math.PI/2)+d;for(let e=0,t=T.length;e<t;e++){const t=A(T[e],R[e],n);k(t.x,t.y,-i)}for(let e=0,t=M.length;e<t;e++){const t=M[e];I=B[e];for(let e=0,r=t.length;e<r;e++){const r=A(t[e],I[e],n);k(r.x,r.y,-i)}}}const N=u+d;for(let e=0;e<L;e++){const t=c?A(S[e],D[e],N):S[e];x?(b.copy(y.normals[0]).multiplyScalar(t.x),v.copy(y.binormals[0]).multiplyScalar(t.y),_.copy(g[0]).add(b).add(v),k(_.x,_.y,_.z)):k(t.x,t.y,0)}for(let e=1;e<=a;e++)for(let t=0;t<L;t++){const i=c?A(S[t],D[t],N):S[t];x?(b.copy(y.normals[e]).multiplyScalar(i.x),v.copy(y.binormals[e]).multiplyScalar(i.y),_.copy(g[e]).add(b).add(v),k(_.x,_.y,_.z)):k(i.x,i.y,l/a*e)}for(let e=p-1;e>=0;e--){const t=e/p,i=h*Math.cos(t*Math.PI/2),n=u*Math.sin(t*Math.PI/2)+d;for(let e=0,t=T.length;e<t;e++){const t=A(T[e],R[e],n);k(t.x,t.y,l+i)}for(let e=0,t=M.length;e<t;e++){const t=M[e];I=B[e];for(let e=0,r=t.length;e<r;e++){const r=A(t[e],I[e],n);x?k(r.x,r.y+g[a-1].y,g[a-1].x+i):k(r.x,r.y,l+i)}}}function O(e,t){let i=e.length;for(;--i>=0;){const n=i;let r=i-1;r<0&&(r=e.length-1);for(let e=0,i=a+2*p;e<i;e++){const i=L*e,s=L*(e+1);F(t+n+i,t+r+i,t+r+s,t+n+s)}}}function k(e,t,i){s.push(e),s.push(t),s.push(i)}function H(e,t,r){G(e),G(t),G(r);const s=n.length/3,o=f.generateTopUV(i,n,s-3,s-2,s-1);U(o[0]),U(o[1]),U(o[2])}function F(e,t,r,s){G(e),G(t),G(s),G(t),G(r),G(s);const o=n.length/3,a=f.generateSideWallUV(i,n,o-6,o-3,o-2,o-1);U(a[0]),U(a[1]),U(a[3]),U(a[1]),U(a[2]),U(a[3])}function G(e){n.push(s[3*e+0]),n.push(s[3*e+1]),n.push(s[3*e+2])}function U(e){r.push(e.x),r.push(e.y)}!function(){const e=n.length/3;if(c){let e=0,t=L*e;for(let e=0;e<E;e++){const i=C[e];H(i[2]+t,i[1]+t,i[0]+t)}e=a+2*p,t=L*e;for(let e=0;e<E;e++){const i=C[e];H(i[0]+t,i[1]+t,i[2]+t)}}else{for(let e=0;e<E;e++){const t=C[e];H(t[2],t[1],t[0])}for(let e=0;e<E;e++){const t=C[e];H(t[0]+L*a,t[1]+L*a,t[2]+L*a)}}i.addGroup(e,n.length/3-e,0)}(),function(){const e=n.length/3;let t=0;O(T,t),t+=T.length;for(let e=0,i=M.length;e<i;e++){const i=M[e];O(i,t),t+=i.length}i.addGroup(e,n.length/3-e,1)}()}this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("uv",new Float32BufferAttribute(r,2)),this.computeVertexNormals()}toJSON(){const e=BufferGeometry.prototype.toJSON.call(this);return toJSON(this.parameters.shapes,this.parameters.options,e)}}const WorldUVGenerator={generateTopUV:function(e,t,i,n,r){const s=t[3*i],o=t[3*i+1],a=t[3*n],l=t[3*n+1],c=t[3*r],h=t[3*r+1];return[new Vector2(s,o),new Vector2(a,l),new Vector2(c,h)]},generateSideWallUV:function(e,t,i,n,r,s){const o=t[3*i],a=t[3*i+1],l=t[3*i+2],c=t[3*n],h=t[3*n+1],u=t[3*n+2],d=t[3*r],p=t[3*r+1],m=t[3*r+2],f=t[3*s],g=t[3*s+1],y=t[3*s+2];return Math.abs(a-h)<.01?[new Vector2(o,1-l),new Vector2(c,1-u),new Vector2(d,1-m),new Vector2(f,1-y)]:[new Vector2(a,1-l),new Vector2(h,1-u),new Vector2(p,1-m),new Vector2(g,1-y)]}};function toJSON(e,t,i){if(i.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){const n=e[t];i.shapes.push(n.uuid)}else i.shapes.push(e.uuid);return void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}class ExtrudeGeometry extends Geometry{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new ExtrudeBufferGeometry(e,t)),this.mergeVertices()}toJSON(){const e=super.toJSON();return toJSON$1(this.parameters.shapes,this.parameters.options,e)}}function toJSON$1(e,t,i){if(i.shapes=[],Array.isArray(e))for(let t=0,n=e.length;t<n;t++){const n=e[t];i.shapes.push(n.uuid)}else i.shapes.push(e.uuid);return void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}class IcosahedronBufferGeometry extends PolyhedronBufferGeometry{constructor(e,t){const i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class IcosahedronGeometry extends Geometry{constructor(e,t){super(),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new IcosahedronBufferGeometry(e,t)),this.mergeVertices()}}class LatheBufferGeometry extends BufferGeometry{constructor(e,t,i,n){super(),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},t=Math.floor(t)||12,i=i||0,n=n||2*Math.PI,n=MathUtils.clamp(n,0,2*Math.PI);const r=[],s=[],o=[],a=1/t,l=new Vector3,c=new Vector2;for(let r=0;r<=t;r++){const h=i+r*a*n,u=Math.sin(h),d=Math.cos(h);for(let i=0;i<=e.length-1;i++)l.x=e[i].x*u,l.y=e[i].y,l.z=e[i].x*d,s.push(l.x,l.y,l.z),c.x=r/t,c.y=i/(e.length-1),o.push(c.x,c.y)}for(let i=0;i<t;i++)for(let t=0;t<e.length-1;t++){const n=t+i*e.length,s=n,o=n+e.length,a=n+e.length+1,l=n+1;r.push(s,o,l),r.push(o,a,l)}if(this.setIndex(r),this.setAttribute("position",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2)),this.computeVertexNormals(),n===2*Math.PI){const i=this.attributes.normal.array,n=new Vector3,r=new Vector3,s=new Vector3,o=t*e.length*3;for(let t=0,a=0;t<e.length;t++,a+=3)n.x=i[a+0],n.y=i[a+1],n.z=i[a+2],r.x=i[o+a+0],r.y=i[o+a+1],r.z=i[o+a+2],s.addVectors(n,r).normalize(),i[a+0]=i[o+a+0]=s.x,i[a+1]=i[o+a+1]=s.y,i[a+2]=i[o+a+2]=s.z}}}class LatheGeometry extends Geometry{constructor(e,t,i,n){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:n},this.fromBufferGeometry(new LatheBufferGeometry(e,t,i,n)),this.mergeVertices()}}class OctahedronBufferGeometry extends PolyhedronBufferGeometry{constructor(e,t){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class OctahedronGeometry extends Geometry{constructor(e,t){super(),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new OctahedronBufferGeometry(e,t)),this.mergeVertices()}}function ParametricBufferGeometry(e,t,i){BufferGeometry.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:i};const n=[],r=[],s=[],o=[],a=1e-5,l=new Vector3,c=new Vector3,h=new Vector3,u=new Vector3,d=new Vector3;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const p=t+1;for(let n=0;n<=i;n++){const p=n/i;for(let i=0;i<=t;i++){const n=i/t;e(n,p,c),r.push(c.x,c.y,c.z),n-a>=0?(e(n-a,p,h),u.subVectors(c,h)):(e(n+a,p,h),u.subVectors(h,c)),p-a>=0?(e(n,p-a,h),d.subVectors(c,h)):(e(n,p+a,h),d.subVectors(h,c)),l.crossVectors(u,d).normalize(),s.push(l.x,l.y,l.z),o.push(n,p)}}for(let e=0;e<i;e++)for(let i=0;i<t;i++){const t=e*p+i,r=e*p+i+1,s=(e+1)*p+i+1,o=(e+1)*p+i;n.push(t,r,o),n.push(r,s,o)}this.setIndex(n),this.setAttribute("position",new Float32BufferAttribute(r,3)),this.setAttribute("normal",new Float32BufferAttribute(s,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2))}function ParametricGeometry(e,t,i){Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:i},this.fromBufferGeometry(new ParametricBufferGeometry(e,t,i)),this.mergeVertices()}ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ParametricBufferGeometry.prototype.constructor=ParametricBufferGeometry,ParametricGeometry.prototype=Object.create(Geometry.prototype),ParametricGeometry.prototype.constructor=ParametricGeometry;class PlaneGeometry extends Geometry{constructor(e,t,i,n){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n},this.fromBufferGeometry(new PlaneBufferGeometry(e,t,i,n)),this.mergeVertices()}}class PolyhedronGeometry extends Geometry{constructor(e,t,i,n){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:n},this.fromBufferGeometry(new PolyhedronBufferGeometry(e,t,i,n)),this.mergeVertices()}}class RingBufferGeometry extends BufferGeometry{constructor(e,t,i,n,r,s){super(),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:s},e=e||.5,t=t||1,r=void 0!==r?r:0,s=void 0!==s?s:2*Math.PI,i=void 0!==i?Math.max(3,i):8;const o=[],a=[],l=[],c=[];let h=e;const u=(t-e)/(n=void 0!==n?Math.max(1,n):1),d=new Vector3,p=new Vector2;for(let e=0;e<=n;e++){for(let e=0;e<=i;e++){const n=r+e/i*s;d.x=h*Math.cos(n),d.y=h*Math.sin(n),a.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,c.push(p.x,p.y)}h+=u}for(let e=0;e<n;e++){const t=e*(i+1);for(let e=0;e<i;e++){const n=e+t,r=n,s=n+i+1,a=n+i+2,l=n+1;o.push(r,s,l),o.push(s,a,l)}}this.setIndex(o),this.setAttribute("position",new Float32BufferAttribute(a,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}}class RingGeometry extends Geometry{constructor(e,t,i,n,r,s){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:s},this.fromBufferGeometry(new RingBufferGeometry(e,t,i,n,r,s)),this.mergeVertices()}}class ShapeBufferGeometry extends BufferGeometry{constructor(e,t){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;const i=[],n=[],r=[],s=[];let o=0,a=0;if(!1===Array.isArray(e))l(e);else for(let t=0;t<e.length;t++)l(e[t]),this.addGroup(o,a,t),o+=a,a=0;function l(e){const o=n.length/3,l=e.extractPoints(t);let c=l.shape;const h=l.holes;!1===ShapeUtils.isClockWise(c)&&(c=c.reverse());for(let e=0,t=h.length;e<t;e++){const t=h[e];!0===ShapeUtils.isClockWise(t)&&(h[e]=t.reverse())}const u=ShapeUtils.triangulateShape(c,h);for(let e=0,t=h.length;e<t;e++){const t=h[e];c=c.concat(t)}for(let e=0,t=c.length;e<t;e++){const t=c[e];n.push(t.x,t.y,0),r.push(0,0,1),s.push(t.x,t.y)}for(let e=0,t=u.length;e<t;e++){const t=u[e],n=t[0]+o,r=t[1]+o,s=t[2]+o;i.push(n,r,s),a+=3}}this.setIndex(i),this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("normal",new Float32BufferAttribute(r,3)),this.setAttribute("uv",new Float32BufferAttribute(s,2))}toJSON(){const e=BufferGeometry.prototype.toJSON.call(this);return toJSON$2(this.parameters.shapes,e)}}function toJSON$2(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){const n=e[i];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}class ShapeGeometry extends Geometry{constructor(e,t){super(),this.type="ShapeGeometry","object"==typeof t&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ShapeBufferGeometry(e,t)),this.mergeVertices()}toJSON(){const e=Geometry.prototype.toJSON.call(this);return toJSON$3(this.parameters.shapes,e)}}function toJSON$3(e,t){if(t.shapes=[],Array.isArray(e))for(let i=0,n=e.length;i<n;i++){const n=e[i];t.shapes.push(n.uuid)}else t.shapes.push(e.uuid);return t}class SphereBufferGeometry extends BufferGeometry{constructor(e,t,i,n,r,s,o){super(),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI,s=void 0!==s?s:0,o=void 0!==o?o:Math.PI;const a=Math.min(s+o,Math.PI);let l=0;const c=[],h=new Vector3,u=new Vector3,d=[],p=[],m=[],f=[];for(let d=0;d<=i;d++){const g=[],y=d/i;let v=0;0==d&&0==s?v=.5/t:d==i&&a==Math.PI&&(v=-.5/t);for(let i=0;i<=t;i++){const a=i/t;h.x=-e*Math.cos(n+a*r)*Math.sin(s+y*o),h.y=e*Math.cos(s+y*o),h.z=e*Math.sin(n+a*r)*Math.sin(s+y*o),p.push(h.x,h.y,h.z),u.copy(h).normalize(),m.push(u.x,u.y,u.z),f.push(a+v,1-y),g.push(l++)}c.push(g)}for(let e=0;e<i;e++)for(let n=0;n<t;n++){const t=c[e][n+1],r=c[e][n],o=c[e+1][n],l=c[e+1][n+1];(0!==e||s>0)&&d.push(t,r,l),(e!==i-1||a<Math.PI)&&d.push(r,o,l)}this.setIndex(d),this.setAttribute("position",new Float32BufferAttribute(p,3)),this.setAttribute("normal",new Float32BufferAttribute(m,3)),this.setAttribute("uv",new Float32BufferAttribute(f,2))}}class SphereGeometry extends Geometry{constructor(e,t,i,n,r,s,o){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:r,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new SphereBufferGeometry(e,t,i,n,r,s,o)),this.mergeVertices()}}class TetrahedronBufferGeometry extends PolyhedronBufferGeometry{constructor(e,t){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class TetrahedronGeometry extends Geometry{constructor(e,t){super(),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new TetrahedronBufferGeometry(e,t)),this.mergeVertices()}}class TextBufferGeometry extends ExtrudeBufferGeometry{constructor(e,t){const i=(t=t||{}).font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new BufferGeometry;const n=i.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(n,t),this.type="TextBufferGeometry"}}class TextGeometry extends Geometry{constructor(e,t){super(),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new TextBufferGeometry(e,t)),this.mergeVertices()}}class TorusBufferGeometry extends BufferGeometry{constructor(e,t,i,n,r){super(),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},e=e||1,t=t||.4,i=Math.floor(i)||8,n=Math.floor(n)||6,r=r||2*Math.PI;const s=[],o=[],a=[],l=[],c=new Vector3,h=new Vector3,u=new Vector3;for(let s=0;s<=i;s++)for(let d=0;d<=n;d++){const p=d/n*r,m=s/i*Math.PI*2;h.x=(e+t*Math.cos(m))*Math.cos(p),h.y=(e+t*Math.cos(m))*Math.sin(p),h.z=t*Math.sin(m),o.push(h.x,h.y,h.z),c.x=e*Math.cos(p),c.y=e*Math.sin(p),u.subVectors(h,c).normalize(),a.push(u.x,u.y,u.z),l.push(d/n),l.push(s/i)}for(let e=1;e<=i;e++)for(let t=1;t<=n;t++){const i=(n+1)*e+t-1,r=(n+1)*(e-1)+t-1,o=(n+1)*(e-1)+t,a=(n+1)*e+t;s.push(i,r,a),s.push(r,o,a)}this.setIndex(s),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(a,3)),this.setAttribute("uv",new Float32BufferAttribute(l,2))}}class TorusGeometry extends Geometry{constructor(e,t,i,n,r){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new TorusBufferGeometry(e,t,i,n,r)),this.mergeVertices()}}class TorusKnotBufferGeometry extends BufferGeometry{constructor(e,t,i,n,r,s){super(),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:s},e=e||1,t=t||.4,i=Math.floor(i)||64,n=Math.floor(n)||8,r=r||2,s=s||3;const o=[],a=[],l=[],c=[],h=new Vector3,u=new Vector3,d=new Vector3,p=new Vector3,m=new Vector3,f=new Vector3,g=new Vector3;for(let o=0;o<=i;++o){const v=o/i*r*Math.PI*2;y(v,r,s,e,d),y(v+.01,r,s,e,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let e=0;e<=n;++e){const r=e/n*Math.PI*2,s=-t*Math.cos(r),p=t*Math.sin(r);h.x=d.x+(s*g.x+p*m.x),h.y=d.y+(s*g.y+p*m.y),h.z=d.z+(s*g.z+p*m.z),a.push(h.x,h.y,h.z),u.subVectors(h,d).normalize(),l.push(u.x,u.y,u.z),c.push(o/i),c.push(e/n)}}for(let e=1;e<=i;e++)for(let t=1;t<=n;t++){const i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),s=(n+1)*e+t,a=(n+1)*(e-1)+t;o.push(i,r,a),o.push(r,s,a)}function y(e,t,i,n,r){const s=Math.cos(e),o=Math.sin(e),a=i/t*e,l=Math.cos(a);r.x=n*(2+l)*.5*s,r.y=n*(2+l)*o*.5,r.z=n*Math.sin(a)*.5}this.setIndex(o),this.setAttribute("position",new Float32BufferAttribute(a,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(c,2))}}class TorusKnotGeometry extends Geometry{constructor(e,t,i,n,r,s,o){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:n,p:r,q:s},void 0!==o&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new TorusKnotBufferGeometry(e,t,i,n,r,s)),this.mergeVertices()}}class TubeBufferGeometry extends BufferGeometry{constructor(e,t,i,n,r){super(),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r},t=t||64,i=i||1,n=n||8,r=r||!1;const s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const o=new Vector3,a=new Vector3,l=new Vector2;let c=new Vector3;const h=[],u=[],d=[],p=[];function m(r){c=e.getPointAt(r/t,c);const l=s.normals[r],d=s.binormals[r];for(let e=0;e<=n;e++){const t=e/n*Math.PI*2,r=Math.sin(t),s=-Math.cos(t);a.x=s*l.x+r*d.x,a.y=s*l.y+r*d.y,a.z=s*l.z+r*d.z,a.normalize(),u.push(a.x,a.y,a.z),o.x=c.x+i*a.x,o.y=c.y+i*a.y,o.z=c.z+i*a.z,h.push(o.x,o.y,o.z)}}!function(){for(let e=0;e<t;e++)m(e);m(!1===r?t:0),function(){for(let e=0;e<=t;e++)for(let i=0;i<=n;i++)l.x=e/t,l.y=i/n,d.push(l.x,l.y)}(),function(){for(let e=1;e<=t;e++)for(let t=1;t<=n;t++){const i=(n+1)*(e-1)+(t-1),r=(n+1)*e+(t-1),s=(n+1)*e+t,o=(n+1)*(e-1)+t;p.push(i,r,o),p.push(r,s,o)}}()}(),this.setIndex(p),this.setAttribute("position",new Float32BufferAttribute(h,3)),this.setAttribute("normal",new Float32BufferAttribute(u,3)),this.setAttribute("uv",new Float32BufferAttribute(d,2))}toJSON(){const e=BufferGeometry.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class TubeGeometry extends Geometry{constructor(e,t,i,n,r,s){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:n,closed:r},void 0!==s&&console.warn("THREE.TubeGeometry: taper has been removed.");const o=new TubeBufferGeometry(e,t,i,n,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}}class WireframeGeometry extends BufferGeometry{constructor(e){super(),this.type="WireframeGeometry";const t=[],i=[0,0],n={},r=["a","b","c"];if(e&&e.isGeometry){const s=e.faces;for(let e=0,t=s.length;e<t;e++){const t=s[e];for(let e=0;e<3;e++){const s=t[r[e]],o=t[r[(e+1)%3]];i[0]=Math.min(s,o),i[1]=Math.max(s,o);const a=i[0]+","+i[1];void 0===n[a]&&(n[a]={index1:i[0],index2:i[1]})}}for(const i in n){const r=n[i];let s=e.vertices[r.index1];t.push(s.x,s.y,s.z),s=e.vertices[r.index2],t.push(s.x,s.y,s.z)}}else if(e&&e.isBufferGeometry){const r=new Vector3;if(null!==e.index){const s=e.attributes.position,o=e.index;let a=e.groups;0===a.length&&(a=[{start:0,count:o.count,materialIndex:0}]);for(let e=0,t=a.length;e<t;++e){const t=a[e],r=t.start;for(let e=r,s=r+t.count;e<s;e+=3)for(let t=0;t<3;t++){const r=o.getX(e+t),s=o.getX(e+(t+1)%3);i[0]=Math.min(r,s),i[1]=Math.max(r,s);const a=i[0]+","+i[1];void 0===n[a]&&(n[a]={index1:i[0],index2:i[1]})}}for(const e in n){const i=n[e];r.fromBufferAttribute(s,i.index1),t.push(r.x,r.y,r.z),r.fromBufferAttribute(s,i.index2),t.push(r.x,r.y,r.z)}}else{const i=e.attributes.position;for(let e=0,n=i.count/3;e<n;e++)for(let n=0;n<3;n++){const s=3*e+n;r.fromBufferAttribute(i,s),t.push(r.x,r.y,r.z);const o=3*e+(n+1)%3;r.fromBufferAttribute(i,o),t.push(r.x,r.y,r.z)}}}this.setAttribute("position",new Float32BufferAttribute(t,3))}}var Geometries=Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,WireframeGeometry:WireframeGeometry});function ShadowMaterial(e){Material.call(this),this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.setValues(e)}function RawShaderMaterial(e){ShaderMaterial.call(this,e),this.type="RawShaderMaterial"}function MeshStandardMaterial(e){Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}function MeshPhysicalMaterial(e){MeshStandardMaterial.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=MathUtils.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}function MeshPhongMaterial(e){Material.call(this),this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshToonMaterial(e){Material.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Color(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshNormalMaterial(e){Material.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshLambertMaterial(e){Material.call(this),this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function MeshMatcapMaterial(e){Material.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}function LineDashedMaterial(e){LineBasicMaterial.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}ShadowMaterial.prototype=Object.create(Material.prototype),ShadowMaterial.prototype.constructor=ShadowMaterial,ShadowMaterial.prototype.isShadowMaterial=!0,ShadowMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this},RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype),RawShaderMaterial.prototype.constructor=RawShaderMaterial,RawShaderMaterial.prototype.isRawShaderMaterial=!0,MeshStandardMaterial.prototype=Object.create(Material.prototype),MeshStandardMaterial.prototype.constructor=MeshStandardMaterial,MeshStandardMaterial.prototype.isMeshStandardMaterial=!0,MeshStandardMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this},MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype),MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial,MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0,MeshPhysicalMaterial.prototype.copy=function(e){return MeshStandardMaterial.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new Color).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this},MeshPhongMaterial.prototype=Object.create(Material.prototype),MeshPhongMaterial.prototype.constructor=MeshPhongMaterial,MeshPhongMaterial.prototype.isMeshPhongMaterial=!0,MeshPhongMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshToonMaterial.prototype=Object.create(Material.prototype),MeshToonMaterial.prototype.constructor=MeshToonMaterial,MeshToonMaterial.prototype.isMeshToonMaterial=!0,MeshToonMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshNormalMaterial.prototype=Object.create(Material.prototype),MeshNormalMaterial.prototype.constructor=MeshNormalMaterial,MeshNormalMaterial.prototype.isMeshNormalMaterial=!0,MeshNormalMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshLambertMaterial.prototype=Object.create(Material.prototype),MeshLambertMaterial.prototype.constructor=MeshLambertMaterial,MeshLambertMaterial.prototype.isMeshLambertMaterial=!0,MeshLambertMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},MeshMatcapMaterial.prototype=Object.create(Material.prototype),MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial,MeshMatcapMaterial.prototype.isMeshMatcapMaterial=!0,MeshMatcapMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype),LineDashedMaterial.prototype.constructor=LineDashedMaterial,LineDashedMaterial.prototype.isLineDashedMaterial=!0,LineDashedMaterial.prototype.copy=function(e){return LineBasicMaterial.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Materials=Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});const AnimationUtils={arraySlice:function(e,t,i){return AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)},convertArray:function(e,t,i){return!e||!i&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){const t=e.length,i=new Array(t);for(let e=0;e!==t;++e)i[e]=e;return i.sort((function(t,i){return e[t]-e[i]})),i},sortedArray:function(e,t,i){const n=e.length,r=new e.constructor(n);for(let s=0,o=0;o!==n;++s){const n=i[s]*t;for(let i=0;i!==t;++i)r[o++]=e[n+i]}return r},flattenJSON:function(e,t,i,n){let r=1,s=e[0];for(;void 0!==s&&void 0===s[n];)s=e[r++];if(void 0===s)return;let o=s[n];if(void 0!==o)if(Array.isArray(o))do{o=s[n],void 0!==o&&(t.push(s.time),i.push.apply(i,o)),s=e[r++]}while(void 0!==s);else if(void 0!==o.toArray)do{o=s[n],void 0!==o&&(t.push(s.time),o.toArray(i,i.length)),s=e[r++]}while(void 0!==s);else do{o=s[n],void 0!==o&&(t.push(s.time),i.push(o)),s=e[r++]}while(void 0!==s)},subclip:function(e,t,i,n,r){r=r||30;const s=e.clone();s.name=t;const o=[];for(let e=0;e<s.tracks.length;++e){const t=s.tracks[e],a=t.getValueSize(),l=[],c=[];for(let e=0;e<t.times.length;++e){const s=t.times[e]*r;if(!(s<i||s>=n)){l.push(t.times[e]);for(let i=0;i<a;++i)c.push(t.values[e*a+i])}}0!==l.length&&(t.times=AnimationUtils.convertArray(l,t.times.constructor),t.values=AnimationUtils.convertArray(c,t.values.constructor),o.push(t))}s.tracks=o;let a=1/0;for(let e=0;e<s.tracks.length;++e)a>s.tracks[e].times[0]&&(a=s.tracks[e].times[0]);for(let e=0;e<s.tracks.length;++e)s.tracks[e].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(e,t,i,n){void 0===t&&(t=0),void 0===i&&(i=e),(void 0===n||n<=0)&&(n=30);const r=i.tracks.length,s=t/n;for(let t=0;t<r;++t){const n=i.tracks[t],r=n.ValueTypeName;if("bool"===r||"string"===r)continue;const o=e.tracks.find((function(e){return e.name===n.name&&e.ValueTypeName===r}));if(void 0===o)continue;let a=0;const l=n.getValueSize();n.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=l/3);let c=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=h/3);const u=n.times.length-1;let d;if(s<=n.times[0]){const e=a,t=l-a;d=AnimationUtils.arraySlice(n.values,e,t)}else if(s>=n.times[u]){const e=u*l+a,t=e+l-a;d=AnimationUtils.arraySlice(n.values,e,t)}else{const e=n.createInterpolant(),t=a,i=l-a;e.evaluate(s),d=AnimationUtils.arraySlice(e.resultBuffer,t,i)}if("quaternion"===r){(new Quaternion).fromArray(d).normalize().conjugate().toArray(d)}const p=o.times.length;for(let e=0;e<p;++e){const t=e*h+c;if("quaternion"===r)Quaternion.multiplyQuaternionsFlat(o.values,t,d,0,o.values,t);else{const e=h-2*c;for(let i=0;i<e;++i)o.values[t+i]-=d[i]}}}return e.blendMode=2501,e}};function Interpolant(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i}function CubicInterpolant(e,t,i,n){Interpolant.call(this,e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function LinearInterpolant(e,t,i,n){Interpolant.call(this,e,t,i,n)}function DiscreteInterpolant(e,t,i,n){Interpolant.call(this,e,t,i,n)}function KeyframeTrack(e,t,i,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=AnimationUtils.convertArray(t,this.TimeBufferType),this.values=AnimationUtils.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}function BooleanKeyframeTrack(e,t,i){KeyframeTrack.call(this,e,t,i)}function ColorKeyframeTrack(e,t,i,n){KeyframeTrack.call(this,e,t,i,n)}function NumberKeyframeTrack(e,t,i,n){KeyframeTrack.call(this,e,t,i,n)}function QuaternionLinearInterpolant(e,t,i,n){Interpolant.call(this,e,t,i,n)}function QuaternionKeyframeTrack(e,t,i,n){KeyframeTrack.call(this,e,t,i,n)}function StringKeyframeTrack(e,t,i,n){KeyframeTrack.call(this,e,t,i,n)}function VectorKeyframeTrack(e,t,i,n){KeyframeTrack.call(this,e,t,i,n)}function AnimationClip(e,t,i,n){this.name=e,this.tracks=i,this.duration=void 0!==t?t:-1,this.blendMode=void 0!==n?n:2500,this.uuid=MathUtils.generateUUID(),this.duration<0&&this.resetDuration()}function getTrackTypeForValueTypeName(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function parseKeyframeTrack(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=getTrackTypeForValueTypeName(e.type);if(void 0===e.times){const t=[],i=[];AnimationUtils.flattenJSON(e.keys,t,i,"value"),e.times=t,e.values=i}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(Interpolant.prototype,{evaluate:function(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],r=t[i-1];e:{t:{let s;i:{n:if(!(e<n)){for(let s=i+2;;){if(void 0===n){if(e<r)break n;return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,e,r)}if(i===s)break;if(r=n,n=t[++i],e<n)break t}s=t.length;break i}if(e>=r)break e;{const o=t[1];e<o&&(i=2,r=o);for(let s=i-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(i===s)break;if(n=r,r=t[--i-1],e>=r)break t}s=i,i=0}}for(;i<s;){const n=i+s>>>1;e<t[n]?s=n:i=n+1}if(n=t[i],r=t[i-1],void 0===r)return this._cachedIndex=0,this.beforeStart_(0,e,n);if(void 0===n)return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,r,e)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,e,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=e*n;for(let e=0;e!==n;++e)t[e]=i[r+e];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Interpolant.prototype,{beforeStart_:Interpolant.prototype.copySampleValue_,afterEnd_:Interpolant.prototype.copySampleValue_}),CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:2400,endingEnd:2400},intervalChanged_:function(e,t,i){const n=this.parameterPositions;let r=e-2,s=e+1,o=n[r],a=n[s];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:r=e,o=2*t-i;break;case 2402:r=n.length-2,o=t+n[r]-n[r+1];break;default:r=e,o=i}if(void 0===a)switch(this.getSettings_().endingEnd){case 2401:s=e,a=2*i-t;break;case 2402:s=1,a=i+n[1]-n[0];break;default:s=e-1,a=t}const l=.5*(i-t),c=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(a-i),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,l=a-o,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(i-t)/(n-t),m=p*p,f=m*p,g=-u*f+2*u*m-u*p,y=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,v=(-1-d)*f+(1.5+d)*m+.5*p,b=d*f-d*m;for(let e=0;e!==o;++e)r[e]=g*s[c+e]+y*s[l+e]+v*s[a+e]+b*s[h+e];return r}}),LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,l=a-o,c=(i-t)/(n-t),h=1-c;for(let e=0;e!==o;++e)r[e]=s[l+e]*h+s[a+e]*c;return r}}),DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(e){return this.copySampleValue_(e-1)}}),Object.assign(KeyframeTrack,{toJSON:function(e){const t=e.constructor;let i;if(void 0!==t.toJSON)i=t.toJSON(e);else{i={name:e.name,times:AnimationUtils.convertArray(e.times,Array),values:AnimationUtils.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(i.interpolation=t)}return i.type=e.ValueTypeName,i}}),Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this},scale:function(e){if(1!==e){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this},trim:function(e,t){const i=this.times,n=i.length;let r=0,s=n-1;for(;r!==n&&i[r]<e;)++r;for(;-1!==s&&i[s]>t;)--s;if(++s,0!==r||s!==n){r>=s&&(s=Math.max(s,1),r=s-1);const e=this.getValueSize();this.times=AnimationUtils.arraySlice(i,r,s),this.values=AnimationUtils.arraySlice(this.values,r*e,s*e)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,r=i.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let t=0;t!==r;t++){const n=i[t];if("number"==typeof n&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,n),e=!1;break}if(null!==s&&s>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,n,s),e=!1;break}s=n}if(void 0!==n&&AnimationUtils.isTypedArray(n))for(let t=0,i=n.length;t!==i;++t){const i=n[t];if(isNaN(i)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,i),e=!1;break}}return e},optimize:function(){const e=AnimationUtils.arraySlice(this.times),t=AnimationUtils.arraySlice(this.values),i=this.getValueSize(),n=2302===this.getInterpolation(),r=e.length-1;let s=1;for(let o=1;o<r;++o){let r=!1;const a=e[o];if(a!==e[o+1]&&(1!==o||a!==a[0]))if(n)r=!0;else{const e=o*i,n=e-i,s=e+i;for(let o=0;o!==i;++o){const i=t[e+o];if(i!==t[n+o]||i!==t[s+o]){r=!0;break}}}if(r){if(o!==s){e[s]=e[o];const n=o*i,r=s*i;for(let e=0;e!==i;++e)t[r+e]=t[n+e]}++s}}if(r>0){e[s]=e[r];for(let e=r*i,n=s*i,o=0;o!==i;++o)t[n+o]=t[e+o];++s}return s!==e.length?(this.times=AnimationUtils.arraySlice(e,0,s),this.values=AnimationUtils.arraySlice(t,0,s*i)):(this.times=e,this.values=t),this},clone:function(){const e=AnimationUtils.arraySlice(this.times,0),t=AnimationUtils.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}),BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:"color"}),NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:"number"}),QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(e,t,i,n){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(i-t)/(n-t);let l=e*o;for(let e=l+o;l!==e;l+=4)Quaternion.slerpFlat(r,0,s,l-o,s,l,a);return r}}),QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:"vector"}),Object.assign(AnimationClip,{parse:function(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let e=0,r=i.length;e!==r;++e)t.push(parseKeyframeTrack(i[e]).scale(n));return new AnimationClip(e.name,e.duration,t,e.blendMode)},toJSON:function(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,n=i.length;e!==n;++e)t.push(KeyframeTrack.toJSON(i[e]));return n},CreateFromMorphTargetSequence:function(e,t,i,n){const r=t.length,s=[];for(let e=0;e<r;e++){let o=[],a=[];o.push((e+r-1)%r,e,(e+1)%r),a.push(0,1,0);const l=AnimationUtils.getKeyframeOrder(o);o=AnimationUtils.sortedArray(o,1,l),a=AnimationUtils.sortedArray(a,1,l),n||0!==o[0]||(o.push(r),a.push(a[0])),s.push(new NumberKeyframeTrack(".morphTargetInfluences["+t[e].name+"]",o,a).scale(1/i))}return new AnimationClip(e,-1,s)},findByName:function(e,t){let i=e;if(!Array.isArray(e)){const t=e;i=t.geometry&&t.geometry.animations||t.animations}for(let e=0;e<i.length;e++)if(i[e].name===t)return i[e];return null},CreateClipsFromMorphTargetSequences:function(e,t,i){const n={},r=/^([\w-]*?)([\d]+)$/;for(let t=0,i=e.length;t<i;t++){const i=e[t],s=i.name.match(r);if(s&&s.length>1){const e=s[1];let t=n[e];t||(n[e]=t=[]),t.push(i)}}const s=[];for(const e in n)s.push(AnimationClip.CreateFromMorphTargetSequence(e,n[e],t,i));return s},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(e,t,i,n,r){if(0!==i.length){const s=[],o=[];AnimationUtils.flattenJSON(i,s,o,n),0!==s.length&&r.push(new e(t,s,o))}},n=[],r=e.name||"default",s=e.fps||30,o=e.blendMode;let a=e.length||-1;const l=e.hierarchy||[];for(let e=0;e<l.length;e++){const r=l[e].keys;if(r&&0!==r.length)if(r[0].morphTargets){const e={};let t;for(t=0;t<r.length;t++)if(r[t].morphTargets)for(let i=0;i<r[t].morphTargets.length;i++)e[r[t].morphTargets[i]]=-1;for(const i in e){const e=[],s=[];for(let n=0;n!==r[t].morphTargets.length;++n){const n=r[t];e.push(n.time),s.push(n.morphTarget===i?1:0)}n.push(new NumberKeyframeTrack(".morphTargetInfluence["+i+"]",e,s))}a=e.length*(s||1)}else{const s=".bones["+t[e].name+"]";i(VectorKeyframeTrack,s+".position",r,"pos",n),i(QuaternionKeyframeTrack,s+".quaternion",r,"rot",n),i(VectorKeyframeTrack,s+".scale",r,"scl",n)}}if(0===n.length)return null;return new AnimationClip(r,a,n,o)}}),Object.assign(AnimationClip.prototype,{resetDuration:function(){let e=0;for(let t=0,i=this.tracks.length;t!==i;++t){const i=this.tracks[t];e=Math.max(e,i.times[i.times.length-1])}return this.duration=e,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new AnimationClip(this.name,this.duration,e,this.blendMode)}});const Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function LoadingManager(e,t,i){const n=this;let r,s=!1,o=0,a=0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){a++,!1===s&&void 0!==n.onStart&&n.onStart(e,o,a),s=!0},this.itemEnd=function(e){o++,void 0!==n.onProgress&&n.onProgress(e,o,a),o===a&&(s=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return r?r(e):e},this.setURLModifier=function(e){return r=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){const t=l.indexOf(e);return-1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){const i=l[t],n=l[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return n}return null}}const DefaultLoadingManager=new LoadingManager;function Loader(e){this.manager=void 0!==e?e:DefaultLoadingManager,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Loader.prototype,{load:function(){},loadAsync:function(e,t){const i=this;return new Promise((function(n,r){i.load(e,n,t,r)}))},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const loading={};function FileLoader(e){Loader.call(this,e)}function AnimationLoader(e){Loader.call(this,e)}function CompressedTextureLoader(e){Loader.call(this,e)}function ImageLoader(e){Loader.call(this,e)}function CubeTextureLoader(e){Loader.call(this,e)}function DataTextureLoader(e){Loader.call(this,e)}function TextureLoader(e){Loader.call(this,e)}function Curve(){this.type="Curve",this.arcLengthDivisions=200}function EllipseCurve(e,t,i,n,r,s,o,a){Curve.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=i||1,this.yRadius=n||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}function ArcCurve(e,t,i,n,r,s){EllipseCurve.call(this,e,t,i,i,n,r,s),this.type="ArcCurve"}function CubicPoly(){let e=0,t=0,i=0,n=0;function r(r,s,o,a){e=r,t=o,i=-3*r+3*s-2*o-a,n=2*r-2*s+o+a}return{initCatmullRom:function(e,t,i,n,s){r(t,i,s*(i-e),s*(n-t))},initNonuniformCatmullRom:function(e,t,i,n,s,o,a){let l=(t-e)/s-(i-e)/(s+o)+(i-t)/o,c=(i-t)/o-(n-t)/(o+a)+(n-i)/a;l*=o,c*=o,r(t,i,l,c)},calc:function(r){const s=r*r;return e+t*r+i*s+n*(s*r)}}}FileLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FileLoader,load:function(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Cache.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout((function(){t&&t(s),r.manager.itemEnd(e)}),0),s;if(void 0!==loading[e])return void loading[e].push({onLoad:t,onProgress:i,onError:n});const o=e.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(o){const i=o[1],s=!!o[2];let a=o[3];a=decodeURIComponent(a),s&&(a=atob(a));try{let n;const s=(this.responseType||"").toLowerCase();switch(s){case"arraybuffer":case"blob":const e=new Uint8Array(a.length);for(let t=0;t<a.length;t++)e[t]=a.charCodeAt(t);n="blob"===s?new Blob([e.buffer],{type:i}):e.buffer;break;case"document":const t=new DOMParser;n=t.parseFromString(a,i);break;case"json":n=JSON.parse(a);break;default:n=a}setTimeout((function(){t&&t(n),r.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}),0)}}else{loading[e]=[],loading[e].push({onLoad:t,onProgress:i,onError:n}),a=new XMLHttpRequest,a.open("GET",e,!0),a.addEventListener("load",(function(t){const i=this.response,n=loading[e];if(delete loading[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Cache.add(e,i);for(let e=0,t=n.length;e<t;e++){const t=n[e];t.onLoad&&t.onLoad(i)}r.manager.itemEnd(e)}else{for(let e=0,i=n.length;e<i;e++){const i=n[e];i.onError&&i.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}}),!1),a.addEventListener("progress",(function(t){const i=loading[e];for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onProgress&&n.onProgress(t)}}),!1),a.addEventListener("error",(function(t){const i=loading[e];delete loading[e];for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onError&&n.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),a.addEventListener("abort",(function(t){const i=loading[e];delete loading[e];for(let e=0,n=i.length;e<n;e++){const n=i[e];n.onError&&n.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const e in this.requestHeader)a.setRequestHeader(e,this.requestHeader[e]);a.send(null)}return r.manager.itemStart(e),a},setResponseType:function(e){return this.responseType=e,this},setMimeType:function(e){return this.mimeType=e,this}}),AnimationLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AnimationLoader,load:function(e,t,i,n){const r=this,s=new FileLoader(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,(function(i){try{t(r.parse(JSON.parse(i)))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}}),i,n)},parse:function(e){const t=[];for(let i=0;i<e.length;i++){const n=AnimationClip.parse(e[i]);t.push(n)}return t}}),CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function(e,t,i,n){const r=this,s=[],o=new CompressedTexture;o.image=s;const a=new FileLoader(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let l=0;function c(c){a.load(e[c],(function(e){const i=r.parse(e,!0);s[c]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},l+=1,6===l&&(1===i.mipmapCount&&(o.minFilter=1006),o.format=i.format,o.needsUpdate=!0,t&&t(o))}),i,n)}if(Array.isArray(e))for(let t=0,i=e.length;t<i;++t)c(t);else a.load(e,(function(e){const i=r.parse(e,!0);if(i.isCubemap){const e=i.mipmaps.length/i.mipmapCount;for(let t=0;t<e;t++){s[t]={mipmaps:[]};for(let e=0;e<i.mipmapCount;e++)s[t].mipmaps.push(i.mipmaps[t*i.mipmapCount+e]),s[t].format=i.format,s[t].width=i.width,s[t].height=i.height}}else o.image.width=i.width,o.image.height=i.height,o.mipmaps=i.mipmaps;1===i.mipmapCount&&(o.minFilter=1006),o.format=i.format,o.needsUpdate=!0,t&&t(o)}),i,n);return o}}),ImageLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageLoader,load:function(e,t,i,n){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Cache.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout((function(){t&&t(s),r.manager.itemEnd(e)}),0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),Cache.add(e,this),t&&t(this),r.manager.itemEnd(e)}function l(t){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}}),CubeTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CubeTextureLoader,load:function(e,t,i,n){const r=new CubeTexture,s=new ImageLoader(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(i){s.load(e[i],(function(e){r.images[i]=e,o++,6===o&&(r.needsUpdate=!0,t&&t(r))}),void 0,n)}for(let t=0;t<e.length;++t)a(t);return r}}),DataTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DataTextureLoader,load:function(e,t,i,n){const r=this,s=new DataTexture,o=new FileLoader(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,(function(e){const i=r.parse(e);i&&(void 0!==i.image?s.image=i.image:void 0!==i.data&&(s.image.width=i.width,s.image.height=i.height,s.image.data=i.data),s.wrapS=void 0!==i.wrapS?i.wrapS:1001,s.wrapT=void 0!==i.wrapT?i.wrapT:1001,s.magFilter=void 0!==i.magFilter?i.magFilter:1006,s.minFilter=void 0!==i.minFilter?i.minFilter:1006,s.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(s.format=i.format),void 0!==i.type&&(s.type=i.type),void 0!==i.mipmaps&&(s.mipmaps=i.mipmaps,s.minFilter=1008),1===i.mipmapCount&&(s.minFilter=1006),s.needsUpdate=!0,t&&t(s,i))}),i,n),s}}),TextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:TextureLoader,load:function(e,t,i,n){const r=new Texture,s=new ImageLoader(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,(function(i){r.image=i;const n=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);r.format=n?1022:1023,r.needsUpdate=!0,void 0!==t&&t(r)}),i,n),r}}),Object.assign(Curve.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const i=this.getUtoTmapping(e);return this.getPoint(i,t)},getPoints:function(e){void 0===e&&(e=5);const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t},getSpacedPoints:function(e){void 0===e&&(e=5);const t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(void 0===e&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,n=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)i=this.getPoint(s/e),r+=i.distanceTo(n),t.push(r),n=i;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const i=this.getLengths();let n=0;const r=i.length;let s;s=t||e*i[r-1];let o,a=0,l=r-1;for(;a<=l;)if(n=Math.floor(a+(l-a)/2),o=i[n]-s,o<0)a=n+1;else{if(!(o>0)){l=n;break}l=n-1}if(n=l,i[n]===s)return n/(r-1);const c=i[n];return(n+(s-c)/(i[n+1]-c))/(r-1)},getTangent:function(e,t){const i=1e-4;let n=e-i,r=e+i;n<0&&(n=0),r>1&&(r=1);const s=this.getPoint(n),o=this.getPoint(r),a=t||(s.isVector2?new Vector2:new Vector3);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(e,t){const i=this.getUtoTmapping(e);return this.getTangent(i,t)},computeFrenetFrames:function(e,t){const i=new Vector3,n=[],r=[],s=[],o=new Vector3,a=new Matrix4;for(let t=0;t<=e;t++){const i=t/e;n[t]=this.getTangentAt(i,new Vector3),n[t].normalize()}r[0]=new Vector3,s[0]=new Vector3;let l=Number.MAX_VALUE;const c=Math.abs(n[0].x),h=Math.abs(n[0].y),u=Math.abs(n[0].z);c<=l&&(l=c,i.set(1,0,0)),h<=l&&(l=h,i.set(0,1,0)),u<=l&&i.set(0,0,1),o.crossVectors(n[0],i).normalize(),r[0].crossVectors(n[0],o),s[0].crossVectors(n[0],r[0]);for(let t=1;t<=e;t++){if(r[t]=r[t-1].clone(),s[t]=s[t-1].clone(),o.crossVectors(n[t-1],n[t]),o.length()>Number.EPSILON){o.normalize();const e=Math.acos(MathUtils.clamp(n[t-1].dot(n[t]),-1,1));r[t].applyMatrix4(a.makeRotationAxis(o,e))}s[t].crossVectors(n[t],r[t])}if(!0===t){let t=Math.acos(MathUtils.clamp(r[0].dot(r[e]),-1,1));t/=e,n[0].dot(o.crossVectors(r[0],r[e]))>0&&(t=-t);for(let i=1;i<=e;i++)r[i].applyMatrix4(a.makeRotationAxis(n[i],t*i)),s[i].crossVectors(n[i],r[i])}return{tangents:n,normals:r,binormals:s}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}),EllipseCurve.prototype=Object.create(Curve.prototype),EllipseCurve.prototype.constructor=EllipseCurve,EllipseCurve.prototype.isEllipseCurve=!0,EllipseCurve.prototype.getPoint=function(e,t){const i=t||new Vector2,n=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=n;for(;r>n;)r-=n;r<Number.EPSILON&&(r=s?0:n),!0!==this.aClockwise||s||(r===n?r=-n:r-=n);const o=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),i=a-this.aX,n=l-this.aY;a=i*e-n*t+this.aX,l=i*t+n*e+this.aY}return i.set(a,l)},EllipseCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},EllipseCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},EllipseCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},ArcCurve.prototype=Object.create(EllipseCurve.prototype),ArcCurve.prototype.constructor=ArcCurve,ArcCurve.prototype.isArcCurve=!0;const tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;function CatmullRomCurve3(e,t,i,n){Curve.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=i||"centripetal",this.tension=void 0!==n?n:.5}function CatmullRom(e,t,i,n,r){const s=.5*(n-t),o=.5*(r-i),a=e*e;return(2*i-2*n+s+o)*(e*a)+(-3*i+3*n-2*s-o)*a+s*e+i}function QuadraticBezierP0(e,t){const i=1-e;return i*i*t}function QuadraticBezierP1(e,t){return 2*(1-e)*e*t}function QuadraticBezierP2(e,t){return e*e*t}function QuadraticBezier(e,t,i,n){return QuadraticBezierP0(e,t)+QuadraticBezierP1(e,i)+QuadraticBezierP2(e,n)}function CubicBezierP0(e,t){const i=1-e;return i*i*i*t}function CubicBezierP1(e,t){const i=1-e;return 3*i*i*e*t}function CubicBezierP2(e,t){return 3*(1-e)*e*e*t}function CubicBezierP3(e,t){return e*e*e*t}function CubicBezier(e,t,i,n,r){return CubicBezierP0(e,t)+CubicBezierP1(e,i)+CubicBezierP2(e,n)+CubicBezierP3(e,r)}function CubicBezierCurve(e,t,i,n){Curve.call(this),this.type="CubicBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=i||new Vector2,this.v3=n||new Vector2}function CubicBezierCurve3(e,t,i,n){Curve.call(this),this.type="CubicBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=i||new Vector3,this.v3=n||new Vector3}function LineCurve(e,t){Curve.call(this),this.type="LineCurve",this.v1=e||new Vector2,this.v2=t||new Vector2}function LineCurve3(e,t){Curve.call(this),this.type="LineCurve3",this.v1=e||new Vector3,this.v2=t||new Vector3}function QuadraticBezierCurve(e,t,i){Curve.call(this),this.type="QuadraticBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=i||new Vector2}function QuadraticBezierCurve3(e,t,i){Curve.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=i||new Vector3}function SplineCurve(e){Curve.call(this),this.type="SplineCurve",this.points=e||[]}CatmullRomCurve3.prototype=Object.create(Curve.prototype),CatmullRomCurve3.prototype.constructor=CatmullRomCurve3,CatmullRomCurve3.prototype.isCatmullRomCurve3=!0,CatmullRomCurve3.prototype.getPoint=function(e,t){const i=t||new Vector3,n=this.points,r=n.length,s=(r-(this.closed?0:1))*e;let o,a,l=Math.floor(s),c=s-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?o=n[(l-1)%r]:(tmp.subVectors(n[0],n[1]).add(n[0]),o=tmp);const h=n[l%r],u=n[(l+1)%r];if(this.closed||l+2<r?a=n[(l+2)%r]:(tmp.subVectors(n[r-1],n[r-2]).add(n[r-1]),a=tmp),"centripetal"===this.curveType||"chordal"===this.curveType){const e="chordal"===this.curveType?.5:.25;let t=Math.pow(o.distanceToSquared(h),e),i=Math.pow(h.distanceToSquared(u),e),n=Math.pow(u.distanceToSquared(a),e);i<1e-4&&(i=1),t<1e-4&&(t=i),n<1e-4&&(n=i),px.initNonuniformCatmullRom(o.x,h.x,u.x,a.x,t,i,n),py.initNonuniformCatmullRom(o.y,h.y,u.y,a.y,t,i,n),pz.initNonuniformCatmullRom(o.z,h.z,u.z,a.z,t,i,n)}else"catmullrom"===this.curveType&&(px.initCatmullRom(o.x,h.x,u.x,a.x,this.tension),py.initCatmullRom(o.y,h.y,u.y,a.y,this.tension),pz.initCatmullRom(o.z,h.z,u.z,a.z,this.tension));return i.set(px.calc(c),py.calc(c),pz.calc(c)),i},CatmullRomCurve3.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CatmullRomCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);e.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},CatmullRomCurve3.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push((new Vector3).fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CubicBezierCurve.prototype=Object.create(Curve.prototype),CubicBezierCurve.prototype.constructor=CubicBezierCurve,CubicBezierCurve.prototype.isCubicBezierCurve=!0,CubicBezierCurve.prototype.getPoint=function(e,t){const i=t||new Vector2,n=this.v0,r=this.v1,s=this.v2,o=this.v3;return i.set(CubicBezier(e,n.x,r.x,s.x,o.x),CubicBezier(e,n.y,r.y,s.y,o.y)),i},CubicBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},CubicBezierCurve3.prototype=Object.create(Curve.prototype),CubicBezierCurve3.prototype.constructor=CubicBezierCurve3,CubicBezierCurve3.prototype.isCubicBezierCurve3=!0,CubicBezierCurve3.prototype.getPoint=function(e,t){const i=t||new Vector3,n=this.v0,r=this.v1,s=this.v2,o=this.v3;return i.set(CubicBezier(e,n.x,r.x,s.x,o.x),CubicBezier(e,n.y,r.y,s.y,o.y),CubicBezier(e,n.z,r.z,s.z,o.z)),i},CubicBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this},LineCurve.prototype=Object.create(Curve.prototype),LineCurve.prototype.constructor=LineCurve,LineCurve.prototype.isLineCurve=!0,LineCurve.prototype.getPoint=function(e,t){const i=t||new Vector2;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i},LineCurve.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve.prototype.getTangent=function(e,t){const i=t||new Vector2;return i.copy(this.v2).sub(this.v1).normalize(),i},LineCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},LineCurve3.prototype=Object.create(Curve.prototype),LineCurve3.prototype.constructor=LineCurve3,LineCurve3.prototype.isLineCurve3=!0,LineCurve3.prototype.getPoint=function(e,t){const i=t||new Vector3;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i},LineCurve3.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},QuadraticBezierCurve.prototype=Object.create(Curve.prototype),QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve,QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0,QuadraticBezierCurve.prototype.getPoint=function(e,t){const i=t||new Vector2,n=this.v0,r=this.v1,s=this.v2;return i.set(QuadraticBezier(e,n.x,r.x,s.x),QuadraticBezier(e,n.y,r.y,s.y)),i},QuadraticBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},QuadraticBezierCurve3.prototype=Object.create(Curve.prototype),QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3,QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0,QuadraticBezierCurve3.prototype.getPoint=function(e,t){const i=t||new Vector3,n=this.v0,r=this.v1,s=this.v2;return i.set(QuadraticBezier(e,n.x,r.x,s.x),QuadraticBezier(e,n.y,r.y,s.y),QuadraticBezier(e,n.z,r.z,s.z)),i},QuadraticBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve3.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this},SplineCurve.prototype=Object.create(Curve.prototype),SplineCurve.prototype.constructor=SplineCurve,SplineCurve.prototype.isSplineCurve=!0,SplineCurve.prototype.getPoint=function(e,t){const i=t||new Vector2,n=this.points,r=(n.length-1)*e,s=Math.floor(r),o=r-s,a=n[0===s?s:s-1],l=n[s],c=n[s>n.length-2?n.length-1:s+1],h=n[s>n.length-3?n.length-1:s+2];return i.set(CatmullRom(o,a.x,l.x,c.x,h.x),CatmullRom(o,a.y,l.y,c.y,h.y)),i},SplineCurve.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push(i.clone())}return this},SplineCurve.prototype.toJSON=function(){const e=Curve.prototype.toJSON.call(this);e.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];e.points.push(i.toArray())}return e},SplineCurve.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){const i=e.points[t];this.points.push((new Vector2).fromArray(i))}return this};var Curves=Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});function CurvePath(){Curve.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Path(e){CurvePath.call(this),this.type="Path",this.currentPoint=new Vector2,e&&this.setFromPoints(e)}function Shape(e){Path.call(this,e),this.uuid=MathUtils.generateUUID(),this.type="Shape",this.holes=[]}function Light(e,t){Object3D.call(this),this.type="Light",this.color=new Color(e),this.intensity=void 0!==t?t:1}function HemisphereLight(e,t,i){Light.call(this,e,i),this.type="HemisphereLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Color(t)}function LightShadow(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new Matrix4,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,.5,500)),this.focus=1}function SpotLight(e,t,i,n,r,s){Light.call(this,e,t),this.type="SpotLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==s?s:1,this.shadow=new SpotLightShadow}function PointLightShadow(){LightShadow.call(this,new PerspectiveCamera(90,1,.5,500)),this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}function PointLight(e,t,i,n){Light.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,this.shadow=new PointLightShadow}function OrthographicCamera(e,t,i,n,r,s){Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=void 0!==e?e:-1,this.right=void 0!==t?t:1,this.top=void 0!==i?i:1,this.bottom=void 0!==n?n:-1,this.near=void 0!==r?r:.1,this.far=void 0!==s?s:2e3,this.updateProjectionMatrix()}function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,.5,500))}function DirectionalLight(e,t){Light.call(this,e,t),this.type="DirectionalLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}function AmbientLight(e,t){Light.call(this,e,t),this.type="AmbientLight"}function RectAreaLight(e,t,i,n){Light.call(this,e,t),this.type="RectAreaLight",this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new LineCurve(t,e))},getPoint:function(e){const t=e*this.getLength(),i=this.getCurveLengths();let n=0;for(;n<i.length;){if(i[n]>=t){const e=i[n]-t,r=this.curves[n],s=r.getLength(),o=0===s?0:1-e/s;return r.getPointAt(o)}n++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let i=0,n=this.curves.length;i<n;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){void 0===e&&(e=40);const t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;const t=[];let i;for(let n=0,r=this.curves;n<r.length;n++){const s=r[n],o=s&&s.isEllipseCurve?2*e:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?e*s.points.length:e,a=s.getPoints(o);for(let e=0;e<a.length;e++){const n=a[e];i&&i.equals(n)||(t.push(n),i=n)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){Curve.prototype.copy.call(this,e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=Curve.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e},fromJSON:function(e){Curve.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){const i=e.curves[t];this.curves.push((new Curves[i.type]).fromJSON(i))}return this}}),Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const i=new LineCurve(this.currentPoint.clone(),new Vector2(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,i,n){const r=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(i,n));return this.curves.push(r),this.currentPoint.set(i,n),this},bezierCurveTo:function(e,t,i,n,r,s){const o=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(i,n),new Vector2(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(e){const t=new SplineCurve([this.currentPoint.clone()].concat(e));return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,i,n,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+o,t+a,i,n,r,s),this},absarc:function(e,t,i,n,r,s){return this.absellipse(e,t,i,i,n,r,s),this},ellipse:function(e,t,i,n,r,s,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(e+l,t+c,i,n,r,s,o,a),this},absellipse:function(e,t,i,n,r,s,o,a){const l=new EllipseCurve(e,t,i,n,r,s,o,a);if(this.curves.length>0){const e=l.getPoint(0);e.equals(this.currentPoint)||this.lineTo(e.x,e.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(e){return CurvePath.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=CurvePath.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return CurvePath.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}),Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(e){const t=[];for(let i=0,n=this.holes.length;i<n;i++)t[i]=this.holes[i].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Path.prototype.copy.call(this,e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const i=e.holes[t];this.holes.push(i.clone())}return this},toJSON:function(){const e=Path.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e},fromJSON:function(e){Path.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){const i=e.holes[t];this.holes.push((new Path).fromJSON(i))}return this}}),Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),Object.assign(LightShadow.prototype,{_projScreenMatrix:new Matrix4,_lightPositionWorld:new Vector3,_lookTarget:new Vector3,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,i=this.matrix,n=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(e.matrixWorld),t.position.copy(s),r.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(r),t.updateMatrixWorld(),n.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(n),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}),SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,i=2*MathUtils.RAD2DEG*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;i===t.fov&&n===t.aspect&&r===t.far||(t.fov=i,t.aspect=n,t.far=r,t.updateProjectionMatrix()),LightShadow.prototype.updateMatrices.call(this,e)}}),SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),PointLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:PointLightShadow,isPointLightShadow:!0,updateMatrices:function(e,t){void 0===t&&(t=0);const i=this.camera,n=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(e.matrixWorld),i.position.copy(r),s.copy(i.position),s.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(s),i.updateMatrixWorld(),n.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}}),PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this},setViewOffset:function(e,t,i,n,r,s){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let r=i-e,s=i+e,o=n+t,a=n-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,s=r+e*this.view.width,o-=t*this.view.offsetY,a=o-t*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}),DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow,isDirectionalLightShadow:!0,updateMatrices:function(e){LightShadow.prototype.updateMatrices.call(this,e)}}),DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:!0}),RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=Light.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class SphericalHarmonics3{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Vector3)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*n),t.addScaledVector(s[2],.488603*r),t.addScaledVector(s[3],.488603*i),t.addScaledVector(s[4],i*n*1.092548),t.addScaledVector(s[5],n*r*1.092548),t.addScaledVector(s[6],.315392*(3*r*r-1)),t.addScaledVector(s[7],i*r*1.092548),t.addScaledVector(s[8],.546274*(i*i-n*n)),t}getIrradianceAt(e,t){const i=e.x,n=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],1.023328*n),t.addScaledVector(s[2],1.023328*r),t.addScaledVector(s[3],1.023328*i),t.addScaledVector(s[4],.858086*i*n),t.addScaledVector(s[5],.858086*n*r),t.addScaledVector(s[6],.743125*r*r-.247708),t.addScaledVector(s[7],.858086*i*r),t.addScaledVector(s[8],.429043*(i*i-n*n)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t){void 0===t&&(t=0);const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(e,t+3*n);return this}toArray(e,t){void 0===e&&(e=[]),void 0===t&&(t=0);const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(e,t+3*n);return e}static getBasisAt(e,t){const i=e.x,n=e.y,r=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*r,t[3]=.488603*i,t[4]=1.092548*i*n,t[5]=1.092548*n*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*i*r,t[8]=.546274*(i*i-n*n)}}function LightProbe(e,t){Light.call(this,void 0,t),this.type="LightProbe",this.sh=void 0!==e?e:new SphericalHarmonics3}function MaterialLoader(e){Loader.call(this,e),this.textures={}}LightProbe.prototype=Object.assign(Object.create(Light.prototype),{constructor:LightProbe,isLightProbe:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=Light.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}}),MaterialLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:MaterialLoader,load:function(e,t,i,n){const r=this,s=new FileLoader(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,(function(i){try{t(r.parse(JSON.parse(i)))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}}),i,n)},parse:function(e){const t=this.textures;function i(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}const n=new Materials[e.type];if(void 0!==e.uuid&&(n.uuid=e.uuid),void 0!==e.name&&(n.name=e.name),void 0!==e.color&&n.color.setHex(e.color),void 0!==e.roughness&&(n.roughness=e.roughness),void 0!==e.metalness&&(n.metalness=e.metalness),void 0!==e.sheen&&(n.sheen=(new Color).setHex(e.sheen)),void 0!==e.emissive&&n.emissive.setHex(e.emissive),void 0!==e.specular&&n.specular.setHex(e.specular),void 0!==e.shininess&&(n.shininess=e.shininess),void 0!==e.clearcoat&&(n.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(n.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.fog&&(n.fog=e.fog),void 0!==e.flatShading&&(n.flatShading=e.flatShading),void 0!==e.blending&&(n.blending=e.blending),void 0!==e.combine&&(n.combine=e.combine),void 0!==e.side&&(n.side=e.side),void 0!==e.opacity&&(n.opacity=e.opacity),void 0!==e.transparent&&(n.transparent=e.transparent),void 0!==e.alphaTest&&(n.alphaTest=e.alphaTest),void 0!==e.depthTest&&(n.depthTest=e.depthTest),void 0!==e.depthWrite&&(n.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(n.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(n.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(n.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(n.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(n.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(n.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(n.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(n.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(n.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(n.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(n.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(n.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(n.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(n.rotation=e.rotation),1!==e.linewidth&&(n.linewidth=e.linewidth),void 0!==e.dashSize&&(n.dashSize=e.dashSize),void 0!==e.gapSize&&(n.gapSize=e.gapSize),void 0!==e.scale&&(n.scale=e.scale),void 0!==e.polygonOffset&&(n.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(n.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(n.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.skinning&&(n.skinning=e.skinning),void 0!==e.morphTargets&&(n.morphTargets=e.morphTargets),void 0!==e.morphNormals&&(n.morphNormals=e.morphNormals),void 0!==e.dithering&&(n.dithering=e.dithering),void 0!==e.vertexTangents&&(n.vertexTangents=e.vertexTangents),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.toneMapped&&(n.toneMapped=e.toneMapped),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?n.vertexColors=e.vertexColors>0:n.vertexColors=e.vertexColors),void 0!==e.uniforms)for(const t in e.uniforms){const r=e.uniforms[t];switch(n.uniforms[t]={},r.type){case"t":n.uniforms[t].value=i(r.value);break;case"c":n.uniforms[t].value=(new Color).setHex(r.value);break;case"v2":n.uniforms[t].value=(new Vector2).fromArray(r.value);break;case"v3":n.uniforms[t].value=(new Vector3).fromArray(r.value);break;case"v4":n.uniforms[t].value=(new Vector4).fromArray(r.value);break;case"m3":n.uniforms[t].value=(new Matrix3).fromArray(r.value);break;case"m4":n.uniforms[t].value=(new Matrix4).fromArray(r.value);break;default:n.uniforms[t].value=r.value}}if(void 0!==e.defines&&(n.defines=e.defines),void 0!==e.vertexShader&&(n.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(n.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(const t in e.extensions)n.extensions[t]=e.extensions[t];if(void 0!==e.shading&&(n.flatShading=1===e.shading),void 0!==e.size&&(n.size=e.size),void 0!==e.sizeAttenuation&&(n.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(n.map=i(e.map)),void 0!==e.matcap&&(n.matcap=i(e.matcap)),void 0!==e.alphaMap&&(n.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(n.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(n.bumpScale=e.bumpScale),void 0!==e.normalMap&&(n.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(n.normalMapType=e.normalMapType),void 0!==e.normalScale){let t=e.normalScale;!1===Array.isArray(t)&&(t=[t,t]),n.normalScale=(new Vector2).fromArray(t)}return void 0!==e.displacementMap&&(n.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(n.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(n.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(n.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(n.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(n.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(n.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(n.specularMap=i(e.specularMap)),void 0!==e.envMap&&(n.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(n.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(n.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(n.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(n.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(n.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(n.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(n.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(n.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(n.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(n.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Vector2).fromArray(e.clearcoatNormalScale)),void 0!==e.transmission&&(n.transmission=e.transmission),void 0!==e.transmissionMap&&(n.transmissionMap=i(e.transmissionMap)),n},setTextures:function(e){return this.textures=e,this}});const LoaderUtils={decodeText:function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(e){return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}};function InstancedBufferGeometry(){BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function InstancedBufferAttribute(e,t,i,n){"number"==typeof i&&(n=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),BufferAttribute.call(this,e,t,i),this.meshPerAttribute=n||1}function BufferGeometryLoader(e){Loader.call(this,e)}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:!0,copy:function(e){return BufferGeometry.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const e=BufferGeometry.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}),InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:!0,copy:function(e){return BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=BufferAttribute.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}),BufferGeometryLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:BufferGeometryLoader,load:function(e,t,i,n){const r=this,s=new FileLoader(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,(function(i){try{t(r.parse(JSON.parse(i)))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}}),i,n)},parse:function(e){const t={},i={};function n(e,n){if(void 0!==t[n])return t[n];const r=e.interleavedBuffers[n],s=function(e,t){if(void 0!==i[t])return i[t];const n=e.arrayBuffers[t],r=new Uint32Array(n).buffer;return i[t]=r,r}(e,r.buffer),o=new InterleavedBuffer(new TYPED_ARRAYS[r.type](s),r.stride);return o.uuid=r.uuid,t[n]=o,o}const r=e.isInstancedBufferGeometry?new InstancedBufferGeometry:new BufferGeometry,s=e.data.index;if(void 0!==s){const e=new TYPED_ARRAYS[s.type](s.array);r.setIndex(new BufferAttribute(e,1))}const o=e.data.attributes;for(const t in o){const i=o[t];let s;if(i.isInterleavedBufferAttribute){s=new InterleavedBufferAttribute(n(e.data,i.data),i.itemSize,i.offset,i.normalized)}else{const e=new TYPED_ARRAYS[i.type](i.array);s=new(i.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute)(e,i.itemSize,i.normalized)}void 0!==i.name&&(s.name=i.name),r.setAttribute(t,s)}const a=e.data.morphAttributes;if(a)for(const t in a){const i=a[t],s=[];for(let t=0,r=i.length;t<r;t++){const r=i[t];let o;if(r.isInterleavedBufferAttribute){o=new InterleavedBufferAttribute(n(e.data,r.data),r.itemSize,r.offset,r.normalized)}else{o=new BufferAttribute(new TYPED_ARRAYS[r.type](r.array),r.itemSize,r.normalized)}void 0!==r.name&&(o.name=r.name),s.push(o)}r.morphAttributes[t]=s}e.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const l=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==l)for(let e=0,t=l.length;e!==t;++e){const t=l[e];r.addGroup(t.start,t.count,t.materialIndex)}const c=e.data.boundingSphere;if(void 0!==c){const e=new Vector3;void 0!==c.center&&e.fromArray(c.center),r.boundingSphere=new Sphere(e,c.radius)}return e.name&&(r.name=e.name),e.userData&&(r.userData=e.userData),r}});const TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};class ObjectLoader extends Loader{constructor(e){super(e)}load(e,t,i,n){const r=this,s=""===this.path?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||s;const o=new FileLoader(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,(function(i){let s=null;try{s=JSON.parse(i)}catch(t){return void 0!==n&&n(t),void console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message)}const o=s.metadata;void 0!==o&&void 0!==o.type&&"geometry"!==o.type.toLowerCase()?r.parse(s,t):console.error("THREE.ObjectLoader: Can't load "+e)}),i,n)}parse(e,t){const i=this.parseShape(e.shapes),n=this.parseGeometries(e.geometries,i),r=this.parseImages(e.images,(function(){void 0!==t&&t(a)})),s=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,s),a=this.parseObject(e.object,n,o);return e.animations&&(a.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0!==t&&t(a),a}parseShape(e){const t={};if(void 0!==e)for(let i=0,n=e.length;i<n;i++){const n=(new Shape).fromJSON(e[i]);t[n.uuid]=n}return t}parseGeometries(e,t){const i={};let n;if(void 0!==e){const r=new BufferGeometryLoader;for(let s=0,o=e.length;s<o;s++){let o;const a=e[s];switch(a.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new Geometries[a.type](a.width,a.height,a.widthSegments,a.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new Geometries[a.type](a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new Geometries[a.type](a.radius,a.segments,a.thetaStart,a.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new Geometries[a.type](a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new Geometries[a.type](a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new Geometries[a.type](a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":o=new Geometries[a.type](a.radius,a.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new Geometries[a.type](a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new Geometries[a.type](a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new Geometries[a.type](a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q);break;case"TubeGeometry":case"TubeBufferGeometry":o=new Geometries[a.type]((new Curves[a.path.type]).fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed);break;case"LatheGeometry":case"LatheBufferGeometry":o=new Geometries[a.type](a.points,a.segments,a.phiStart,a.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":o=new Geometries[a.type](a.vertices,a.indices,a.radius,a.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":n=[];for(let e=0,i=a.shapes.length;e<i;e++){const i=t[a.shapes[e]];n.push(i)}o=new Geometries[a.type](n,a.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":n=[];for(let e=0,i=a.shapes.length;e<i;e++){const i=t[a.shapes[e]];n.push(i)}const e=a.options.extrudePath;void 0!==e&&(a.options.extrudePath=(new Curves[e.type]).fromJSON(e)),o=new Geometries[a.type](n,a.options);break;case"BufferGeometry":case"InstancedBufferGeometry":o=r.parse(a);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+a.type+'"');continue}o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),!0===o.isBufferGeometry&&void 0!==a.userData&&(o.userData=a.userData),i[a.uuid]=o}}return i}parseMaterials(e,t){const i={},n={};if(void 0!==e){const r=new MaterialLoader;r.setTextures(t);for(let t=0,s=e.length;t<s;t++){const s=e[t];if("MultiMaterial"===s.type){const e=[];for(let t=0;t<s.materials.length;t++){const n=s.materials[t];void 0===i[n.uuid]&&(i[n.uuid]=r.parse(n)),e.push(i[n.uuid])}n[s.uuid]=e}else void 0===i[s.uuid]&&(i[s.uuid]=r.parse(s)),n[s.uuid]=i[s.uuid]}}return n}parseAnimations(e){const t=[];for(let i=0;i<e.length;i++){const n=e[i],r=AnimationClip.parse(n);void 0!==n.uuid&&(r.uuid=n.uuid),t.push(r)}return t}parseImages(e,t){const i=this,n={};let r;function s(e){return i.manager.itemStart(e),r.load(e,(function(){i.manager.itemEnd(e)}),void 0,(function(){i.manager.itemError(e),i.manager.itemEnd(e)}))}if(void 0!==e&&e.length>0){const o=new LoadingManager(t);r=new ImageLoader(o),r.setCrossOrigin(this.crossOrigin);for(let t=0,r=e.length;t<r;t++){const r=e[t],o=r.url;if(Array.isArray(o)){n[r.uuid]=[];for(let e=0,t=o.length;e<t;e++){const t=o[e],a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:i.resourcePath+t;n[r.uuid].push(s(a))}}else{const e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(r.url)?r.url:i.resourcePath+r.url;n[r.uuid]=s(e)}}}return n}parseTextures(e,t){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const n={};if(void 0!==e)for(let r=0,s=e.length;r<s;r++){const s=e[r];let o;void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),o=Array.isArray(t[s.image])?new CubeTexture(t[s.image]):new Texture(t[s.image]),o.needsUpdate=!0,o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=i(s.mapping,TEXTURE_MAPPING)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=i(s.wrap[0],TEXTURE_WRAPPING),o.wrapT=i(s.wrap[1],TEXTURE_WRAPPING)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=i(s.minFilter,TEXTURE_FILTER)),void 0!==s.magFilter&&(o.magFilter=i(s.magFilter,TEXTURE_FILTER)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),n[s.uuid]=o}return n}parseObject(e,t,i){let n,r,s;function o(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function a(e){if(void 0!==e){if(Array.isArray(e)){const t=[];for(let n=0,r=e.length;n<r;n++){const r=e[n];void 0===i[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),t.push(i[r])}return t}return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}}switch(e.type){case"Scene":n=new Scene,void 0!==e.background&&Number.isInteger(e.background)&&(n.background=new Color(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":n=new DirectionalLight(e.color,e.intensity);break;case"PointLight":n=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=(new LightProbe).fromJSON(e);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":r=o(e.geometry),s=a(e.material),n=new Mesh(r,s);break;case"InstancedMesh":r=o(e.geometry),s=a(e.material);const t=e.count,i=e.instanceMatrix;n=new InstancedMesh(r,s,t),n.instanceMatrix=new BufferAttribute(new Float32Array(i.array),16);break;case"LOD":n=new LOD;break;case"Line":n=new Line(o(e.geometry),a(e.material),e.mode);break;case"LineLoop":n=new LineLoop(o(e.geometry),a(e.material));break;case"LineSegments":n=new LineSegments(o(e.geometry),a(e.material));break;case"PointCloud":case"Points":n=new Points(o(e.geometry),a(e.material));break;case"Sprite":n=new Sprite(a(e.material));break;case"Group":n=new Group;break;default:n=new Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){const r=e.children;for(let e=0;e<r.length;e++)n.add(this.parseObject(r[e],t,i))}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);const t=e.levels;for(let e=0;e<t.length;e++){const i=t[e],r=n.getObjectByProperty("uuid",i.object);void 0!==r&&n.addLevel(r,i.distance)}}return n}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const TEXTURE_MAPPING={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},TEXTURE_WRAPPING={RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},TEXTURE_FILTER={NearestFilter:1003,NearestMipmapNearestFilter:1004,NearestMipmapLinearFilter:1005,LinearFilter:1006,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:1008};function ImageBitmapLoader(e){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Loader.call(this,e),this.options={premultiplyAlpha:"none"}}function ShapePath(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}function Font(e){this.type="Font",this.data=e}function createPaths(e,t,i){const n=Array.from?Array.from(e):String(e).split(""),r=t/i.resolution,s=(i.boundingBox.yMax-i.boundingBox.yMin+i.underlineThickness)*r,o=[];let a=0,l=0;for(let e=0;e<n.length;e++){const t=n[e];if("\n"===t)a=0,l-=s;else{const e=createPath(t,r,a,l,i);a+=e.offsetX,o.push(e.path)}}return o}function createPath(e,t,i,n,r){const s=r.glyphs[e]||r.glyphs["?"];if(!s)return void console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");const o=new ShapePath;let a,l,c,h,u,d,p,m;if(s.o){const e=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let r=0,s=e.length;r<s;){switch(e[r++]){case"m":a=e[r++]*t+i,l=e[r++]*t+n,o.moveTo(a,l);break;case"l":a=e[r++]*t+i,l=e[r++]*t+n,o.lineTo(a,l);break;case"q":c=e[r++]*t+i,h=e[r++]*t+n,u=e[r++]*t+i,d=e[r++]*t+n,o.quadraticCurveTo(u,d,c,h);break;case"b":c=e[r++]*t+i,h=e[r++]*t+n,u=e[r++]*t+i,d=e[r++]*t+n,p=e[r++]*t+i,m=e[r++]*t+n,o.bezierCurveTo(u,d,p,m,c,h)}}}return{offsetX:s.ha*t,path:o}}function FontLoader(e){Loader.call(this,e)}let _context;ImageBitmapLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageBitmapLoader,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(e,t,i,n){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Cache.get(e);if(void 0!==s)return r.manager.itemStart(e),setTimeout((function(){t&&t(s),r.manager.itemEnd(e)}),0),s;const o={};o.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(e,o).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,r.options)})).then((function(i){Cache.add(e,i),t&&t(i),r.manager.itemEnd(e)})).catch((function(t){n&&n(t),r.manager.itemError(e),r.manager.itemEnd(e)})),r.manager.itemStart(e)}}),Object.assign(ShapePath.prototype,{moveTo:function(e,t){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,i,n){return this.currentPath.quadraticCurveTo(e,t,i,n),this},bezierCurveTo:function(e,t,i,n,r,s){return this.currentPath.bezierCurveTo(e,t,i,n,r,s),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function i(e){const t=[];for(let i=0,n=e.length;i<n;i++){const n=e[i],r=new Shape;r.curves=n.curves,t.push(r)}return t}function n(e,t){const i=t.length;let n=!1;for(let r=i-1,s=0;s<i;r=s++){let i=t[r],o=t[s],a=o.x-i.x,l=o.y-i.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(i=t[s],a=-a,o=t[r],l=-l),e.y<i.y||e.y>o.y)continue;if(e.y===i.y){if(e.x===i.x)return!0}else{const t=l*(e.x-i.x)-a*(e.y-i.y);if(0===t)return!0;if(t<0)continue;n=!n}}else{if(e.y!==i.y)continue;if(o.x<=e.x&&e.x<=i.x||i.x<=e.x&&e.x<=o.x)return!0}}return n}const r=ShapeUtils.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===t)return i(s);let o,a,l;const c=[];if(1===s.length)return a=s[0],l=new Shape,l.curves=a.curves,c.push(l),c;let h=!r(s[0].getPoints());h=e?!h:h;const u=[],d=[];let p,m,f=[],g=0;d[g]=void 0,f[g]=[];for(let t=0,i=s.length;t<i;t++)a=s[t],p=a.getPoints(),o=r(p),o=e?!o:o,o?(!h&&d[g]&&g++,d[g]={s:new Shape,p:p},d[g].s.curves=a.curves,h&&g++,f[g]=[]):f[g].push({h:a,p:p[0]});if(!d[0])return i(s);if(d.length>1){let e=!1;const t=[];for(let e=0,t=d.length;e<t;e++)u[e]=[];for(let i=0,r=d.length;i<r;i++){const r=f[i];for(let s=0;s<r.length;s++){const o=r[s];let a=!0;for(let r=0;r<d.length;r++)n(o.p,d[r].p)&&(i!==r&&t.push({froms:i,tos:r,hole:s}),a?(a=!1,u[r].push(o)):e=!0);a&&u[i].push(o)}}t.length>0&&(e||(f=u))}for(let e=0,t=d.length;e<t;e++){l=d[e].s,c.push(l),m=f[e];for(let e=0,t=m.length;e<t;e++)l.holes.push(m[e].h)}return c}}),Object.assign(Font.prototype,{isFont:!0,generateShapes:function(e,t){void 0===t&&(t=100);const i=[],n=createPaths(e,t,this.data);for(let e=0,t=n.length;e<t;e++)Array.prototype.push.apply(i,n[e].toShapes());return i}}),FontLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FontLoader,load:function(e,t,i,n){const r=this,s=new FileLoader(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,(function(e){let i;try{i=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),i=JSON.parse(e.substring(65,e.length-2))}const n=r.parse(i);t&&t(n)}),i,n)},parse:function(e){return new Font(e)}});const AudioContext$1={getContext:function(){return void 0===_context&&(_context=new(window.AudioContext||window.webkitAudioContext)),_context},setContext:function(e){_context=e}};function AudioLoader(e){Loader.call(this,e)}function HemisphereLightProbe(e,t,i){LightProbe.call(this,void 0,i);const n=(new Color).set(e),r=(new Color).set(t),s=new Vector3(n.r,n.g,n.b),o=new Vector3(r.r,r.g,r.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}function AmbientLightProbe(e,t){LightProbe.call(this,void 0,t);const i=(new Color).set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}AudioLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AudioLoader,load:function(e,t,i,n){const r=this,s=new FileLoader(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(e,(function(i){try{const e=i.slice(0);AudioContext$1.getContext().decodeAudioData(e,(function(e){t(e)}))}catch(t){n?n(t):console.error(t),r.manager.itemError(e)}}),i,n)}}),HemisphereLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:HemisphereLightProbe,isHemisphereLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){return LightProbe.prototype.toJSON.call(this,e)}}),AmbientLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:AmbientLightProbe,isAmbientLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){return LightProbe.prototype.toJSON.call(this,e)}});const _eyeRight=new Matrix4,_eyeLeft=new Matrix4;function StereoCamera(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(StereoCamera.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const i=e.projectionMatrix.clone(),n=t.eyeSep/2,r=n*t.near/t.focus,s=t.near*Math.tan(MathUtils.DEG2RAD*t.fov*.5)/t.zoom;let o,a;_eyeLeft.elements[12]=-n,_eyeRight.elements[12]=n,o=-s*t.aspect+r,a=s*t.aspect+r,i.elements[0]=2*t.near/(a-o),i.elements[8]=(a+o)/(a-o),this.cameraL.projectionMatrix.copy(i),o=-s*t.aspect-r,a=s*t.aspect-r,i.elements[0]=2*t.near/(a-o),i.elements[8]=(a+o)/(a-o),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(_eyeLeft),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_eyeRight)}});class Clock{constructor(e){this.autoStart=void 0===e||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=("undefined"==typeof performance?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const _position$2=new Vector3,_quaternion$3=new Quaternion,_scale$1=new Vector3,_orientation=new Vector3;class AudioListener extends Object3D{constructor(){super(),this.type="AudioListener",this.context=AudioContext$1.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position$2,_quaternion$3,_scale$1),_orientation.set(0,0,-1).applyQuaternion(_quaternion$3),t.positionX){const e=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(_position$2.x,e),t.positionY.linearRampToValueAtTime(_position$2.y,e),t.positionZ.linearRampToValueAtTime(_position$2.z,e),t.forwardX.linearRampToValueAtTime(_orientation.x,e),t.forwardY.linearRampToValueAtTime(_orientation.y,e),t.forwardZ.linearRampToValueAtTime(_orientation.z,e),t.upX.linearRampToValueAtTime(i.x,e),t.upY.linearRampToValueAtTime(i.y,e),t.upZ.linearRampToValueAtTime(i.z,e)}else t.setPosition(_position$2.x,_position$2.y,_position$2.z),t.setOrientation(_orientation.x,_orientation.y,_orientation.z,i.x,i.y,i.z)}}class Audio extends Object3D{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e){if(void 0===e&&(e=0),!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const _position$3=new Vector3,_quaternion$4=new Quaternion,_scale$2=new Vector3,_orientation$1=new Vector3;class PositionalAudio extends Audio{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(_position$3,_quaternion$4,_scale$2),_orientation$1.set(0,0,1).applyQuaternion(_quaternion$4);const t=this.panner;if(t.positionX){const e=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(_position$3.x,e),t.positionY.linearRampToValueAtTime(_position$3.y,e),t.positionZ.linearRampToValueAtTime(_position$3.z,e),t.orientationX.linearRampToValueAtTime(_orientation$1.x,e),t.orientationY.linearRampToValueAtTime(_orientation$1.y,e),t.orientationZ.linearRampToValueAtTime(_orientation$1.z,e)}else t.setPosition(_position$3.x,_position$3.y,_position$3.z),t.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z)}}class AudioAnalyser{constructor(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}function PropertyMixer(e,t,i){let n,r,s;switch(this.binding=e,this.valueSize=i,t){case"quaternion":n=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":n=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:n=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(PropertyMixer.prototype,{accumulate:function(e,t){const i=this.buffer,n=this.valueSize,r=e*n+n;let s=this.cumulativeWeight;if(0===s){for(let e=0;e!==n;++e)i[r+e]=i[e];s=t}else{s+=t;const e=t/s;this._mixBufferRegion(i,r,0,e,n)}this.cumulativeWeight=s},accumulateAdditive:function(e){const t=this.buffer,i=this.valueSize,n=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,i),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,i=this.buffer,n=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const e=t*this._origIndex;this._mixBufferRegion(i,n,e,1-r,t)}s>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*t,1,t);for(let e=t,r=t+t;e!==r;++e)if(i[e]!==i[e+t]){o.setValue(i,n);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,i=this.valueSize,n=i*this._origIndex;e.getValue(t,n);for(let e=i,r=n;e!==r;++e)t[e]=t[n+e%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=3*this.valueSize;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]},_select:function(e,t,i,n,r){if(n>=.5)for(let n=0;n!==r;++n)e[t+n]=e[i+n]},_slerp:function(e,t,i,n){Quaternion.slerpFlat(e,t,e,t,e,i,n)},_slerpAdditive:function(e,t,i,n,r){const s=this._workIndex*r;Quaternion.multiplyQuaternionsFlat(e,s,e,t,e,i),Quaternion.slerpFlat(e,t,e,t,e,s,n)},_lerp:function(e,t,i,n,r){const s=1-n;for(let o=0;o!==r;++o){const r=t+o;e[r]=e[r]*s+e[i+o]*n}},_lerpAdditive:function(e,t,i,n,r){for(let s=0;s!==r;++s){const r=t+s;e[r]=e[r]+e[i+s]*n}}});const _RESERVED_CHARS_RE="\\[\\]\\.:\\/",_reservedRe=new RegExp("[\\[\\]\\.:\\/]","g"),_wordChar="[^\\[\\]\\.:\\/]",_wordCharOrDot="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",_directoryRe=/((?:WC+[\/:])*)/.source.replace("WC",_wordChar),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones"];function Composite(e,t,i){const n=i||PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}function PropertyBinding(e,t,i){this.path=t,this.parsedPath=i||PropertyBinding.parseTrackName(t),this.node=PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}function AnimationObjectGroup(){this.uuid=MathUtils.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(Composite.prototype,{getValue:function(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(e,t)},setValue:function(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}),Object.assign(PropertyBinding,{Composite:Composite,create:function(e,t,i){return e&&e.isAnimationObjectGroup?new PropertyBinding.Composite(e,t,i):new PropertyBinding(e,t,i)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(_reservedRe,"")},parseTrackName:function(e){const t=_trackRe.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==n&&-1!==n){const e=i.nodeName.substring(n+1);-1!==_supportedObjectNames.indexOf(e)&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=e)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i},findNode:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){const i=function(e){for(let n=0;n<e.length;n++){const r=e[n];if(r.name===t||r.uuid===t)return r;const s=i(r.children);if(s)return s}return null},n=i(e.children);if(n)return n}return null}}),Object.assign(PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)e[t++]=i[n]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.targetObject[this.propertyName]=e[t]},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++]},function(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){const i=this.resolvedProperty;for(let n=0,r=i.length;n!==r;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let r=t.propertyIndex;if(e||(e=PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let n=t.objectIndex;switch(i){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===n){n=t;break}break;default:if(void 0===e[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[i]}if(void 0!==n){if(void 0===e[n])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[n]}}const s=e[n];if(void 0===s){const i=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+n+" but it wasn't found.",e)}let o=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?o=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(PropertyBinding.prototype,{_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue}),Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,i=this._paths,n=this._parsedPaths,r=this._bindings,s=r.length;let o,a=e.length,l=this.nCachedObjects_;for(let c=0,h=arguments.length;c!==h;++c){const h=arguments[c],u=h.uuid;let d=t[u];if(void 0===d){d=a++,t[u]=d,e.push(h);for(let e=0,t=s;e!==t;++e)r[e].push(new PropertyBinding(h,i[e],n[e]))}else if(d<l){o=e[d];const a=--l,c=e[a];t[c.uuid]=d,e[d]=c,t[u]=a,e[a]=h;for(let e=0,t=s;e!==t;++e){const t=r[e],s=t[a];let o=t[d];t[d]=s,void 0===o&&(o=new PropertyBinding(h,i[e],n[e])),t[a]=o}}else e[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const o=arguments[s],a=o.uuid,l=t[a];if(void 0!==l&&l>=r){const s=r++,c=e[s];t[c.uuid]=l,e[l]=c,t[a]=s,e[s]=o;for(let e=0,t=n;e!==t;++e){const t=i[e],n=t[s],r=t[l];t[l]=n,t[s]=r}}}this.nCachedObjects_=r},uncache:function(){const e=this._objects,t=this._indicesByUUID,i=this._bindings,n=i.length;let r=this.nCachedObjects_,s=e.length;for(let o=0,a=arguments.length;o!==a;++o){const a=arguments[o].uuid,l=t[a];if(void 0!==l)if(delete t[a],l<r){const o=--r,a=e[o],c=--s,h=e[c];t[a.uuid]=l,e[l]=a,t[h.uuid]=o,e[o]=h,e.pop();for(let e=0,t=n;e!==t;++e){const t=i[e],n=t[o],r=t[c];t[l]=n,t[o]=r,t.pop()}}else{const r=--s,o=e[r];t[o.uuid]=l,e[l]=o,e.pop();for(let e=0,t=n;e!==t;++e){const t=i[e];t[l]=t[r],t.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){const i=this._bindingsIndicesByPath;let n=i[e];const r=this._bindings;if(void 0!==n)return r[n];const s=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,h=new Array(l);n=r.length,i[e]=n,s.push(e),o.push(t),r.push(h);for(let i=c,n=a.length;i!==n;++i){const n=a[i];h[i]=new PropertyBinding(n,e,t)}return h},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){const n=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o];t[e[o]]=i,s[i]=a,s.pop(),r[i]=r[o],r.pop(),n[i]=n[o],n.pop()}}});class AnimationAction{constructor(e,t,i,n){this._mixer=e,this._clip=t,this._localRoot=i||null,this.blendMode=n||t.blendMode;const r=t.tracks,s=r.length,o=new Array(s),a={endingStart:2400,endingEnd:2400};for(let e=0;e!==s;++e){const t=r[e].createInterpolant(null);o[e]=t,t.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){const i=this._clip.duration,n=e._clip.duration,r=n/i,s=i/n;e.warp(1,r,t),this.warp(s,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){const n=this._mixer,r=n.time,s=this.timeScale;let o=this._timeScaleInterpolant;null===o&&(o=n._lendControlInterpolant(),this._timeScaleInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=r,a[1]=r+i,l[0]=e/s,l[1]=t/s,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,n){if(!this.enabled)return void this._updateWeight(e);const r=this._startTime;if(null!==r){const n=(e-r)*i;if(n<0||0===i)return;this._startTime=null,t=i*n}t*=this._updateTimeScale(e);const s=this._updateTime(t),o=this._updateWeight(e);if(o>0){const e=this._interpolants,t=this._propertyBindings;if(2501===this.blendMode)for(let i=0,n=e.length;i!==n;++i)e[i].evaluate(s),t[i].accumulateAdditive(o);else for(let i=0,r=e.length;i!==r;++i)e[i].evaluate(s),t[i].accumulate(n,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(null!==i){const n=i.evaluate(e)[0];t*=n,e>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(null!==i){t*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,i=this.loop;let n=this.time+e,r=this._loopCount;const s=2202===i;if(0===e)return-1===r?n:s&&1==(1&r)?t-n:n;if(2200===i){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=t||n<0){const i=Math.floor(n/t);n-=t*i,r+=Math.abs(i);const o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=e>0?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){const t=e<0;this._setEndings(t,!t,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i})}}else this.time=n;if(s&&1==(1&r))return t-n}return n}_setEndings(e,t,i){const n=this._interpolantSettings;i?(n.endingStart=2401,n.endingEnd=2401):(n.endingStart=e?this.zeroSlopeAtStart?2401:2400:2402,n.endingEnd=t?this.zeroSlopeAtEnd?2401:2400:2402)}_scheduleFading(e,t,i){const n=this._mixer,r=n.time;let s=this._weightInterpolant;null===s&&(s=n._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,a=s.sampleValues;return o[0]=r,a[0]=t,o[1]=r+e,a[1]=i,this}}function AnimationMixer(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function(e,t){const i=e._localRoot||this._root,n=e._clip.tracks,r=n.length,s=e._propertyBindings,o=e._interpolants,a=i.uuid,l=this._bindingsByRootAndName;let c=l[a];void 0===c&&(c={},l[a]=c);for(let e=0;e!==r;++e){const r=n[e],l=r.name;let h=c[l];if(void 0!==h)s[e]=h;else{if(h=s[e],void 0!==h){null===h._cacheIndex&&(++h.referenceCount,this._addInactiveBinding(h,a,l));continue}const n=t&&t._propertyBindings[e].binding.parsedPath;h=new PropertyMixer(PropertyBinding.create(i,l,n),r.ValueTypeName,r.getValueSize()),++h.referenceCount,this._addInactiveBinding(h,a,l),s[e]=h}o[e].resultBuffer=h.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const t=(e._localRoot||this._root).uuid,i=e._clip.uuid,n=this._actionsByClip[i];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,i,t)}const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==i.useCount++&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==--i.useCount&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions},_addInactiveAction:function(e,t,i){const n=this._actions,r=this._actionsByClip;let s=r[t];if(void 0===s)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{const t=s.knownActions;e._byClipCacheIndex=t.length,t.push(e)}e._cacheIndex=n.length,n.push(e),s.actionByRoot[i]=e},_removeInactiveAction:function(e){const t=this._actions,i=t[t.length-1],n=e._cacheIndex;i._cacheIndex=n,t[n]=i,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,l=a[a.length-1],c=e._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),e._byClipCacheIndex=null;delete o.actionByRoot[(e._localRoot||this._root).uuid],0===a.length&&delete s[r],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let e=0,i=t.length;e!==i;++e){const i=t[e];0==--i.referenceCount&&this._removeInactiveBinding(i)}},_lendAction:function(e){const t=this._actions,i=e._cacheIndex,n=this._nActiveActions++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r},_takeBackAction:function(e){const t=this._actions,i=e._cacheIndex,n=--this._nActiveActions,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r},_addInactiveBinding:function(e,t,i){const n=this._bindingsByRootAndName,r=this._bindings;let s=n[t];void 0===s&&(s={},n[t]=s),s[i]=e,e._cacheIndex=r.length,r.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,i=e.binding,n=i.rootNode.uuid,r=i.path,s=this._bindingsByRootAndName,o=s[n],a=t[t.length-1],l=e._cacheIndex;a._cacheIndex=l,t[l]=a,t.pop(),delete o[r],0===Object.keys(o).length&&delete s[n]},_lendBinding:function(e){const t=this._bindings,i=e._cacheIndex,n=this._nActiveBindings++,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r},_takeBackBinding:function(e){const t=this._bindings,i=e._cacheIndex,n=--this._nActiveBindings,r=t[n];e._cacheIndex=n,t[n]=e,r._cacheIndex=i,t[i]=r},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let i=e[t];return void 0===i&&(i=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=t,e[t]=i),i},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,i=e.__cacheIndex,n=--this._nActiveControlInterpolants,r=t[n];e.__cacheIndex=n,t[n]=e,r.__cacheIndex=i,t[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,i){const n=t||this._root,r=n.uuid;let s="string"==typeof e?AnimationClip.findByName(n,e):e;const o=null!==s?s.uuid:e,a=this._actionsByClip[o];let l=null;if(void 0===i&&(i=null!==s?s.blendMode:2500),void 0!==a){const e=a.actionByRoot[r];if(void 0!==e&&e.blendMode===i)return e;l=a.knownActions[0],null===s&&(s=l._clip)}if(null===s)return null;const c=new AnimationAction(this,s,t,i);return this._bindAction(c,l),this._addInactiveAction(c,o,r),c},existingAction:function(e,t){const i=t||this._root,n=i.uuid,r="string"==typeof e?AnimationClip.findByName(i,e):e,s=r?r.uuid:e,o=this._actionsByClip[s];return void 0!==o&&o.actionByRoot[n]||null},stopAllAction:function(){const e=this._actions;for(let t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,i=this._nActiveActions,n=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let o=0;o!==i;++o){t[o]._update(n,e,r,s)}const o=this._bindings,a=this._nActiveBindings;for(let e=0;e!==a;++e)o[e].apply(s);return this},setTime:function(e){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,i=e.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){const e=r.knownActions;for(let i=0,n=e.length;i!==n;++i){const n=e[i];this._deactivateAction(n);const r=n._cacheIndex,s=t[t.length-1];n._cacheIndex=null,n._byClipCacheIndex=null,s._cacheIndex=r,t[r]=s,t.pop(),this._removeInactiveBindingsForAction(n)}delete n[i]}},uncacheRoot:function(e){const t=e.uuid,i=this._actionsByClip;for(const e in i){const n=i[e].actionByRoot[t];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}const n=this._bindingsByRootAndName[t];if(void 0!==n)for(const e in n){const t=n[e];t.restoreOriginalState(),this._removeInactiveBinding(t)}},uncacheAction:function(e,t){const i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}});class Uniform{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Uniform(void 0===this.value.clone?this.value:this.value.clone())}}function InstancedInterleavedBuffer(e,t,i){InterleavedBuffer.call(this,e,t),this.meshPerAttribute=i||1}function GLBufferAttribute(e,t,i,n,r){this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=n,this.count=r,this.version=0}function Raycaster(e,t,i,n){this.ray=new Ray(e,t),this.near=i||0,this.far=n||1/0,this.camera=null,this.layers=new Layers,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ascSort(e,t){return e.distance-t.distance}function intersectObject(e,t,i,n){if(e.layers.test(t.layers)&&e.raycast(t,i),!0===n){const n=e.children;for(let e=0,r=n.length;e<r;e++)intersectObject(n[e],t,i,!0)}}InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:!0,copy:function(e){return InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=InterleavedBuffer.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=InterleavedBuffer.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}),Object.defineProperty(GLBufferAttribute.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}}),Object.assign(GLBufferAttribute.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}}),Object.assign(Raycaster.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,i){const n=i||[];return intersectObject(e,this,n,t),n.sort(ascSort),n},intersectObjects:function(e,t,i){const n=i||[];if(!1===Array.isArray(e))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(let i=0,r=e.length;i<r;i++)intersectObject(e[i],this,n,t);return n.sort(ascSort),n}});class Spherical{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}clone(){return(new this.constructor).copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(MathUtils.clamp(t/this.radius,-1,1))),this}}class Cylindrical{constructor(e,t,i){return this.radius=void 0!==e?e:1,this.theta=void 0!==t?t:0,this.y=void 0!==i?i:0,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}clone(){return(new this.constructor).copy(this)}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}}const _vector$7=new Vector2;class Box2{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==e?e:new Vector2(1/0,1/0),this.max=void 0!==t?t:new Vector2(-1/0,-1/0)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=_vector$7.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Vector2),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Vector2),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _vector$7.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const _startP=new Vector3,_startEnd=new Vector3;class Line3{constructor(e,t){this.start=void 0!==e?e:new Vector3,this.end=void 0!==t?t:new Vector3}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new Vector3),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new Vector3),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new Vector3),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){_startP.subVectors(e,this.start),_startEnd.subVectors(this.end,this.start);const i=_startEnd.dot(_startEnd);let n=_startEnd.dot(_startP)/i;return t&&(n=MathUtils.clamp(n,0,1)),n}closestPointToPoint(e,t,i){const n=this.closestPointToPointParameter(e,t);return void 0===i&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new Vector3),this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function ImmediateRenderObject(e){Object3D.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}ImmediateRenderObject.prototype=Object.create(Object3D.prototype),ImmediateRenderObject.prototype.constructor=ImmediateRenderObject,ImmediateRenderObject.prototype.isImmediateRenderObject=!0;const _vector$8=new Vector3;class SpotLightHelper extends Object3D{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const i=new BufferGeometry,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1,i=32;e<i;e++,t++){const r=e/i*Math.PI*2,s=t/i*Math.PI*2;n.push(Math.cos(r),Math.sin(r),1,Math.cos(s),Math.sin(s),1)}i.setAttribute("position",new Float32BufferAttribute(n,3));const r=new LineBasicMaterial({fog:!1,toneMapped:!1});this.cone=new LineSegments(i,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),_vector$8.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(_vector$8),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const _vector$9=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;class SkeletonHelper extends LineSegments{constructor(e){const t=getBoneList(e),i=new BufferGeometry,n=[],r=[],s=new Color(0,0,1),o=new Color(0,1,0);for(let e=0;e<t.length;e++){const i=t[e];i.parent&&i.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(s.r,s.g,s.b),r.push(o.r,o.g,o.b))}i.setAttribute("position",new Float32BufferAttribute(n,3)),i.setAttribute("color",new Float32BufferAttribute(r,3));super(i,new LineBasicMaterial({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,i=this.geometry,n=i.getAttribute("position");_matrixWorldInv.getInverse(this.root.matrixWorld);for(let e=0,i=0;e<t.length;e++){const r=t[e];r.parent&&r.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,r.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),n.setXYZ(i,_vector$9.x,_vector$9.y,_vector$9.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,r.parent.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),n.setXYZ(i+1,_vector$9.x,_vector$9.y,_vector$9.z),i+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function getBoneList(e){const t=[];e&&e.isBone&&t.push(e);for(let i=0;i<e.children.length;i++)t.push.apply(t,getBoneList(e.children[i]));return t}class PointLightHelper extends Mesh{constructor(e,t,i){super(new SphereBufferGeometry(t,4,2),new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const _vector$a=new Vector3,_color1=new Color,_color2=new Color;class HemisphereLightHelper extends Object3D{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const n=new OctahedronBufferGeometry(t);n.rotateY(.5*Math.PI),this.material=new MeshBasicMaterial({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const r=n.getAttribute("position"),s=new Float32Array(3*r.count);n.setAttribute("color",new BufferAttribute(s,3)),this.add(new Mesh(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");_color1.copy(this.light.color),_color2.copy(this.light.groundColor);for(let e=0,i=t.count;e<i;e++){const n=e<i/2?_color1:_color2;t.setXYZ(e,n.r,n.g,n.b)}t.needsUpdate=!0}e.lookAt(_vector$a.setFromMatrixPosition(this.light.matrixWorld).negate())}}class GridHelper extends LineSegments{constructor(e,t,i,n){e=e||10,t=t||10,i=new Color(void 0!==i?i:4473924),n=new Color(void 0!==n?n:8947848);const r=t/2,s=e/t,o=e/2,a=[],l=[];for(let e=0,c=0,h=-o;e<=t;e++,h+=s){a.push(-o,0,h,o,0,h),a.push(h,0,-o,h,0,o);const t=e===r?i:n;t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3,t.toArray(l,c),c+=3}const c=new BufferGeometry;c.setAttribute("position",new Float32BufferAttribute(a,3)),c.setAttribute("color",new Float32BufferAttribute(l,3));super(c,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class PolarGridHelper extends LineSegments{constructor(e,t,i,n,r,s){e=e||10,t=t||16,i=i||8,n=n||64,r=new Color(void 0!==r?r:4473924),s=new Color(void 0!==s?s:8947848);const o=[],a=[];for(let i=0;i<=t;i++){const n=i/t*(2*Math.PI),l=Math.sin(n)*e,c=Math.cos(n)*e;o.push(0,0,0),o.push(l,0,c);const h=1&i?r:s;a.push(h.r,h.g,h.b),a.push(h.r,h.g,h.b)}for(let t=0;t<=i;t++){const l=1&t?r:s,c=e-e/i*t;for(let e=0;e<n;e++){let t=e/n*(2*Math.PI),i=Math.sin(t)*c,r=Math.cos(t)*c;o.push(i,0,r),a.push(l.r,l.g,l.b),t=(e+1)/n*(2*Math.PI),i=Math.sin(t)*c,r=Math.cos(t)*c,o.push(i,0,r),a.push(l.r,l.g,l.b)}}const l=new BufferGeometry;l.setAttribute("position",new Float32BufferAttribute(o,3)),l.setAttribute("color",new Float32BufferAttribute(a,3));super(l,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const _v1$6=new Vector3,_v2$3=new Vector3,_v3$1=new Vector3;class DirectionalLightHelper extends Object3D{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===t&&(t=1);let n=new BufferGeometry;n.setAttribute("position",new Float32BufferAttribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new LineBasicMaterial({fog:!1,toneMapped:!1});this.lightPlane=new Line(n,r),this.add(this.lightPlane),n=new BufferGeometry,n.setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3)),this.targetLine=new Line(n,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){_v1$6.setFromMatrixPosition(this.light.matrixWorld),_v2$3.setFromMatrixPosition(this.light.target.matrixWorld),_v3$1.subVectors(_v2$3,_v1$6),this.lightPlane.lookAt(_v2$3),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(_v2$3),this.targetLine.scale.z=_v3$1.length()}}const _vector$b=new Vector3,_camera=new Camera;class CameraHelper extends LineSegments{constructor(e){const t=new BufferGeometry,i=new LineBasicMaterial({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],r=[],s={},o=new Color(16755200),a=new Color(16711680),l=new Color(43775),c=new Color(16777215),h=new Color(3355443);function u(e,t,i){d(e,i),d(t,i)}function d(e,t){n.push(0,0,0),r.push(t.r,t.g,t.b),void 0===s[e]&&(s[e]=[]),s[e].push(n.length/3-1)}u("n1","n2",o),u("n2","n4",o),u("n4","n3",o),u("n3","n1",o),u("f1","f2",o),u("f2","f4",o),u("f4","f3",o),u("f3","f1",o),u("n1","f1",o),u("n2","f2",o),u("n3","f3",o),u("n4","f4",o),u("p","n1",a),u("p","n2",a),u("p","n3",a),u("p","n4",a),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",c),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h),t.setAttribute("position",new Float32BufferAttribute(n,3)),t.setAttribute("color",new Float32BufferAttribute(r,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}update(){const e=this.geometry,t=this.pointMap;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",t,e,_camera,0,0,-1),setPoint("t",t,e,_camera,0,0,1),setPoint("n1",t,e,_camera,-1,-1,-1),setPoint("n2",t,e,_camera,1,-1,-1),setPoint("n3",t,e,_camera,-1,1,-1),setPoint("n4",t,e,_camera,1,1,-1),setPoint("f1",t,e,_camera,-1,-1,1),setPoint("f2",t,e,_camera,1,-1,1),setPoint("f3",t,e,_camera,-1,1,1),setPoint("f4",t,e,_camera,1,1,1),setPoint("u1",t,e,_camera,.7,1.1,-1),setPoint("u2",t,e,_camera,-.7,1.1,-1),setPoint("u3",t,e,_camera,0,2,-1),setPoint("cf1",t,e,_camera,-1,0,1),setPoint("cf2",t,e,_camera,1,0,1),setPoint("cf3",t,e,_camera,0,-1,1),setPoint("cf4",t,e,_camera,0,1,1),setPoint("cn1",t,e,_camera,-1,0,-1),setPoint("cn2",t,e,_camera,1,0,-1),setPoint("cn3",t,e,_camera,0,-1,-1),setPoint("cn4",t,e,_camera,0,1,-1),e.getAttribute("position").needsUpdate=!0}}function setPoint(e,t,i,n,r,s,o){_vector$b.set(r,s,o).unproject(n);const a=t[e];if(void 0!==a){const e=i.getAttribute("position");for(let t=0,i=a.length;t<i;t++)e.setXYZ(a[t],_vector$b.x,_vector$b.y,_vector$b.z)}}const _box$3=new Box3;class BoxHelper extends LineSegments{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new BufferGeometry;r.setIndex(new BufferAttribute(i,1)),r.setAttribute("position",new BufferAttribute(n,3)),super(r,new LineBasicMaterial({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&_box$3.setFromObject(this.object),_box$3.isEmpty())return;const t=_box$3.min,i=_box$3.max,n=this.geometry.attributes.position,r=n.array;r[0]=i.x,r[1]=i.y,r[2]=i.z,r[3]=t.x,r[4]=i.y,r[5]=i.z,r[6]=t.x,r[7]=t.y,r[8]=i.z,r[9]=i.x,r[10]=t.y,r[11]=i.z,r[12]=i.x,r[13]=i.y,r[14]=t.z,r[15]=t.x,r[16]=i.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=i.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return LineSegments.prototype.copy.call(this,e),this.object=e.object,this}}class Box3Helper extends LineSegments{constructor(e,t=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new BufferGeometry;n.setIndex(new BufferAttribute(i,1)),n.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new LineBasicMaterial({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class PlaneHelper extends Line{constructor(e,t,i){const n=void 0!==i?i:16776960,r=new BufferGeometry;r.setAttribute("position",new Float32BufferAttribute([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new LineBasicMaterial({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=void 0===t?1:t;const s=new BufferGeometry;s.setAttribute("position",new Float32BufferAttribute([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),s.computeBoundingSphere(),this.add(new Mesh(s,new MeshBasicMaterial({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?1:0,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const _axis=new Vector3;let _lineGeometry,_coneGeometry;class ArrowHelper extends Object3D{constructor(e,t,i,n,r,s){super(),this.type="ArrowHelper",void 0===e&&(e=new Vector3(0,0,1)),void 0===t&&(t=new Vector3(0,0,0)),void 0===i&&(i=1),void 0===n&&(n=16776960),void 0===r&&(r=.2*i),void 0===s&&(s=.2*r),void 0===_lineGeometry&&(_lineGeometry=new BufferGeometry,_lineGeometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),_coneGeometry=new CylinderBufferGeometry(0,.5,1,5,1),_coneGeometry.translate(0,-.5,0)),this.position.copy(t),this.line=new Line(_lineGeometry,new LineBasicMaterial({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,r,s)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{_axis.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_axis,t)}}setLength(e,t,i){void 0===t&&(t=.2*e),void 0===i&&(i=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class AxesHelper extends LineSegments{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=new BufferGeometry;i.setAttribute("position",new Float32BufferAttribute(t,3)),i.setAttribute("color",new Float32BufferAttribute([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));super(i,new LineBasicMaterial({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}}const LOD_MIN=4,LOD_MAX=8,SIZE_MAX=Math.pow(2,8),EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],TOTAL_LODS=5+EXTRA_LOD_SIGMA.length,MAX_SAMPLES=20,ENCODINGS={3e3:0,3001:1,3002:2,3004:3,3005:4,3006:5,3007:6},_flatCamera=new OrthographicCamera,{_lodPlanes:_lodPlanes,_sizeLods:_sizeLods,_sigmas:_sigmas}=_createPlanes();let _oldTarget=null;const PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];class PMREMGenerator{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=_getBlurShader(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100){_oldTarget=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(e,i,n,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=_getCubemapShader(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=_getEquirectShader(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<_lodPlanes.length;e++)_lodPlanes[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(_oldTarget),e.scissorTest=!1,_setViewport(e,0,0,e.width,e.height)}_fromTexture(e){_oldTarget=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:1003,minFilter:1003,generateMipmaps:!1,type:1009,format:1023,encoding:_isLDR(e)?e.encoding:3002,depthBuffer:!1},i=_createRenderTarget(t);return i.depthBuffer=!e,this._pingPongRenderTarget=_createRenderTarget(t),i}_compileMaterial(e){const t=new Mesh(_lodPlanes[0],e);this._renderer.compile(t,_flatCamera)}_sceneToCubeUV(e,t,i,n){const r=new PerspectiveCamera(90,1,t,i),s=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],a=this._renderer,l=a.outputEncoding,c=a.toneMapping,h=a.getClearColor(),u=a.getClearAlpha();a.toneMapping=0,a.outputEncoding=3e3;let d=e.background;if(d&&d.isColor){d.convertSRGBToLinear();const t=Math.max(d.r,d.g,d.b),i=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);d=d.multiplyScalar(Math.pow(2,-i));const n=(i+128)/255;a.setClearColor(d,n),e.background=null}for(let t=0;t<6;t++){const i=t%3;0==i?(r.up.set(0,s[t],0),r.lookAt(o[t],0,0)):1==i?(r.up.set(0,0,s[t]),r.lookAt(0,o[t],0)):(r.up.set(0,s[t],0),r.lookAt(0,0,o[t])),_setViewport(n,i*SIZE_MAX,t>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX),a.setRenderTarget(n),a.render(e,r)}a.toneMapping=c,a.outputEncoding=l,a.setClearColor(h,u)}_textureToCubeUV(e,t){const i=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=_getCubemapShader()):null==this._equirectShader&&(this._equirectShader=_getEquirectShader());const n=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new Mesh(_lodPlanes[0],n),s=n.uniforms;s.envMap.value=e,e.isCubeTexture||s.texelSize.value.set(1/e.image.width,1/e.image.height),s.inputEncoding.value=ENCODINGS[e.encoding],s.outputEncoding.value=ENCODINGS[t.texture.encoding],_setViewport(t,0,0,3*SIZE_MAX,2*SIZE_MAX),i.setRenderTarget(t),i.render(r,_flatCamera)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let t=1;t<TOTAL_LODS;t++){const i=Math.sqrt(_sigmas[t]*_sigmas[t]-_sigmas[t-1]*_sigmas[t-1]),n=_axisDirections[(t-1)%_axisDirections.length];this._blur(e,t-1,t,i,n)}t.autoClear=i}_blur(e,t,i,n,r){const s=this._pingPongRenderTarget;this._halfBlur(e,s,t,i,n,"latitudinal",r),this._halfBlur(s,e,i,i,n,"longitudinal",r)}_halfBlur(e,t,i,n,r,s,o){const a=this._renderer,l=this._blurMaterial;"latitudinal"!==s&&"longitudinal"!==s&&console.error("blur direction must be either latitudinal or longitudinal!");const c=new Mesh(_lodPlanes[n],l),h=l.uniforms,u=_sizeLods[i]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,m=isFinite(r)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);const f=[];let g=0;for(let e=0;e<20;++e){const t=e/p,i=Math.exp(-t*t/2);f.push(i),0==e?g+=i:e<m&&(g+=2*i)}for(let e=0;e<f.length;e++)f[e]=f[e]/g;h.envMap.value=e.texture,h.samples.value=m,h.weights.value=f,h.latitudinal.value="latitudinal"===s,o&&(h.poleAxis.value=o),h.dTheta.value=d,h.mipInt.value=8-i,h.inputEncoding.value=ENCODINGS[e.texture.encoding],h.outputEncoding.value=ENCODINGS[e.texture.encoding];const y=_sizeLods[n];_setViewport(t,3*Math.max(0,SIZE_MAX-2*y),(0===n?0:2*SIZE_MAX)+2*y*(n>4?n-8+4:0),3*y,2*y),a.setRenderTarget(t),a.render(c,_flatCamera)}}function _isLDR(e){return void 0!==e&&1009===e.type&&(3e3===e.encoding||3001===e.encoding||3007===e.encoding)}function _createPlanes(){const e=[],t=[],i=[];let n=8;for(let r=0;r<TOTAL_LODS;r++){const s=Math.pow(2,n);t.push(s);let o=1/s;r>4?o=EXTRA_LOD_SIGMA[r-8+4-1]:0==r&&(o=0),i.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,d=6,p=3,m=2,f=1,g=new Float32Array(p*d*u),y=new Float32Array(m*d*u),v=new Float32Array(f*d*u);for(let e=0;e<u;e++){const t=e%3*2/3-1,i=e>2?0:-1,n=[t,i,0,t+2/3,i,0,t+2/3,i+1,0,t,i,0,t+2/3,i+1,0,t,i+1,0];g.set(n,p*d*e),y.set(h,m*d*e);const r=[e,e,e,e,e,e];v.set(r,f*d*e)}const b=new BufferGeometry;b.setAttribute("position",new BufferAttribute(g,p)),b.setAttribute("uv",new BufferAttribute(y,m)),b.setAttribute("faceIndex",new BufferAttribute(v,f)),e.push(b),n>4&&n--}return{_lodPlanes:e,_sizeLods:t,_sigmas:i}}function _createRenderTarget(e){const t=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,e);return t.texture.mapping=306,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function _setViewport(e,t,i,n,r){e.viewport.set(t,i,n,r),e.scissor.set(t,i,n,r)}function _getBlurShader(e){return new RawShaderMaterial({name:"SphericalGaussianBlur",defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:new Float32Array(e)},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:new Vector3(0,1,0)},inputEncoding:{value:ENCODINGS[3e3]},outputEncoding:{value:ENCODINGS[3e3]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function _getEquirectShader(){return new RawShaderMaterial({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:new Vector2(1,1)},inputEncoding:{value:ENCODINGS[3e3]},outputEncoding:{value:ENCODINGS[3e3]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function _getCubemapShader(){return new RawShaderMaterial({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ENCODINGS[3e3]},outputEncoding:{value:ENCODINGS[3e3]}},vertexShader:_getCommonVertexShader(),fragmentShader:`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,blending:0,depthTest:!1,depthWrite:!1})}function _getCommonVertexShader(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function _getEncodings(){return"\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t"}function Face4(e,t,i,n,r,s,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Face3(e,t,i,r,s,o)}const LineStrip=0,LinePieces=1,NoColors=0,FaceColors=1,VertexColors=2;function MeshFaceMaterial(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function MultiMaterial(e){return void 0===e&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function PointCloud(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Points(e,t)}function Particle(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Sprite(e)}function ParticleSystem$1(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Points(e,t)}function PointCloudMaterial(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleBasicMaterial(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleSystemMaterial(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function Vertex(e,t,i){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Vector3(e,t,i)}function DynamicBufferAttribute(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new BufferAttribute(e,t).setUsage(35048)}function Int8Attribute(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Int8BufferAttribute(e,t)}function Uint8Attribute(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Uint8BufferAttribute(e,t)}function Uint8ClampedAttribute(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Uint8ClampedBufferAttribute(e,t)}function Int16Attribute(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Int16BufferAttribute(e,t)}function Uint16Attribute(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Uint16BufferAttribute(e,t)}function Int32Attribute(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Int32BufferAttribute(e,t)}function Uint32Attribute(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Uint32BufferAttribute(e,t)}function Float32Attribute(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Float32BufferAttribute(e,t)}function Float64Attribute(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Float64BufferAttribute(e,t)}function ClosedSplineCurve3(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom",this.closed=!0}function SplineCurve3(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}function Spline(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}function AxisHelper(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new AxesHelper(e)}function BoundingBoxHelper(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new BoxHelper(e,t)}function EdgesHelper(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new LineSegments(new EdgesGeometry(e.geometry),new LineBasicMaterial({color:void 0!==t?t:16777215}))}function WireframeHelper(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new LineSegments(new WireframeGeometry(e.geometry),new LineBasicMaterial({color:void 0!==t?t:16777215}))}function XHRLoader(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new FileLoader(e)}function BinaryTextureLoader(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new DataTextureLoader(e)}function WebGLRenderTargetCube(e,t,i){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new WebGLCubeRenderTarget(e,i)}Curve.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(CurvePath.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Geometry;for(let i=0,n=e.length;i<n;i++){const n=e[i];t.vertices.push(new Vector3(n.x,n.y,n.z||0))}return t}}),Object.assign(Path.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}}),ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype),SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype),Spline.prototype=Object.create(CatmullRomCurve3.prototype),Object.assign(Spline.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},SkeletonHelper.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(Loader.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),LoaderUtils.extractUrlBase(e)}}),Loader.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(Box2.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Box3.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Sphere.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Frustum.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Line3.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(MathUtils,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),MathUtils.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),MathUtils.ceilPowerOfTwo(e)}}),Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(Matrix4.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Vector3).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,i,n,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,i,r,s)}}),Plane.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Quaternion.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(Ray.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Triangle.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(Triangle,{barycoordFromPoint:function(e,t,i,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Triangle.getBarycoord(e,t,i,n,r)},normal:function(e,t,i,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Triangle.getNormal(e,t,i,n)}}),Object.assign(Shape.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ExtrudeGeometry(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ShapeGeometry(this,e)}}),Object.assign(Vector2.prototype,{fromAttribute:function(e,t,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector4.prototype,{fromAttribute:function(e,t,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Geometry.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(Object3D.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Mesh.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(LOD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Skeleton.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),SkinnedMesh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Curve.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),PerspectiveCamera.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),Object.assign(BufferAttribute.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(BufferGeometry.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new BufferAttribute(arguments[1],arguments[2])))},addDrawCall:function(e,t,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(InstancedBufferGeometry.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}}),Object.defineProperties(Raycaster.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}}),Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),35048===this.usage},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(InterleavedBuffer.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(ExtrudeBufferGeometry.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.assign(Scene.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Color}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(MeshPhysicalMaterial.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}}),Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(WebGLRenderer.prototype,{clearTarget:function(e,t,i,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,i,n)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(Audio.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return(new AudioLoader).load(e,(function(e){t.setBuffer(e)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),AudioAnalyser.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},CubeCamera.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};const GeometryUtils={merge:function(e,t,i){let n;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),n=t.matrix,t=t.geometry),e.merge(t,n,i)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}};function CanvasRenderer(){console.error("THREE.CanvasRenderer has been removed")}function JSONLoader(){console.error("THREE.JSONLoader has been removed.")}ImageUtils.crossOrigin=void 0,ImageUtils.loadTexture=function(e,t,i,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new TextureLoader;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,i,void 0,n);return t&&(s.mapping=t),s},ImageUtils.loadTextureCube=function(e,t,i,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new CubeTextureLoader;r.setCrossOrigin(this.crossOrigin);const s=r.load(e,i,void 0,n);return t&&(s.mapping=t),s},ImageUtils.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ImageUtils.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function LensFlare(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"121"}}));var THREE$1=Object.freeze({__proto__:null,ACESFilmicToneMapping:4,AddEquation:100,AddOperation:2,AdditiveAnimationBlendMode:2501,AdditiveBlending:2,AlphaFormat:1021,AlwaysDepth:1,AlwaysStencilFunc:519,AmbientLight:AmbientLight,AmbientLightProbe:AmbientLightProbe,AnimationClip:AnimationClip,AnimationLoader:AnimationLoader,AnimationMixer:AnimationMixer,AnimationObjectGroup:AnimationObjectGroup,AnimationUtils:AnimationUtils,ArcCurve:ArcCurve,ArrayCamera:ArrayCamera,ArrowHelper:ArrowHelper,Audio:Audio,AudioAnalyser:AudioAnalyser,AudioContext:AudioContext$1,AudioListener:AudioListener,AudioLoader:AudioLoader,AxesHelper:AxesHelper,AxisHelper:AxisHelper,BackSide:1,BasicDepthPacking:3200,BasicShadowMap:0,BinaryTextureLoader:BinaryTextureLoader,Bone:Bone,BooleanKeyframeTrack:BooleanKeyframeTrack,BoundingBoxHelper:BoundingBoxHelper,Box2:Box2,Box3:Box3,Box3Helper:Box3Helper,BoxBufferGeometry:BoxBufferGeometry,BoxGeometry:BoxGeometry,BoxHelper:BoxHelper,BufferAttribute:BufferAttribute,BufferGeometry:BufferGeometry,BufferGeometryLoader:BufferGeometryLoader,ByteType:1010,Cache:Cache,Camera:Camera,CameraHelper:CameraHelper,CanvasRenderer:CanvasRenderer,CanvasTexture:CanvasTexture,CatmullRomCurve3:CatmullRomCurve3,CineonToneMapping:3,CircleBufferGeometry:CircleBufferGeometry,CircleGeometry:CircleGeometry,ClampToEdgeWrapping:1001,Clock:Clock,ClosedSplineCurve3:ClosedSplineCurve3,Color:Color,ColorKeyframeTrack:ColorKeyframeTrack,CompressedTexture:CompressedTexture,CompressedTextureLoader:CompressedTextureLoader,ConeBufferGeometry:ConeBufferGeometry,ConeGeometry:ConeGeometry,CubeCamera:CubeCamera,CubeGeometry:BoxGeometry,CubeReflectionMapping:301,CubeRefractionMapping:302,CubeTexture:CubeTexture,CubeTextureLoader:CubeTextureLoader,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,CubicInterpolant:CubicInterpolant,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,CullFaceNone:0,Curve:Curve,CurvePath:CurvePath,CustomBlending:5,CustomToneMapping:5,CylinderBufferGeometry:CylinderBufferGeometry,CylinderGeometry:CylinderGeometry,Cylindrical:Cylindrical,DataTexture:DataTexture,DataTexture2DArray:DataTexture2DArray,DataTexture3D:DataTexture3D,DataTextureLoader:DataTextureLoader,DecrementStencilOp:7683,DecrementWrapStencilOp:34056,DefaultLoadingManager:DefaultLoadingManager,DepthFormat:1026,DepthStencilFormat:1027,DepthTexture:DepthTexture,DirectionalLight:DirectionalLight,DirectionalLightHelper:DirectionalLightHelper,DiscreteInterpolant:DiscreteInterpolant,DodecahedronBufferGeometry:DodecahedronBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DoubleSide:2,DstAlphaFactor:206,DstColorFactor:208,DynamicBufferAttribute:DynamicBufferAttribute,DynamicCopyUsage:35050,DynamicDrawUsage:35048,DynamicReadUsage:35049,EdgesGeometry:EdgesGeometry,EdgesHelper:EdgesHelper,EllipseCurve:EllipseCurve,EqualDepth:4,EqualStencilFunc:514,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,Euler:Euler,EventDispatcher:EventDispatcher,ExtrudeBufferGeometry:ExtrudeBufferGeometry,ExtrudeGeometry:ExtrudeGeometry,Face3:Face3,Face4:Face4,FaceColors:1,FileLoader:FileLoader,FlatShading:1,Float32Attribute:Float32Attribute,Float32BufferAttribute:Float32BufferAttribute,Float64Attribute:Float64Attribute,Float64BufferAttribute:Float64BufferAttribute,FloatType:1015,Fog:Fog,FogExp2:FogExp2,Font:Font,FontLoader:FontLoader,FrontSide:0,Frustum:Frustum,GLBufferAttribute:GLBufferAttribute,GLSL1:"100",GLSL3:GLSL3,GammaEncoding:3007,Geometry:Geometry,GeometryUtils:GeometryUtils,GreaterDepth:6,GreaterEqualDepth:5,GreaterEqualStencilFunc:518,GreaterStencilFunc:516,GridHelper:GridHelper,Group:Group,HalfFloatType:1016,HemisphereLight:HemisphereLight,HemisphereLightHelper:HemisphereLightHelper,HemisphereLightProbe:HemisphereLightProbe,IcosahedronBufferGeometry:IcosahedronBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,ImageBitmapLoader:ImageBitmapLoader,ImageLoader:ImageLoader,ImageUtils:ImageUtils,ImmediateRenderObject:ImmediateRenderObject,IncrementStencilOp:7682,IncrementWrapStencilOp:34055,InstancedBufferAttribute:InstancedBufferAttribute,InstancedBufferGeometry:InstancedBufferGeometry,InstancedInterleavedBuffer:InstancedInterleavedBuffer,InstancedMesh:InstancedMesh,Int16Attribute:Int16Attribute,Int16BufferAttribute:Int16BufferAttribute,Int32Attribute:Int32Attribute,Int32BufferAttribute:Int32BufferAttribute,Int8Attribute:Int8Attribute,Int8BufferAttribute:Int8BufferAttribute,IntType:1013,InterleavedBuffer:InterleavedBuffer,InterleavedBufferAttribute:InterleavedBufferAttribute,Interpolant:Interpolant,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,InvertStencilOp:5386,JSONLoader:JSONLoader,KeepStencilOp:7680,KeyframeTrack:KeyframeTrack,LOD:LOD,LatheBufferGeometry:LatheBufferGeometry,LatheGeometry:LatheGeometry,Layers:Layers,LensFlare:LensFlare,LessDepth:2,LessEqualDepth:3,LessEqualStencilFunc:515,LessStencilFunc:513,Light:Light,LightProbe:LightProbe,Line:Line,Line3:Line3,LineBasicMaterial:LineBasicMaterial,LineCurve:LineCurve,LineCurve3:LineCurve3,LineDashedMaterial:LineDashedMaterial,LineLoop:LineLoop,LinePieces:1,LineSegments:LineSegments,LineStrip:0,LinearEncoding:3e3,LinearFilter:1006,LinearInterpolant:LinearInterpolant,LinearMipMapLinearFilter:1008,LinearMipMapNearestFilter:1007,LinearMipmapLinearFilter:1008,LinearMipmapNearestFilter:1007,LinearToneMapping:1,Loader:Loader,LoaderUtils:LoaderUtils,LoadingManager:LoadingManager,LogLuvEncoding:3003,LoopOnce:2200,LoopPingPong:2202,LoopRepeat:2201,LuminanceAlphaFormat:1025,LuminanceFormat:1024,MOUSE:MOUSE,Material:Material,MaterialLoader:MaterialLoader,Math:MathUtils,MathUtils:MathUtils,Matrix3:Matrix3,Matrix4:Matrix4,MaxEquation:104,Mesh:Mesh,MeshBasicMaterial:MeshBasicMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshFaceMaterial:MeshFaceMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshMatcapMaterial:MeshMatcapMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshToonMaterial:MeshToonMaterial,MinEquation:103,MirroredRepeatWrapping:1002,MixOperation:1,MultiMaterial:MultiMaterial,MultiplyBlending:4,MultiplyOperation:0,NearestFilter:1003,NearestMipMapLinearFilter:1005,NearestMipMapNearestFilter:1004,NearestMipmapLinearFilter:1005,NearestMipmapNearestFilter:1004,NeverDepth:0,NeverStencilFunc:512,NoBlending:0,NoColors:0,NoToneMapping:0,NormalAnimationBlendMode:2500,NormalBlending:1,NotEqualDepth:7,NotEqualStencilFunc:517,NumberKeyframeTrack:NumberKeyframeTrack,Object3D:Object3D,ObjectLoader:ObjectLoader,ObjectSpaceNormalMap:1,OctahedronBufferGeometry:OctahedronBufferGeometry,OctahedronGeometry:OctahedronGeometry,OneFactor:201,OneMinusDstAlphaFactor:207,OneMinusDstColorFactor:209,OneMinusSrcAlphaFactor:205,OneMinusSrcColorFactor:203,OrthographicCamera:OrthographicCamera,PCFShadowMap:1,PCFSoftShadowMap:2,PMREMGenerator:PMREMGenerator,ParametricBufferGeometry:ParametricBufferGeometry,ParametricGeometry:ParametricGeometry,Particle:Particle,ParticleBasicMaterial:ParticleBasicMaterial,ParticleSystem:ParticleSystem$1,ParticleSystemMaterial:ParticleSystemMaterial,Path:Path,PerspectiveCamera:PerspectiveCamera,Plane:Plane,PlaneBufferGeometry:PlaneBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneHelper:PlaneHelper,PointCloud:PointCloud,PointCloudMaterial:PointCloudMaterial,PointLight:PointLight,PointLightHelper:PointLightHelper,Points:Points,PointsMaterial:PointsMaterial,PolarGridHelper:PolarGridHelper,PolyhedronBufferGeometry:PolyhedronBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PositionalAudio:PositionalAudio,PropertyBinding:PropertyBinding,PropertyMixer:PropertyMixer,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,Quaternion:Quaternion,QuaternionKeyframeTrack:QuaternionKeyframeTrack,QuaternionLinearInterpolant:QuaternionLinearInterpolant,REVISION:"121",RGBADepthPacking:3201,RGBAFormat:1023,RGBAIntegerFormat:1033,RGBA_ASTC_10x10_Format:37819,RGBA_ASTC_10x5_Format:37816,RGBA_ASTC_10x6_Format:37817,RGBA_ASTC_10x8_Format:37818,RGBA_ASTC_12x10_Format:37820,RGBA_ASTC_12x12_Format:37821,RGBA_ASTC_4x4_Format:37808,RGBA_ASTC_5x4_Format:37809,RGBA_ASTC_5x5_Format:37810,RGBA_ASTC_6x5_Format:37811,RGBA_ASTC_6x6_Format:37812,RGBA_ASTC_8x5_Format:37813,RGBA_ASTC_8x6_Format:37814,RGBA_ASTC_8x8_Format:37815,RGBA_BPTC_Format:36492,RGBA_ETC2_EAC_Format:37496,RGBA_PVRTC_2BPPV1_Format:35843,RGBA_PVRTC_4BPPV1_Format:35842,RGBA_S3TC_DXT1_Format:33777,RGBA_S3TC_DXT3_Format:33778,RGBA_S3TC_DXT5_Format:33779,RGBDEncoding:3006,RGBEEncoding:3002,RGBEFormat:1023,RGBFormat:1022,RGBIntegerFormat:1032,RGBM16Encoding:3005,RGBM7Encoding:3004,RGB_ETC1_Format:36196,RGB_ETC2_Format:37492,RGB_PVRTC_2BPPV1_Format:35841,RGB_PVRTC_4BPPV1_Format:35840,RGB_S3TC_DXT1_Format:33776,RGFormat:1030,RGIntegerFormat:1031,RawShaderMaterial:RawShaderMaterial,Ray:Ray,Raycaster:Raycaster,RectAreaLight:RectAreaLight,RedFormat:1028,RedIntegerFormat:1029,ReinhardToneMapping:2,RepeatWrapping:1e3,ReplaceStencilOp:7681,ReverseSubtractEquation:102,RingBufferGeometry:RingBufferGeometry,RingGeometry:RingGeometry,SRGB8_ALPHA8_ASTC_10x10_Format:37851,SRGB8_ALPHA8_ASTC_10x5_Format:37848,SRGB8_ALPHA8_ASTC_10x6_Format:37849,SRGB8_ALPHA8_ASTC_10x8_Format:37850,SRGB8_ALPHA8_ASTC_12x10_Format:37852,SRGB8_ALPHA8_ASTC_12x12_Format:37853,SRGB8_ALPHA8_ASTC_4x4_Format:37840,SRGB8_ALPHA8_ASTC_5x4_Format:37841,SRGB8_ALPHA8_ASTC_5x5_Format:37842,SRGB8_ALPHA8_ASTC_6x5_Format:37843,SRGB8_ALPHA8_ASTC_6x6_Format:37844,SRGB8_ALPHA8_ASTC_8x5_Format:37845,SRGB8_ALPHA8_ASTC_8x6_Format:37846,SRGB8_ALPHA8_ASTC_8x8_Format:37847,Scene:Scene,SceneUtils:SceneUtils,ShaderChunk:ShaderChunk,ShaderLib:ShaderLib,ShaderMaterial:ShaderMaterial,ShadowMaterial:ShadowMaterial,Shape:Shape,ShapeBufferGeometry:ShapeBufferGeometry,ShapeGeometry:ShapeGeometry,ShapePath:ShapePath,ShapeUtils:ShapeUtils,ShortType:1011,Skeleton:Skeleton,SkeletonHelper:SkeletonHelper,SkinnedMesh:SkinnedMesh,SmoothShading:2,Sphere:Sphere,SphereBufferGeometry:SphereBufferGeometry,SphereGeometry:SphereGeometry,Spherical:Spherical,SphericalHarmonics3:SphericalHarmonics3,Spline:Spline,SplineCurve:SplineCurve,SplineCurve3:SplineCurve3,SpotLight:SpotLight,SpotLightHelper:SpotLightHelper,Sprite:Sprite,SpriteMaterial:SpriteMaterial,SrcAlphaFactor:204,SrcAlphaSaturateFactor:210,SrcColorFactor:202,StaticCopyUsage:35046,StaticDrawUsage:35044,StaticReadUsage:35045,StereoCamera:StereoCamera,StreamCopyUsage:35042,StreamDrawUsage:35040,StreamReadUsage:35041,StringKeyframeTrack:StringKeyframeTrack,SubtractEquation:101,SubtractiveBlending:3,TOUCH:TOUCH,TangentSpaceNormalMap:0,TetrahedronBufferGeometry:TetrahedronBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TextBufferGeometry:TextBufferGeometry,TextGeometry:TextGeometry,Texture:Texture,TextureLoader:TextureLoader,TorusBufferGeometry:TorusBufferGeometry,TorusGeometry:TorusGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,Triangle:Triangle,TriangleFanDrawMode:2,TriangleStripDrawMode:1,TrianglesDrawMode:0,TubeBufferGeometry:TubeBufferGeometry,TubeGeometry:TubeGeometry,UVMapping:300,Uint16Attribute:Uint16Attribute,Uint16BufferAttribute:Uint16BufferAttribute,Uint32Attribute:Uint32Attribute,Uint32BufferAttribute:Uint32BufferAttribute,Uint8Attribute:Uint8Attribute,Uint8BufferAttribute:Uint8BufferAttribute,Uint8ClampedAttribute:Uint8ClampedAttribute,Uint8ClampedBufferAttribute:Uint8ClampedBufferAttribute,Uniform:Uniform,UniformsLib:UniformsLib,UniformsUtils:UniformsUtils,UnsignedByteType:1009,UnsignedInt248Type:1020,UnsignedIntType:1014,UnsignedShort4444Type:1017,UnsignedShort5551Type:1018,UnsignedShort565Type:1019,UnsignedShortType:1012,VSMShadowMap:3,Vector2:Vector2,Vector3:Vector3,Vector4:Vector4,VectorKeyframeTrack:VectorKeyframeTrack,Vertex:Vertex,VertexColors:2,VideoTexture:VideoTexture,WebGL1Renderer:WebGL1Renderer,WebGLCubeRenderTarget:WebGLCubeRenderTarget,WebGLMultisampleRenderTarget:WebGLMultisampleRenderTarget,WebGLRenderTarget:WebGLRenderTarget,WebGLRenderTargetCube:WebGLRenderTargetCube,WebGLRenderer:WebGLRenderer,WebGLUtils:WebGLUtils,WireframeGeometry:WireframeGeometry,WireframeHelper:WireframeHelper,WrapAroundEnding:2402,XHRLoader:XHRLoader,ZeroCurvatureEnding:2400,ZeroFactor:200,ZeroSlopeEnding:2401,ZeroStencilOp:0,sRGBEncoding:3001});class DebugLine{constructor(){}static setCurrentScene(e){this.scene=e,this.drawLinesNextFrame=[],this.removeLinesNextFrame=[],this.material||(this.material=new LineBasicMaterial({color:16777215,vertexColors:!0}))}static loop(){if(this.drawLinesNextFrame&&this.removeLinesNextFrame){for(let e of this.removeLinesNextFrame){let t=e.line;t.parent.remove(t),t.geometry.dispose()}this.removeLinesNextFrame=[];for(let e of this.drawLinesNextFrame){let t=new Geometry;t.vertices.push(e.from),t.vertices.push(e.to),t.colors=[new Color(e.color),new Color(e.color)];let i=this.material;e.color&&(i=new LineBasicMaterial({color:e.color}));let n=new Line(t,i);e.line=n,this.scene.add(n),this.removeLinesNextFrame.push(e)}this.drawLinesNextFrame=[]}}static drawLine(e,t,i){this.drawLinesNextFrame&&this.drawLinesNextFrame.push({from:e.clone(),to:t.clone(),color:i})}static drawRay(e,t,i){let n=(e=e.clone()).clone();n.add(t),this.drawLine(e,n,i)}}function mod(e,t){return(e%t+t)%t}function modMinMax(e,t,i){return mod(e-t,i-t)+t}function lerp(e,t,i){return e+i*(t-e)}function iLerp(e,t,i){return(i-e)/(t-e)}function lerptt01(e,t){return 1-Math.pow(1-e,t)}function lerptt10(e,t){return 1-lerptt01(1-e,t)}function lerptt(e,t,i,n){return lerp(e,t,lerptt01(i,n))}function lerpt(e,t,i){return lerptt(e,t,i,main.dt16)}function lerpt01(e){return lerptt01(e,main.dt16)}function mapValue(e,t,i,n,r,s){let o=iLerp(e,t,r);return s&&(o=clamp01(o)),lerp(i,n,o)}function clamp(e,t,i){return Math.max(t,Math.min(i,e))}function clamp01(e){return clamp(e,0,1)}function randInt(e,t){return Math.floor(randRange(e,t))}function randIntSeed(e,t,i){return Math.floor(randRangeSeed(e,t,i))}function randRange(e,t){return Math.random()*(t-e)+e}function randRangeSeed(e,t,i){return randSeed(i)*(t-e)+e}function randSeed(e){let t=1e4*Math.sin(e);return t-Math.floor(t)}function randFromArray(e){return randFromArrayHelper(e,Math.random())}function randFromArraySeed(e,t){return randFromArrayHelper(e,randSeed(t))}function randFromArrayHelper(e,t){return e[Math.floor(t*e.length)]}function randFromArrayWithProbability(e){let t=0;for(const i of e)t+=i.probability;let i=randRange(0,t),n=0;for(const t of e)if(n+=t.probability,n>i)return t;return null}function randomCirclePos(e){return randomCirclePosHelper(Math.random(),Math.random(),e)}function randomCirclePosSeed(e,t){return randomCirclePosHelper(randSeed(e),randSeed(e+1),t)}function randomCirclePosHelper(e,t,{startRadius:i=1,endRadius:n=0,distributionCurve:r=(e=>e),thetaMin:s=0,thetaMax:o=2*Math.PI}={}){let a=1-1*Math.pow(i,2)/n/n,l=r(e);return l=Math.sqrt((l-1)*a+1)*n,{theta:lerp(s,o,t),dist:l}}function recalculateStyle(e){window.getComputedStyle(e).getPropertyValue("top")}function skipCssTransition(e){let t=e.style.transition;e.style.transition="none",recalculateStyle(e),e.style.transition=t}let inMemoryLocalStorage=new Map;function lsSet(e,t){try{return localStorage.setItem(e,t),!0}catch(i){return inMemoryLocalStorage.set(e,""+t),!1}}function lsGet(e){try{return localStorage.getItem(e)}catch(t){return inMemoryLocalStorage.get(e)}}function searchToDict(e){let t=new URLSearchParams(e),i={};for(const e of t.entries())i[e[0]]=e[1];return i}function parseSearch(){return searchToDict(location.search)}function requestWithProgress(e,t){return new Promise(((i,n)=>{let r=new XMLHttpRequest;r.responseType="blob",r.addEventListener("progress",(e=>{if(t){let i=0;e.lengthComputable&&(i=e.loaded/e.total),t(i)}})),r.onload=e=>{200==r.status||0==r.status?i(r.response):n()},r.onerror=e=>{n()},r.open("GET",e,!0),r.send()}))}const materials={unlitVertex:new MeshBasicMaterial({vertexColors:2}),unlitVertexDouble:new MeshBasicMaterial({vertexColors:2,side:2}),unlitVertexMorphTargets:new MeshBasicMaterial({vertexColors:2,morphTargets:!0})};function makeUnlitVertexColor(e,t=!1){e.traverse((e=>{if(e instanceof Mesh){let i=materials.unlitVertex;t&&(i=materials.unlitVertexDouble),e.morphTargetDictionary&&Object.entries(e.morphTargetDictionary).length>=1&&(i=materials.unlitVertexMorphTargets),e.material=i}}))}let svgNS="http://www.w3.org/2000/svg";async function cordovaFetch(e){return CORDOVA?await new Promise(((t,i)=>{let n=new XMLHttpRequest;n.responseType="blob",n.onload=function(){let e=n.status;0==e&&(e=200),t(new Response(n.response,{status:e}))},n.onerror=function(){i(new TypeError("Local request failed"))},n.open("GET",e),n.send(null)})):await fetch(...arguments)}async function copyTextToClipboard(e){if(navigator.clipboard)try{return await navigator.clipboard.writeText(e),!0}catch(e){}let t=document.createElement("input");t.value=e,document.body.appendChild(t),t.select();let i=document.execCommand("copy");return document.body.removeChild(t),i}class WaterStream{constructor(e){this.opts={streamCount:8,streamDistance:.5,streamDistanceRandomness:.2,streamSizeX:1,streamSizeY:1,frontSizeX:1,frontSizeY:1,frontOffset:0,sizeRandomness:.2,cullRadius:3,...e},this.obj=new Object3D,this.obj.name="waterstream",main.game.scene.add(this.obj),this.frontStream=null,this.backStreams=[],this.lastStreamIndex=0,this.moveDistSinceLastStream=0,this.nextStreamDistanceOffset=0,this.rot=0,this.pos=new Vector3,this.prevPos=new Vector3,this.smoothSpeed=0,this.inFrustrum=!1,this.loadAssets()}destructor(){this.opts=null,this.obj.parent&&this.obj.parent.remove(this.obj),this.obj=null,this.frontStream=null,this.backStreams=[],this.prevPos=null}async loadAssets(){let e=await main.assetCache.getItem("stream.glb");if(!this.obj)return;let t=e.scene.children[0];this.frontStream=t.clone(),this.obj.add(this.frontStream);for(let e=0;e<this.opts.streamCount;e++){let e=t.clone();this.obj.add(e),this.backStreams.push({obj:e,spawnTime:0,spawnPosition:new Vector3,spawnRotation:new Quaternion,sizeMultiplierX:1,sizeMultiplierY:1})}}setPos(e,t){this.pos.copy(e),this.rot=t}loop(e,t){if(this.inFrustrum=main.cam.frustum.intersectsSphere(new Sphere(this.pos,this.opts.cullRadius)),this.frontStream){if(this.obj.visible=this.inFrustrum,!this.inFrustrum)return;this.frontStream.position.copy(this.pos);let t=new Vector3(1,0,0);t.applyAxisAngle(new Vector3(0,1,0),this.rot),t.setLength(this.opts.frontOffset),this.frontStream.position.add(t),this.frontStream.rotation.y=this.rot+Math.PI/2;let i=this.prevPos.clone().sub(this.pos);if(this.prevPos.copy(this.pos),this.moveDistSinceLastStream+=i.length(),this.smoothSpeed=lerpt(this.smoothSpeed,i.length(),.1),this.moveDistSinceLastStream>this.opts.streamDistance+this.nextStreamDistanceOffset){this.moveDistSinceLastStream=0,this.nextStreamDistanceOffset=randRange(-this.opts.streamDistanceRandomness,this.opts.streamDistanceRandomness);let e=this.backStreams[this.lastStreamIndex];e.spawnTime=main.now,e.spawnPosition.copy(this.frontStream.position),e.spawnRotation.copy(this.frontStream.quaternion),e.sizeMultiplierX=randRange(1-this.opts.sizeRandomness,1+this.opts.sizeRandomness),e.sizeMultiplierY=randRange(1-this.opts.sizeRandomness,1+this.opts.sizeRandomness),this.lastStreamIndex=mod(this.lastStreamIndex+1,this.backStreams.length)}this.frontStream.scale.x=this.opts.frontSizeX+.07*this.opts.frontSizeX*Math.cos(.004*e),this.frontStream.scale.z=this.opts.frontSizeY+.07*this.opts.frontSizeY*Math.cos(.0033*e);let n=mapValue(-1,1,.5,1,Math.cos(.002*e));n*=clamp01(50*this.smoothSpeed-.3),this.setInfluence(this.frontStream,"thickness",1-n);for(const t of this.backStreams){t.obj.position.copy(t.spawnPosition),t.obj.quaternion.copy(t.spawnRotation);let i=e-t.spawnTime;i*=.001;let n=i<1/3?3*i:1.33333-i;n=clamp01(n),t.obj.scale.x=(.4+.4*i)*this.opts.streamSizeX*t.sizeMultiplierX,t.obj.scale.z=(.4+.4*i)*this.opts.streamSizeY*t.sizeMultiplierY,this.setInfluence(t.obj,"thickness",1-n),this.setInfluence(t.obj,"length",clamp01(i))}}}setInfluence(e,t,i){let n=e.morphTargetDictionary[t];e.morphTargetInfluences[n]=i}}class Boat{constructor(e){this.opts={assetPath:"",travelSpeed:1,travelRadius:60,travelOffset:0,addAnimationMixer:!0,sfxName:"",assetRotation:0,streamRotation:0,streamOptions:{},hitBoxX:1,hitBoxY:1,hitBoxYOffset:0,...e},this.obj=new Object3D,this.obj.name="boat",this.stream=null,this.animationMixer=null,this.theta=0}init(){this.loadAsset(),this.stream=new WaterStream(this.opts.streamOptions),this.opts.sfxName&&main.sfx.playSound(this.opts.sfxName,{linkedObject:this.obj})}updatePosition(e){this.theta=Math.PI*this.opts.travelOffset+3e-4*this.opts.travelSpeed*e;const t=this.theta,i=-t-.5*Math.PI;this.obj.position.x=Math.cos(t)*this.opts.travelRadius,this.obj.position.z=Math.sin(t)*this.opts.travelRadius,this.obj.rotation.y=i+Math.PI*this.opts.assetRotation,this.stream.setPos(this.obj.position,i+Math.PI*this.opts.streamRotation)}loop(e,t){this.stream.loop(e,t),this.animationMixer&&this.animationMixer.update(t/1e3)}async loadAsset(){let e=await main.assetCache.getItem(this.opts.assetPath),t=e.scene.children[0].clone();if(this.obj.add(t),this.opts.addAnimationMixer){this.animationMixer=new AnimationMixer(this.obj);for(const t of e.animations){this.animationMixer.clipAction(t).play()}}}pointInsideBoat(e){(e=e.clone()).y=0;let t=this.theta,i=new Vector3(Math.cos(t),0,Math.sin(t)),n=t+.5*Math.PI,r=new Vector3(Math.cos(n),0,Math.sin(n)),s=e.clone().sub(this.obj.position),o=i.clone().dot(s);o=Math.abs(o);let a=r.clone().dot(s);a=Math.abs(a);let l=new Vector2(o,a);l.y-=this.opts.hitBoxXOffset,l.x/=this.opts.hitBoxX,l.y/=this.opts.hitBoxY;let c=this.obj.position.clone().add(i.clone().setLength(this.opts.hitBoxX)),h=this.obj.position.clone().add(i.clone().setLength(-this.opts.hitBoxX)),u=this.obj.position.clone().add(r.clone().setLength(this.opts.hitBoxY)),d=this.obj.position.clone().add(r.clone().setLength(-this.opts.hitBoxY)),p=r.clone().setLength(this.opts.hitBoxXOffset);return c.add(p),h.add(p),u.add(p),d.add(p),l.length()<1}}class PushableObject{constructor(e,{radius:t=1,posInfluence:i=1,rotInfluence:n=0,onTouchRadius:r=1,onTouchCooldown:s=1e3,onTouch:o=null}={}){this.obj=e,this.defaultPos=e.position.clone(),this.defualtRot=e.quaternion.clone(),this.radius=t,this.posInfluence=i,this.rotInfluence=n,this.onTouchRadius=r,this.onTouchCooldown=s,this.onTouch=o,this.prevWasTouching=!1,this.lastTouchTime=0}loop(e,t){let i=this.defaultPos.clone(),n=this.defualtRot.clone(),r=null,s=1/0;for(const e of main.game.players.values()){let t=this.defaultPos.distanceTo(e.posNoClone);t<s&&(s=t,r=e.pos)}if(this.onTouch){let t=s<this.onTouchRadius;t!=this.prevWasTouching&&(this.prevWasTouching=t,t&&e-this.lastTouchTime>this.onTouchCooldown&&(this.lastTouchTime=e,this.onTouch()))}if(!r)return;let o=this.defaultPos.clone().sub(r),a=clamp(-s+this.radius,0,this.radius);o.setLength(a);let l=mapValue(0,this.radius,.05,0,a,!0);if(i.addScaledVector(o,this.posInfluence),this.obj.position.lerp(i,lerpt01(l)),this.rotInfluence>0){let e=new Quaternion,t=o.clone().cross(new Vector3(0,1,0));e.setFromAxisAngle(t,-a*this.rotInfluence),n.multiply(e),this.obj.quaternion.slerp(n,lerpt01(l))}}}class PushableObjectsManager{constructor(){this.createdObjects=[],this.visibleObjects=[]}addObject(e,t){let i=new PushableObject(e,t);this.createdObjects.push(i)}clearObjects(){this.createdObjects=[],this.visibleObjects=[]}loop(e,t){for(const i of this.visibleObjects)i.loop(e,t)}updateCulledObjects(){this.visibleObjects=[];for(const e of this.createdObjects)main.cam.frustum.intersectsSphere(new Sphere(e.defaultPos,1))&&this.visibleObjects.push(e)}}function inOut(e){return e<.5?8*e*e*e*e:1-Math.pow(-2*e+2,4)/2}function easeOut(e,t=4){return 1-Math.pow(1-e,t)}function custom(e,t){let i=e=>.5*Math.pow(2*e,t);return e<.5?i(e):1-i(1-e)}class MorphTargetWiggler{constructor(e,t){this.obj=e,this.morphIndex=this.obj.morphTargetDictionary[t],this.multiplier1=randRange(5e-4,.001),this.multiplier2=randRange(1e-4,5e-4),this.multiplier3=randRange(5e-5,1e-4),this.minValue=0,this.maxValue=1,this.speed=1}destructor(){this.obj=null}loop(e,t){e*=this.speed;let i=Math.cos(e*this.multiplier1)+Math.cos(e*this.multiplier2)+Math.cos(e*this.multiplier3);this.obj.morphTargetInfluences[this.morphIndex]=mapValue(-3,3,this.minValue,this.maxValue,i)}}class EnvironmentScatterer{constructor(e){this.opts={assetPath:"",count:100,startRadius:50,endRadius:80,randomRotation:!0,randomScaleMin:.8,randomScaleMax:1.2,distributionCurve:"linear",distributionCurveStrength:3,groupCountMin:1,groupCountMax:1,groupSize:1,useChildObject:!0,pickRandomChild:!1,pickRandomInGroup:!1,addWiggler:!1,addWaterCircle:!1,waterCircleSize:1,dontSpawnInNests:!1,swimLimitRadius:0,onObjCreated:null,seed:randInt(0,1e3),...e},this.obj=new Object3D,this.obj.name="scatterrer ("+this.opts.assetPath+")",this.wigglers=[],this.waterCircles=[],this.seed=this.opts.seed}init(){this.loadAsset()}destructor(){this.obj&&this.obj.parent.remove(this.obj);for(const e of this.wigglers)e.destructor();this.wigglers=[];for(const e of this.waterCircles)e.destructor();this.waterCircles=[]}async loadAsset(){let e=await main.assetCache.getItem(this.opts.assetPath),t=null;t=this.opts.useChildObject?e.scene.children[0]:e.scene;let i=this.opts.distributionCurve;"string"==typeof i&&("linear"==i?i=e=>e:"in"==i?i=e=>Math.pow(e,this.opts.distributionCurveStrength):"out"==i?i=e=>1-Math.pow(e,this.opts.distributionCurveStrength):"inout"==i?i=e=>custom(e,1/(this.opts.distributionCurveStrength+1)):"outin"==i&&(i=e=>custom(e,this.opts.distributionCurveStrength+1)));for(let e=0;e<this.opts.count;e++){let{theta:n,dist:r}=randomCirclePosSeed(this.seed+10*e+1,{startRadius:this.opts.startRadius,endRadius:this.opts.endRadius,distributionCurve:i}),s=new Vector3(Math.cos(n)*r,0,Math.sin(n)*r),o=t;this.opts.pickRandomChild&&!this.opts.pickRandomInGroup&&(o=randFromArraySeed(t.children,this.seed+10*e+2));let a=randIntSeed(this.opts.groupCountMax,this.opts.groupCountMax+1,this.seed+10*e+3);for(let i=0;i<a;i++){let n=s.clone();if(a>1){let t=randRangeSeed(0,2*Math.PI,this.seed+10*e+i),r=randRangeSeed(0,this.opts.groupSize,this.seed+10*e+i+1),s=new Vector3;s.x=Math.cos(t)*r,s.z=Math.sin(t)*r,n.add(s)}if(this.opts.dontSpawnInNests){let e=1/0;for(const t of main.game.nests){let i=t.pos.distanceTo(n);e=Math.min(e,i)}if(e<1)continue}this.opts.swimLimitRadius>0&&main.game.environment.addScatterSwimLimit({pos:n,radius:this.opts.swimLimitRadius}),this.opts.pickRandomChild&&this.opts.pickRandomInGroup&&(o=randFromArraySeed(t.children,this.seed+10*e+i+2));let r=o.clone();this.opts.addWiggler&&this.wigglers.push(new MorphTargetWiggler(r,this.opts.addWiggler.morphName)),r.position.copy(n),this.opts.randomRotation&&(r.rotation.y=randRangeSeed(0,2*Math.PI,this.seed+10*e+i+3));let l=randRangeSeed(this.opts.randomScaleMin,this.opts.randomScaleMax,this.seed+10*e+i+4);if(r.scale.setScalar(l),this.opts.addWaterCircle){let e=new WaterCircle;e.obj.scale.setScalar(this.opts.waterCircleSize*l),r.add(e.obj),this.waterCircles.push(e)}this.opts.onObjCreated&&this.opts.onObjCreated(r),main.game.environment.culler.addObjectToGroup(r)}}}loop(e,t){for(const i of this.wigglers)i.loop(e,t);for(const i of this.waterCircles)i.loop(e,t)}}class EnvironmentCuller{constructor(){this.obj=new Object3D,this.totalSize=75,this.groupCount=20,this.groups2d=[];let e=2*this.totalSize/this.groupCount;for(let t=0;t<this.groupCount;t++){let i=[];for(let n=0;n<this.groupCount;n++){let r=this.groupCount/2,s=(t-r)*(this.totalSize/r),o=(n-r)*(this.totalSize/r),a=new EnvironmentCullerGroup(t,n,s,o,s+e,o+e);i.push(a)}this.groups2d.push(i)}}addObjectToGroup(e){let t=e.position.x,i=e.position.z;t=mapValue(-this.totalSize,this.totalSize,0,this.groupCount,t),i=mapValue(-this.totalSize,this.totalSize,0,this.groupCount,i),t=Math.floor(t),i=Math.floor(i),t=clamp(t,0,this.groupCount-1),i=clamp(i,0,this.groupCount-1),this.groups2d[t][i].addObject(e)}*groups(){for(let e=0;e<this.groupCount;e++)for(let t=0;t<this.groupCount;t++)yield this.groups2d[e][t]}loop(e,t){let i=main.cam.frustum;for(const e of this.groups()){let t=i.intersectsBox(e.box);e.setEnabled(t)}}clearObjects(){for(const e of this.groups())e.clearObjects()}}class EnvironmentCullerGroup{constructor(e,t,i,n,r,s){this.x=e,this.y=t,this.obj=new Object3D,this.obj.name="cullerGroup",this.box=new Box3(new Vector3(i,-2,n),new Vector3(r,2,s)),this.enabled=!1}addObject(e){this.obj.add(e)}setEnabled(e){e!=this.enabled&&(this.enabled=e,e?main.game.environment.culler.obj.add(this.obj):main.game.environment.culler.obj.remove(this.obj))}clearObjects(){for(let e=this.obj.children.length-1;e>=0;e--)this.obj.remove(this.obj.children[e])}}let WaterCircle$1=class{constructor(e){this.obj=new Object3D,this.obj.name="waterCircle",this.creationTime=main.now,this.circles=e?[{getThickness:e=>easeOut(.0012*e,1),getSize:e=>.3*easeOut(.0012*e,1)},{getThickness:e=>easeOut(.0012*e+.2,1),getSize:e=>.3*easeOut(.0012*e+.2,1)}]:[{getThickness:e=>-5,getSize:e=>.177+.01*Math.cos(.003*e)},{getThickness:e=>easeOut(mod(4e-4*e,1),2),getSize:e=>.3*easeOut(mod(4e-4*e,1),2)},{getThickness:e=>easeOut(mod(4e-4*e+.4,1),2),getSize:e=>.3*easeOut(mod(4e-4*e+.4,1),2)}],this.loadAsset()}destructor(){this.obj.parent&&this.obj.parent.remove(this.obj),this.obj=null,this.circle=[]}async loadAsset(){let e=await main.assetCache.getItem("waterCircle.glb");if(!this.obj)return;let t=e.scene.children[0];for(const e of this.circles)e.obj=t.clone(),e.obj.position.y=0,this.obj.add(e.obj)}loop(e,t){let i=e-this.creationTime;for(const e of this.circles)if(e.obj&&(e.getThickness&&(e.obj.morphTargetInfluences[0]=e.getThickness(i)),e.getSize)){let t=e.getSize(i);t=Math.max(t,1e-4),e.obj.scale.setScalar(t)}}};class EnvironmentGenerator{constructor(e){this.obj=new Object3D,this.obj.name="environment",e.add(this.obj),this.staticSwimLimits=new Set,this.addStaticSwimLimit({pos:new Vector3,radius:69.3,inverse:!0,checkFrustrum:!1}),this.addStaticSwimLimit({pos:new Vector3,radius:24,checkFrustrum:!1}),this.scatterSwimLimits=new Set,this.activeSwimLimits=[],this.lastSwimLimitsCullTime=0,this.pushableObjectsManager=new PushableObjectsManager,this.lastUsedScatterSeed=0,this.scatterers=[],this.culler=new EnvironmentCuller,this.obj.add(this.culler.obj),this.seaEdgeWiggler=null,this.waterCircles=[],this.buoys=[]}init(){this.loadSea(),this.loadSeaEdge(),this.loadDocks(),this.loadBuoys(),this.loadLighthouse()}rebuildScatterers(e=0){if(e==this.lastUsedScatterSeed)return;this.lastUsedScatterSeed=e;for(const e of this.scatterers)e.destructor();this.culler.clearObjects(),this.pushableObjectsManager.clearObjects(),this.scatterSwimLimits.clear();let t={assetPath:"environment/lilypad.glb",groupCountMin:2,groupCountMax:6,groupSize:3,onObjCreated:e=>{this.pushableObjectsManager.addObject(e)}},i={distributionCurveStrength:4,addWiggler:{morphName:"move"},groupCountMin:1,groupCountMax:3,onObjCreated:e=>{this.pushableObjectsManager.addObject(e,{posInfluence:0,rotInfluence:1,onTouchRadius:.5,onTouch:t=>{main.sfx.playSound("grassHit",{pos:e.position})}})}},n={count:70,startRadius:22,endRadius:36,distributionCurve:"in"},r={count:100,startRadius:51,endRadius:72,distributionCurve:"out"};this.scatterers=[new EnvironmentScatterer({...t,count:40,startRadius:20,endRadius:36,distributionCurve:"in",seed:e+1e3}),new EnvironmentScatterer({...t,count:5,startRadius:45,endRadius:45,distributionCurve:"inout",seed:e+2e3}),new EnvironmentScatterer({...t,count:200,startRadius:51,endRadius:72,distributionCurve:"out",seed:e+3e3}),new EnvironmentScatterer({...i,...n,assetPath:"environment/grassGroup.glb",seed:e+4e3}),new EnvironmentScatterer({...i,...n,assetPath:"environment/grassGroup2.glb",seed:e+5e3}),new EnvironmentScatterer({...i,...r,assetPath:"environment/grassGroup.glb",seed:e+6e3}),new EnvironmentScatterer({...i,...r,assetPath:"environment/grassGroup2.glb",seed:e+7e3}),new EnvironmentScatterer({assetPath:"environment/rocks.glb",count:40,startRadius:20,endRadius:26,distributionCurve:"in",distributionCurveStrength:4,groupCountMin:1,groupCountMax:5,groupSize:3,useChildObject:!1,pickRandomChild:!0,pickRandomInGroup:!0,dontSpawnInNests:!0,swimLimitRadius:2.9,seed:e+8e3}),new EnvironmentScatterer({assetPath:"environment/rocks.glb",count:60,startRadius:60,endRadius:73,distributionCurve:"out",distributionCurveStrength:4,groupCountMin:1,groupCountMax:5,groupSize:3,useChildObject:!1,pickRandomChild:!0,pickRandomInGroup:!0,dontSpawnInNests:!0,swimLimitRadius:2.9,seed:e+9e3}),new EnvironmentScatterer({assetPath:"environment/leaves.glb",count:400,startRadius:25,endRadius:70,distributionCurve:"outin",distributionCurveStrength:4,randomScaleMin:.3,randomScaleMax:.6,groupCountMin:3,groupCountMax:7,groupSize:2,useChildObject:!1,pickRandomChild:!0,seed:e+1e4}),new EnvironmentScatterer({assetPath:"environment/algae.glb",count:400,startRadius:25,endRadius:70,distributionCurve:"outin",distributionCurveStrength:4,randomScaleMin:.6,randomScaleMax:.9,groupCountMin:3,groupCountMax:7,groupSize:1,useChildObject:!1,pickRandomChild:!0,seed:e+11e3})];for(const e of this.scatterers)e.init(),this.obj.add(e.obj)}addStaticSwimLimit(e){return this.staticSwimLimits.add(e),e}removeStaticSwimLimit(e){this.staticSwimLimits.delete(e)}addScatterSwimLimit(e){this.scatterSwimLimits.add(e)}*swimLimits(){for(const e of this.staticSwimLimits)yield e;for(const e of this.scatterSwimLimits)yield e}async loadSea(){let e=await main.assets.getPackage("main").getGltfObject("sea.glb");makeUnlitVertexColor(e.scene),e.scene.getObjectByName("sea").position.y=-.003,this.obj.add(e.scene),this.seaObj=e.scene.getObjectByName("sea")}async loadSeaEdge(){let e=(await main.assets.getPackage("main").getGltfObject("waterEdge.glb")).scene.children[0];makeUnlitVertexColor(e),this.obj.add(e),this.seaEdgeWiggler=new MorphTargetWiggler(e,"move"),this.seaEdgeWiggler.minValue=.2,this.seaEdgeWiggler.maxValue=.6}async loadDocks(){let e=await main.assetCache.getItem("environment/docks.json");this.obj.add(e)}async loadBuoys(){let e=await main.assetCache.getItem("environment/buoys.json");this.obj.add(e);for(const t of e.children){let e=new WaterCircle$1;e.obj.scale.setScalar(8),e.obj.position.copy(t.position),this.obj.add(e.obj),this.waterCircles.push(e),this.addStaticSwimLimit({pos:t.position.clone(),radius:3.8}),main.sfx.playSound("environment/buoyBell",{linkedObject:t}),this.buoys.push(t)}}async loadLighthouse(){let e=await main.assetCache.getItem("environment/lighthouse.json");this.obj.add(e);let t=e.children[0],i=new WaterCircle$1;i.obj.scale.setScalar(28),t.add(i.obj),this.waterCircles.push(i),this.addStaticSwimLimit({pos:t.position.clone(),radius:7}),main.sfx.playSound("environment/buoyBell",{linkedObject:t})}loop(e,t){for(const i of this.scatterers)i.loop(e,t);this.seaEdgeWiggler&&this.seaEdgeWiggler.loop(e,t);for(const i of this.waterCircles)i.loop(e,t);if(this.seaObj&&this.seaObj.scale.setScalar(102.96+Math.cos(.002*e)),this.culler.loop(e,t),e-this.lastSwimLimitsCullTime>2e3){this.lastSwimLimitsCullTime=e,this.activeSwimLimits=[];for(const e of this.swimLimits()){let t=!1;t=!e.checkFrustrum&&void 0!==e.checkFrustrum||main.cam.frustum.intersectsSphere(new Sphere(e.pos,e.radius)),t&&this.activeSwimLimits.push(e)}this.pushableObjectsManager.updateCulledObjects()}this.pushableObjectsManager.loop(e,t);let i=new Quaternion;i.setFromAxisAngle(new Vector3(Math.cos(3e-4*e),0,Math.sin(3e-4*e)),.2*Math.cos(.001*e));for(const e of this.buoys)e.quaternion.copy(i)}}class AmbientNoiseManager{constructor(){this.noises=[{volumeMultiplier:.55,name:"shore",volumeForCamDist:e=>clamp01(1-5*(1-e))},{volumeMultiplier:.28,name:"sea",volumeForCamDist:e=>clamp01(5*(1-e))}]}async init(){for(const e of this.noises)e.sound=await main.sfx.playSound("ambientLoops/"+e.name)}loop(e,t){for(const e of this.noises)if(e.sound&&e.volumeForCamDist){let t=main.cam.camera.position.clone();t.y=0;let i=t.length()/70;e.sound.setVolume(e.volumeForCamDist(i)*e.volumeMultiplier)}}}class Smooth2dRotation{constructor(){this.targetRotationAngle=0,this.smoothRotationAngle=0,this.lookDir=new Vector3,this.angle=0}destructor(){this.lookDir=null}setLookDir(e){this.lookDir.copy(e)}resetToCurrentTarget(){this.calculateTargetAngle(),this.smoothRotationAngle=this.targetRotationAngle}calculateTargetAngle(){let e=new Vector3(1,0,0),t=0;this.lookDir.length()<.01?t=NaN:(t=this.lookDir.angleTo(e),this.lookDir.clone().cross(e).y>0&&(t*=-1));let i=Smooth2dRotation.getDeltaAngle(this.targetRotationAngle,t);isNaN(i)||(this.targetRotationAngle+=i)}loop(e,t){this.calculateTargetAngle(),this.smoothRotationAngle=lerp(this.smoothRotationAngle,this.targetRotationAngle,lerptt01(.1,t/16.6666)),this.angle=this.smoothRotationAngle}static getDeltaAngle(e,t){let i=modMinMax(e,-Math.PI,Math.PI);return modMinMax(t-i,-Math.PI,Math.PI)}}class AnimatorInterval{constructor({minInterval:e,maxInterval:t,loopCb:i,intervalCb:n,loopOutsideFrustrum:r}={}){this.minInterval=e,this.maxInterval=t,this.loopCb=i,this.intervalCb=n,this.loopOutsideFrustrum=r,this.nextTime=0,this.lastTime=0}destructor(){this.loopCb=null,this.intervalCb=null}loop(e,t,i=!0){if(!i&&!this.loopOutsideFrustrum)return;e>this.nextTime&&this.fireNow(e);let n=e-this.lastTime;this.loopCb&&this.loopCb(n)}fireNow(e=main.now){this.nextTime=e+randRange(this.minInterval,this.maxInterval),this.lastTime=e,this.intervalCb&&this.intervalCb()}}class PlayerAnimator{constructor(){this.obj=null,this.player=null,this.body=null,this.wingL=null,this.wingR=null,this.hatParentObj=null,this.hatObj=null,this.nextLookTime=0,this.lastLookTime=0,this.prevLookTarget=0,this.currentLookTarget=0,this.currentLookValue=0,this.spawnY=0,this.isDoingSpawnAnimation=!1,this.isDoingDespawnAnimation=!1,this.despawnSpeedMultiplier=1,this.selectedHatName="empty",this.animatingHatSwapDir=0,this.hatSwapT=1,this.intervals=[this.quackInterval=new AnimatorInterval({minInterval:1e3,maxInterval:5e3,intervalCb:e=>{this.player&&main.sfx.playSound("duck/"+randInt(1,7),{pos:this.player.pos})},loopCb:e=>{let t=(e*=.01)<Math.PI?Math.sin(e):0;this.setInfluence("Quack",t)},loopOutsideFrustrum:!0}),new AnimatorInterval({minInterval:5e3,maxInterval:1e4,loopCb:e=>{let t=(e*=.02)<Math.PI?2*Math.sin(e):0;this.setInfluence("eyeBlink",t)}}),new AnimatorInterval({minInterval:1e3,maxInterval:2500,intervalCb:e=>{this.prevLookTarget=this.currentLookValue,this.currentLookTarget+=randRange(-.4,.4),this.currentLookTarget=clamp(this.currentLookTarget,-1,1)},loopCb:e=>{e*=.001,this.currentLookValue=lerp(this.prevLookTarget,this.currentLookTarget,inOut(clamp01(e))),this.setInfluence("headMoveLeft",clamp01(this.currentLookValue)),this.setInfluence("headMoveRight",clamp01(-this.currentLookValue))}}),new AnimatorInterval({minInterval:5e3,maxInterval:3e4,loopCb:e=>{this.wingL&&(e*=.03,e=Math.min(2*Math.PI,e),this.wingL.rotation.x=mapValue(1,-1,-2.6173277643589596,-2.5,Math.cos(e)))}}),new AnimatorInterval({minInterval:5e3,maxInterval:3e4,loopCb:e=>{this.wingR&&(e*=.03,e=Math.min(2*Math.PI,e),this.wingR.rotation.x=mapValue(1,-1,-2.6173277643589596,-2.5,Math.cos(e)))}})]}destructor(){this.obj=null,this.player=null,this.body=null,this.wingL=null,this.wingR=null,this.hatParentObj=null,this.hatObj=null;for(const e of this.intervals)e.destructor();this.intervals=[]}setObjects(e,t,i){if(this.player=i,this.obj=e,this.body=e.getObjectByName("duckBody"),this.wingL=e.getObjectByName("duckWingLeft"),this.wingR=e.getObjectByName("duckWingRight"),t){this.hatParentObj=t,this.hatObj=t.children[0];for(const e of this.hatObj.children)e.visible=!1;const e=this.selectedHatName;this.selectedHatName="empty",this.setSelectedHatName(e)}this.setObjSpawnPosition()}loop(e,t,i){for(const n of this.intervals)n.loop(e,t,i);if(this.isDoingSpawnAnimation?(this.spawnY+=6e-4*t,this.spawnY>1&&(this.spawnY=1,this.isDoingSpawnAnimation=!1),this.setObjSpawnPosition()):this.isDoingDespawnAnimation&&(this.spawnY-=.002*t*this.despawnSpeedMultiplier,this.spawnY<0&&(this.isDoingDespawnAnimation=!1),this.setObjSpawnPosition()),this.hatObj){if(0!=this.animatingHatSwapDir){if(this.hatSwapT+=this.animatingHatSwapDir*t*.01,this.animatingHatSwapDir<0&&this.hatSwapT<=0){this.hatSwapT=0;for(const e of this.hatObj.children)e.visible=e.name==this.selectedHatName;this.animatingHatSwapDir=1}this.animatingHatSwapDir>0&&this.hatSwapT>=1&&(this.hatSwapT=1,this.animatingHatSwapDir=0);const e=easeOut(Math.max(.001,this.hatSwapT));this.hatObj.scale.setScalar(e)}this.hatObj.rotation.y=this.currentLookValue}}setObjSpawnPosition(){const e=lerp(-.5,0,easeOut(this.spawnY));this.obj&&(this.obj.position.y=e),this.hatParentObj&&(this.hatParentObj.position.y=e)}startSpawnAnimation(){this.spawnY=0,this.isDoingDespawnAnimation=!1,this.isDoingSpawnAnimation=!0}startDespawnAnimation(e=1){this.despawnSpeedMultiplier=e,this.isDoingSpawnAnimation=!1,this.isDoingDespawnAnimation=!0}setInfluence(e,t){this.setInfluenceForObj(this.body,e,t)}setInfluenceForObj(e,t,i){if(!e)return;let n=e.morphTargetDictionary[t];e.morphTargetInfluences[n]=i}setSelectedHatName(e){e!=this.selectedHatName&&(this.animatingHatSwapDir=-1,this.selectedHatName=e)}}class DucklingAnimator{constructor(){this.isLost=!0,this.duckling=null,this.spawnY=0,this.isDoingSpawnAnimation=!1,this.isDoingDespawnAnimation=!1,this.chirpInterval=new AnimatorInterval({minInterval:200,maxInterval:800,intervalCb:e=>{this.duckling&&main.sfx.playSound("duckling/"+randInt(1,10),{pos:this.duckling.pos})},loopCb:e=>{let t=(e*=.01)<Math.PI?Math.sin(e):0;t*=this.isLost?1:.5,this.setInfluence("quack",t)},loopOutsideFrustrum:!0}),this.blinkInterval=new AnimatorInterval({minInterval:1e3,maxInterval:3e3,loopCb:e=>{let t=(e*=.01)<Math.PI?2*Math.sin(e):0;this.setInfluence("eyeBlink",t)}})}destructor(){this.duckling=null,this.obj=null,this.body=null,this.wingL=null,this.wingR=null,this.head=null,this.chirpInterval.destructor(),this.chirpInterval=null,this.blinkInterval.destructor(),this.blinkInterval=null}loop(e,t,i){this.chirpInterval.loop(e,t,i),this.blinkInterval.loop(e,t,i),this.obj&&(this.isDoingSpawnAnimation?(this.spawnY+=3e-4*t,this.spawnY>0&&(this.spawnY=0,this.isDoingSpawnAnimation=!1),this.obj.position.y=Math.min(0,this.spawnY)):this.isDoingDespawnAnimation&&(this.spawnY-=.002*t,this.spawnY<-.15&&(this.isDoingDespawnAnimation=!1),this.obj.position.y=this.spawnY))}setObject(e,t){this.duckling=t,this.obj=e,this.body=e.getObjectByName("body"),this.wingL=e.getObjectByName("wing_L"),this.wingR=e.getObjectByName("wing_R"),this.head=e.getObjectByName("head"),this.setIsLost(this.isLost),this.startSpawnAnimation()}startSpawnAnimation(){this.spawnY=-.15,this.isDoingDespawnAnimation=!1,this.isDoingSpawnAnimation=!0}startDespawnAnimation(){this.isDoingSpawnAnimation=!1,this.isDoingDespawnAnimation=!0}setInfluence(e,t){if(!this.head)return;let i=this.head.morphTargetDictionary[e];this.head.morphTargetInfluences[i]=t}setIsLost(e){this.isLost=e,this.head&&(this.head.rotation.x=e?-.6:0),this.chirpInterval.minInterval=e?200:1e3,this.chirpInterval.maxInterval=e?800:8e3}}class HostConnection{constructor(){}static get ServerAction(){return{PINGPONG:0,ENVIRONMENT_SEED:1,PLAYER_SPAWN:2,PLAYER_DELETE:3,SET_PLAYER_OWNERSHIP:4,PLAYER_POSITION:5,INIT_DUCKLINGS:6,DUCKLINGS_FOLLOW_STATES:7,RESPAWN_DUCKLINGS:8,NEST_POSITIONS:9,NEST_OWNERSHIP:10,REQUEST_DUCKLING_RESPAWN:11,NEST_SCORE_DUCKLINGS:12,BOATS_TIME:13,CLAIM_PLAYER:14,PLAYER_QUACK:15,PLAYER_DEATH_STATE:16,PLAYER_PAUSED_STATE:17,DETACH_DUCKLINGS:18,PLAYER_KARMA:19,MY_TAB_ACTIVE:20,PLAYER_GAME_STARTED_STATE:21,FULL_SERVER_STATE_SENT:22,ARE_YOU_STILL_THERE:23,I_AM_STILL_HERE:24,RTC_CONNECTION_UUID_CHANGED:25,PLAYER_HAT_ID:26,I_AM_HOST:27,YOU_ARE_HOST_CONFIRMED:28,NEST_SCORE_OFFSET:29}}static get DucklingFollowType(){return{NONE:0,PLAYER:1,OTHER_DUCKLING:2,NEST:3}}onMessageFromServer(e){const t=new DataView(e),i=t.getUint8(0),n=e.slice(1);if(i==HostConnection.ServerAction.PINGPONG){const[e]=HostConnection.decomposeMessage(n,["float64"]);main.networkManager.receivedHostPong(e)}else if(i==HostConnection.ServerAction.ENVIRONMENT_SEED){const[e]=HostConnection.decomposeMessage(n,["uint32"]);main.game.environment.rebuildScatterers(e)}else if(i==HostConnection.ServerAction.PLAYER_SPAWN){const[e,t]=HostConnection.decomposeMessage(n,["uint16","bool"]);main.game.newPlayer(e,t)}else if(i==HostConnection.ServerAction.PLAYER_DELETE){const[e]=HostConnection.decomposeMessage(n,["uint16"]);main.game.despawnPlayer(e)}else if(i==HostConnection.ServerAction.SET_PLAYER_OWNERSHIP){const[e,t]=HostConnection.decomposeMessage(n,["uint16","bool"]);main.game.setPlayerOwnership(e,t)}else if(i==HostConnection.ServerAction.PLAYER_POSITION){const[e,t,i,r]=HostConnection.decomposeMessage(n,["uint16","float32","float32","bool"]);main.game.setPlayerServerPosition(e,t,i,r)}else if(i==HostConnection.ServerAction.INIT_DUCKLINGS){const[e]=HostConnection.decomposeMessage(n,["uint16"]);main.game.initDucklings(e)}else if(i==HostConnection.ServerAction.DUCKLINGS_FOLLOW_STATES){const{states:e}=HostConnection.parseDucklingsFollowStateMessage(n);for(const t of e)main.game.setDucklingFollowState(t);main.game.updateUnknownDucklingStates()}else if(i==HostConnection.ServerAction.RESPAWN_DUCKLINGS){let i=1;for(;i<e.byteLength;){const e=t.getUint16(i,!0);i+=2;const n=t.getFloat32(i,!0);i+=4;const r=t.getFloat32(i,!0);i+=4,main.game.respawnDuckling(e,n,r)}}else if(i==HostConnection.ServerAction.NEST_POSITIONS){let i=1;const n=[];for(;i<e.byteLength;){const e=t.getFloat32(i,!0);i+=4;const r=t.getFloat32(i,!0);i+=4,n.push([e,r])}main.game.setNestPositions(n)}else if(i==HostConnection.ServerAction.NEST_OWNERSHIP){const[e,t]=HostConnection.decomposeMessage(n,["uint16","uint16"]);main.game.setNestOwnership(e,t)}else if(i==HostConnection.ServerAction.NEST_SCORE_DUCKLINGS){let i=1;const n=t.getUint16(i,!0);i+=2;const r=t.getUint32(i,!0);i+=4;const s=[];for(;i<e.byteLength;){const e=t.getUint16(i,!0);i+=2,s.push(e)}main.game.updateNestServerScoreDucklings(n,r,s)}else if(i==HostConnection.ServerAction.BOATS_TIME){const[e,t]=HostConnection.decomposeMessage(n,["uint32","float32"]);main.game.setServerBoatSpeed(100*e,t)}else if(i==HostConnection.ServerAction.PLAYER_QUACK){const[e]=HostConnection.decomposeMessage(n,["uint16"]);main.game.playerQuackFromServer(e)}else if(i==HostConnection.ServerAction.PLAYER_DEATH_STATE){const[e,t]=HostConnection.decomposeMessage(n,["uint16","bool"]);main.game.playerDeathStateFromServer(e,t)}else if(i==HostConnection.ServerAction.PLAYER_PAUSED_STATE){const[e,t]=HostConnection.decomposeMessage(n,["uint16","bool"]);main.game.playerPausedStateFromServer(e,t)}else if(i==HostConnection.ServerAction.PLAYER_GAME_STARTED_STATE){const[e,t]=HostConnection.decomposeMessage(n,["uint16","bool"]);main.game.playerGameStartedStateFromServer(e,t)}else if(i==HostConnection.ServerAction.PLAYER_KARMA){const{playerId:e,karma:t}=HostConnection.parsePlayerKarmaMessage(n);main.game.setPlayerKarma(e,t)}else if(i==HostConnection.ServerAction.FULL_SERVER_STATE_SENT)main.networkManager.fullHostStateReceived();else if(i==HostConnection.ServerAction.ARE_YOU_STILL_THERE)this.send(HostConnection.composeMessage([HostConnection.ServerAction.I_AM_STILL_HERE]));else if(i==HostConnection.ServerAction.PLAYER_HAT_ID){const{playerId:e,hatId:t}=HostConnection.parsePlayerHatMessage(n);main.game.setPlayerHatId(e,t)}else if(i==HostConnection.ServerAction.NEST_SCORE_OFFSET){const{nestId:e,score:t,requestId:i}=HostConnection.parseNestScoreOffsetMessage(n);main.game.updateNestServerScoreClientOffset(e,t,i)}}send(e){main.networkManager.sendMessageToHost(e)}static getByteLengthForDataType(e){let t=1;return["uint16","int16"].includes(e)?t=2:["uint32","int32","float32"].includes(e)?t=4:"float64"==e&&(t=8),t}static composeMessage(e=[]){for(let[t,i]of e.entries())"number"==typeof i&&(i={value:i}),i={type:"uint8",...i},i.bytes=this.getByteLengthForDataType(i.type),e[t]=i;let t=0;for(const i of e)t+=i.bytes;const i=new ArrayBuffer(t),n=new DataView(i);let r=0;for(const t of e)"uint8"==t.type?n.setUint8(r,t.value):"uint16"==t.type?n.setUint16(r,t.value,!0):"uint32"==t.type?n.setUint32(r,t.value,!0):"int8"==t.type?n.setInt8(r,t.value):"int16"==t.type?n.setInt16(r,t.value,!0):"int32"==t.type?n.setInt32(r,t.value,!0):"float32"==t.type?n.setFloat32(r,t.value,!0):"float64"==t.type?n.setFloat64(r,t.value,!0):"bool"==t.type&&n.setUint8(r,t.value?1:0),r+=t.bytes;return i}static decomposeMessage(e,t=[]){const i=new DataView(e),n=[];let r=0;for(const e of t){let t=null;"uint8"==e?t=i.getUint8(r):"uint16"==e?t=i.getUint16(r,!0):"uint32"==e?t=i.getUint32(r,!0):"int8"==e?t=i.getInt8(r):"int16"==e?t=i.getInt16(r,!0):"int32"==e?t=i.getInt32(r,!0):"float32"==e?t=i.getFloat32(r,!0):"float64"==e?t=i.getFloat64(r,!0):"bool"==e&&(t=i.getUint8(r)>0),n.push(t),r+=this.getByteLengthForDataType(e)}return n}sendPing(){const e=new ArrayBuffer(1);new DataView(e).setUint8(0,HostConnection.ServerAction.PINGPONG),this.send(e)}sendRequestPlayerSpawn(){const e=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_SPAWN]);this.send(e)}sendPlayerPosition(e,t,i){const n=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_POSITION,{type:"uint16",value:e},{type:"float32",value:t},{type:"float32",value:i},{type:"bool",value:!1}]);this.send(n)}sendPlayerQuack(e){const t=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_QUACK,{type:"uint16",value:e}]);this.send(t)}sendPlayerHatId(e,t){const i=HostConnection.createPlayerHatMessage(e,t);this.send(i)}static createPlayerHatMessage(e,t){return HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_HAT_ID,{type:"uint16",value:e},{type:"int8",value:t}])}static parsePlayerHatMessage(e){const[t,i]=HostConnection.decomposeMessage(e,["uint16","int8"]);return{playerId:t,hatId:i}}sendPlayerDeathState(e,t){const i=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_DEATH_STATE,{type:"uint16",value:e},{type:"bool",value:t}]);this.send(i)}sendPlayerPausedState(e,t){const i=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_PAUSED_STATE,{type:"uint16",value:e},{type:"bool",value:t}]);this.send(i)}sendPlayerGameStartedState(e,t){const i=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_GAME_STARTED_STATE,{type:"uint16",value:e},{type:"bool",value:t}]);this.send(i)}static parseDucklingsFollowStateMessage(e){let t=0;const i=new DataView(e),n=i.getUint16(t,!0);t+=2;let r=i.getUint8(t++),s=1&r,o=2&r,a=HostConnection.DucklingFollowType.NONE,l=0;s||(a=i.getUint8(t++)),o||(l=i.getUint16(t,!0),t+=2);const c={type:a,followId:l},h=[];for(;t<e.byteLength;){const e={...c};e.id=i.getUint16(t,!0),t+=2,s&&(e.type=i.getUint8(t++)),o&&(e.followId=i.getUint16(t,!0),t+=2),h.push(e)}return{states:h,ownerPlayerId:n}}static createDucklingsFollowStatesMessages(e,t=0,i={type:HostConnection.DucklingFollowType.NONE,followId:0}){if(e.length<=0)return[];for(let t=0;t<e.length;t++)e[t]={...i,...e[t]};const n=[];n.push({type:"uint8",value:HostConnection.ServerAction.DUCKLINGS_FOLLOW_STATES}),n.push({type:"uint16",value:t});let r=!1,s=!1;const o=e[0].type,a=e[0].followId;for(const t of e)t.type!=o&&(r=!0),t.followId!=a&&(s=!0);let l=0;r&&(l|=1),s&&(l|=2),n.push({type:"uint8",value:l}),r||n.push({type:"uint8",value:o}),s||n.push({type:"uint16",value:a});for(const t of e)n.push({type:"uint16",value:t.id}),r&&n.push({type:"uint8",value:t.type}),s&&n.push({type:"uint16",value:t.followId});return[HostConnection.composeMessage(n)]}sendDucklingsFollowStates(e,t=0,i={type:HostConnection.DucklingFollowType.NONE,followId:0}){for(const e of HostConnection.createDucklingsFollowStatesMessages(...arguments))this.send(e)}static createDetachDucklingsMessage(e,t=0,i=!0){if(e.length<=0)return null;const n=[HostConnection.ServerAction.DETACH_DUCKLINGS,{type:"uint16",value:t},{type:"bool",value:i}];for(const t of e)n.push({type:"uint16",value:t.id}),i&&(n.push({type:"float32",value:t.x}),n.push({type:"float32",value:t.y}));return HostConnection.composeMessage(n)}static parseDetachDucklingsMessage(e){const t=new DataView(e);let i=0;const n=t.getUint16(i,!0);i+=2;const r=t.getUint8(i++)>0,s=[];for(;i<e.byteLength;){const e={};e.id=t.getUint16(i,!0),i+=2,r&&(e.x=t.getFloat32(i,!0),i+=4,e.y=t.getFloat32(i,!0),i+=4),s.push(e)}return{ownerPlayerId:n,ducklings:s}}sendDetachDucklings(e,t=0){const i=HostConnection.createDetachDucklingsMessage(...arguments);i&&this.send(i)}sendDucklingRespawn(e){const t=HostConnection.composeMessage([HostConnection.ServerAction.REQUEST_DUCKLING_RESPAWN,{type:"uint16",value:e}]);this.send(t)}sendClaimPlayer(e){const t=HostConnection.composeMessage([HostConnection.ServerAction.CLAIM_PLAYER,{type:"uint16",value:e}]);this.send(t)}static createPlayerKarmaMessage(e,t){return HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_KARMA,{type:"uint16",value:e},{type:"float32",value:t}])}static parsePlayerKarmaMessage(e){const[t,i]=HostConnection.decomposeMessage(e,["uint16","float32"]);return{playerId:t,karma:i}}sendPlayerKarma(e,t){const i=HostConnection.createPlayerKarmaMessage(...arguments);this.send(i)}sendMyTabActive(e){const t=HostConnection.composeMessage([HostConnection.ServerAction.MY_TAB_ACTIVE,{type:"bool",value:e}]);this.send(t)}static createNestScoreOffsetMessage(e,t,i){return HostConnection.composeMessage([HostConnection.ServerAction.NEST_SCORE_OFFSET,{type:"uint16",value:e},{type:"int32",value:t},{type:"uint16",value:i}])}static parseNestScoreOffsetMessage(e){const[t,i,n]=HostConnection.decomposeMessage(e,["uint16","int32","uint16"]);return{nestId:t,score:i,requestId:n}}sendNestScoreOffset(e,t,i){const n=HostConnection.createNestScoreOffsetMessage(e,t,i);this.send(n)}}class SeaNoise{constructor(){}static getNoiseForPos(e,t){t*=.001;const i=(e=e.clone()).length(),n=1.5*Math.cos(t+.8132*i)+Math.cos(t+.134*i);return e.setLength(1.5*n),e.y=0,e}}class DucklingFollowable{constructor(){this.followingDucklings=new Set}ducklingStartedFollowing(e){this.followingDucklings.add(e)}ducklingStoppedFollowing(e){this.followingDucklings.delete(e)}*traverseChildDucklings(e=!1,t=null){null==t&&(t=[]),e&&(yield this,t.push(this));for(const e of this.followingDucklings)if(!t.includes(e)){yield e,t.push(e);for(const i of e.traverseChildDucklings(!1,t))yield i,t.push(i)}}}class Duckling extends DucklingFollowable{constructor(e){super(),this.id=e,this.obj=new Object3D,this.obj.name="duckling",this.rigidBody=main.physics.createRigidBody(),this.rigidBody.addBeforeLoopCb((e=>this.beforePhysics(e))),this.followingParent=null,this.stateUnknown=!1,this.lastFollowRequestType=0,this.lastFollowRequestId=0,this.goToNestRequestedByThisClient=!1,this.isGoingToNest=!1,this.hasFoundNest=!1,this.isMyGoingToNestDuckling=!1,this.foundNestTime=0,this.didRequestRespawn=!1,this.didStartDespawnAnimation=!1,this.inFrustrum=!1,this.smoothRotation=new Smooth2dRotation,this.animator=new DucklingAnimator,this.currentRotationDirection=new Vector3,this.rotationInterval=new AnimatorInterval({minInterval:200,maxInterval:800,intervalCb:e=>{let t=randRange(0,2*Math.PI);this.currentRotationDirection.set(Math.cos(t),0,Math.sin(t))}}),this.addWaterCircle(),this.loadAsset()}destructor(){this.obj.parent&&this.obj.parent.remove(this.obj),this.obj=null,this.rigidBody.destructor(),this.rigidBody=null,this.stopFollowing(),this.followingParent=null,this.smoothRotation.destructor(),this.smoothRotation=null,this.animator.destructor(),this.animator=null,this.currentRotationDirection=null,this.rotationInterval.destructor(),this.rotationInterval=null,this.removeWaterCircle()}async loadAsset(){let e=await main.assetCache.getItem("duckling.glb");if(!this.obj)return;let t=e.scene.clone();this.obj.add(t),this.animator.setObject(t,this)}loop(e,t){let i=this.inFrustrum=main.cam.frustum.intersectsSphere(new Sphere(this.posNoClone,.5));if(this.obj.visible=i,i&&this.obj.position.copy(this.rigidBody.pos),i&&(this.followingParent?this.smoothRotation.setLookDir(this.rigidBody.velocity):this.smoothRotation.setLookDir(this.currentRotationDirection),this.smoothRotation.loop(e,t),this.obj.quaternion.setFromAxisAngle(new Vector3(0,1,0),this.smoothRotation.angle+.5*Math.PI)),this.isGoingToNest)if(this.hasFoundNest){this.didStartDespawnAnimation||(this.animator.startDespawnAnimation(),this.didStartDespawnAnimation=!0);const t=this.goToNestRequestedByThisClient?1e3:5e3;e-this.foundNestTime>t&&this.requestRespawn()}else{const t=this.followingParent;this.posNoClone.distanceTo(t.posNoClone)<.5&&(this.isMyGoingToNestDuckling&&(main.cornerScore.countMyDucklingReturned(),this.isMyGoingToNestDuckling=!1),t.addDucklingScore(this.id),this.hasFoundNest=!0,this.foundNestTime=e)}this.animator.loop(e,t,i),this.rotationInterval.loop(e,t,i),this.waterCircle&&(this.waterCircle.loop(e,t),e-this.waterCircle.creationTime>1e3&&this.removeWaterCircle())}get pos(){return this.rigidBody.pos.clone()}get posNoClone(){return this.rigidBody.pos}beforePhysics(e){if(this.followingParent&&this.followingParent.obj){let t=this.followingParent.pos.sub(this.pos),i=t.length();i-=.4,i=clamp(i,-.4,.4),t.setLength(i),this.rigidBody.velocity.addScaledVector(t,3e-4*e)}if(this.inFrustrum){let t=SeaNoise.getNoiseForPos(this.rigidBody.pos,main.networkManager.serverTime);this.rigidBody.velocity.addScaledVector(t,4e-6*e)}}setPos(e,t){this.rigidBody.pos.set(e,0,t)}requestFollowPlayer(e){const t=[];for(const i of this.traverseChildDucklings(!0))i.willRequestFollowId(HostConnection.DucklingFollowType.PLAYER,e.id)&&t.push({type:HostConnection.DucklingFollowType.PLAYER,id:i.id,followId:e.id});return main.networkManager.hostConnection.sendDucklingsFollowStates(t,e.id),t.length>0&&e.controllableByMe&&main.sfx.playSound("ducklingFollow",{pos:this.pos}),t}requestRespawn(){this.didRequestRespawn||(this.didRequestRespawn=!0,main.networkManager.hostConnection.sendDucklingRespawn(this.id))}willRequestFollowId(e,t){return(e!=this.lastFollowRequestType||t!=this.lastFollowRequestId)&&(this.lastFollowRequestType=e,this.lastFollowRequestId=t,e==HostConnection.DucklingFollowType.NEST&&(this.goToNestRequestedByThisClient=!0),!0)}setFollowState(e,t){this.lastFollowRequestType=e,this.lastFollowRequestId=t;let i=null;e==HostConnection.DucklingFollowType.PLAYER?i=main.game.getPlayer(t):e==HostConnection.DucklingFollowType.OTHER_DUCKLING?i=main.game.getDuckling(t):e==HostConnection.DucklingFollowType.NEST&&(i=main.game.getNest(t),this.isGoingToNest=!0),this.startFollowingObject(i)}startFollowingObject(e){this.stopFollowing(),this.removeWaterCircle(),this.followingParent=e,this.followingParent&&this.followingParent.ducklingStartedFollowing(this)}stopFollowing(){this.followingParent&&(this.followingParent.ducklingStoppedFollowing(this),this.followingParent=null),this.animator.setIsLost(!0)}get isGoingToNestOrRequested(){return this.isGoingToNest||this.lastFollowRequestType==HostConnection.DucklingFollowType.NEST}markUnknownState(){this.stateUnknown=!0}updateUnknownState(){if(!this.stateUnknown)return;const e=this.getRootFollowingObject(),t=e.pos;let i=[];for(const t of e.followingDucklings)i.push(t);for(;i.length>0;){let e=[];for(const n of i)if(n.stateUnknown){n.setPos(t.x,t.z),n.stateUnknown=!1;for(const t of n.followingDucklings)e.push(t)}i=e}}getRootFollowingObject(){const e=[];let t=this;for(;t instanceof Duckling&&t.followingParent;){const i=t.followingParent;if(e.includes(i))return t;e.push(i),t=i}return t}addWaterCircle(){this.waterCircle||(this.waterCircle=new WaterCircle$1(!0),this.obj.add(this.waterCircle.obj))}removeWaterCircle(){this.waterCircle&&(this.waterCircle.destructor(),this.waterCircle=null)}reset(){this.respawn(0,0)}respawn(e,t){this.setFollowState(HostConnection.DucklingFollowType.NONE,0);const i=new Vector3(e,0,t).distanceTo(this.rigidBody.pos)>.3;this.lastFollowRequestType=0,this.lastFollowRequestId=0,this.isGoingToNest=!1,this.hasFoundNest=!1,this.didRequestRespawn=!1,this.didStartDespawnAnimation=!1,this.stateUnknown=!1,this.isMyGoingToNestDuckling=!1,i&&(this.rigidBody.pos.set(e,0,t),this.addWaterCircle(),this.animator.startSpawnAnimation())}markMyGoingToNestDuckling(){this.isMyGoingToNestDuckling=!0}}class SvgCache{constructor(e,t){this.opts={autoLoad:!0,...t},this.url=e,this.destructed=!1,this.isLoadingSvg=!1,this.onSvgLoadCbs=[],this.createdObjectUrls=[],this.svg=null,this.opts.autoLoad&&this.loadSvg()}destructor(){this.destructed=!0,this.isLoadingSvg=!1,this.onSvgLoadCbs=[],this.svg=null,this.disposeAllObjectUrls()}static get supported(){return!!HTMLCanvasElement.prototype.toBlob}async loadSvg(){if(this.destructed)return null;if(this.svg)return this.svg;if(this.isLoadingSvg)return await this.waitForSvgLoad();this.isLoadingSvg=!0;let e=await cordovaFetch(this.url);const t=await e.text();if(this.destructed)return null;this.svg=t,this.isLoadingSvg=!1;for(const e of this.onSvgLoadCbs)e(this.svg);this.onSvgLoadCbs=[]}async waitForSvgLoad(){return this.destructed?null:this.svg?this.svg:await new Promise((e=>this.onSvgLoadCbs.push(e)))}async getObjectUrlForSize(e){if(e={scaleType:"exact",width:100,height:100,multiplier:1,useDevicePixelRatio:!0,...e},await this.waitForSvgLoad(),this.destructed)return null;let t=new Image;if(t.src="data:image/svg+xml;base64,"+btoa(this.svg),await new Promise(((e,i)=>{t.onload=e,t.onerror=i})),this.destructed)return null;let i=document.createElement("canvas"),n=0,r=0;switch(e.scaleType){case"exact":n=e.width,r=e.height;break;case"multiplier":n=t.width*e.multiplier,r=t.height*e.multiplier}e.useDevicePixelRatio&&(n*=window.devicePixelRatio,r*=window.devicePixelRatio),i.width=n,i.height=r,i.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,i.width,i.height);let s=await new Promise(((e,t)=>{i.toBlob(e)}));if(this.destructed)return null;const o=URL.createObjectURL(s);return this.createdObjectUrls.push(o),o}disposeAllObjectUrls(){for(const e of this.createdObjectUrls)URL.revokeObjectURL(e);this.createdObjectUrls=[]}}class CompassUI{constructor({isNestCompass:e=!1}={}){this.el=document.createElement("div"),this.el.classList.add("compassContainer","hidden"),this.el.classList.toggle("small",!e),document.body.appendChild(this.el),recalculateStyle(this.el),this.isNestCompass=e,this.compassSize=e?230:40,e&&(this.iconEl=document.createElement("div"),this.iconEl.classList.add("compassIcon","imageEl"),this.el.appendChild(this.iconEl)),this.arrowEl=document.createElement("div"),this.arrowEl.classList.add("compassArrow","imageEl"),this.arrowEl.classList.toggle("small",!e),this.el.appendChild(this.arrowEl),this.smoothScreenPos=new Vector2,e&&(this.iconCache=new SvgCache("svg/nestCompassMiddle.svg",{width:867,height:929}),this.arrowCache=new SvgCache("svg/nestCompassArrow.svg",{width:867,height:929})),this.hasValidPosition=!1,this.targetPosition=new Vector3,this.prevScreenPosWasValid=!1,this.updateSvgCache()}destructor(){this.el.parentElement.removeChild(this.el),this.iconCache&&(this.iconCache.destructor(),this.iconCache=null),this.arrowCache&&(this.arrowCache.destructor(),this.arrowCache=null)}updateSvgCache(){SvgCache.supported&&this.isNestCompass&&(this.updateIconCache(),this.updateArrowCache())}async updateIconCache(){let e=await this.iconCache.getObjectUrlForSize({width:100,height:100});this.iconEl.style.backgroundImage=`url(${e})`}async updateArrowCache(){let e=await this.arrowCache.getObjectUrlForSize({width:70,height:70});this.arrowEl.style.backgroundImage=`url(${e})`}setTargetPosition(e){this.hasValidPosition=!!e,this.hasValidPosition?this.targetPosition.copy(e):this.prevScreenPosWasValid=!1}loop(e,t){let i=!1;const n=main.game.getMainPlayer();if(n&&this.hasValidPosition){const e=n.pos;let t=this.targetPosition.clone().sub(e);const r=t.length();t.clampLength(0,1);let s=e.clone().add(t),o=main.renderer.worldToScreenPos(e);o.z=0;let a=main.renderer.worldToScreenPos(s);a.z=0;let l=1,c=1;this.isNestCompass||(c=mapValue(10,40,1,.5,r,!0));let h=0,u=null,d=a.clone().sub(o);if(d.length()>0){let e=new Ray(o,d),t=new Box3(new Vector3(0,0,-1),new Vector3(main.renderer.size.x,main.renderer.size.y,1));u=e.intersectBox(t,new Vector3);let i=new Vector3(0,1,0);h=d.angleTo(i),h*=180/Math.PI,d.clone().cross(i).z>0&&(h*=-1),this.isNestCompass||(h-=90),(main.renderer.size.x<700||main.renderer.size.y<500)&&(l=.7)}if(u){let e=new Vector2(u.x,u.y);e.divide(main.renderer.size),e.multiply(main.renderer.size.subScalar(this.compassSize*l)),this.prevScreenPosWasValid?this.smoothScreenPos.lerp(e,lerpt01(.1)):this.smoothScreenPos.copy(e),this.prevScreenPosWasValid=!0;let t=main.renderer.worldToScreenPos(this.targetPosition);i=Math.min(t.x,t.y,main.renderer.size.x-t.x,main.renderer.size.y-t.y)<10}i&&(this.arrowEl.style.transform=`rotate(${h}deg) scale(${c})`,this.el.style.transform=`translate(${this.smoothScreenPos.x}px, ${this.smoothScreenPos.y}px) scale(${l})`)}this.el.classList.toggle("hidden",!i)}}class Player extends DucklingFollowable{constructor(e,t){super(),this.id=e,this.isBot=t,this.obj=new Object3D,this.obj.name="player",this.hasOwnership=!1,this.input=null,this.boundOnMainPressed=this.onMainPressed.bind(this),this.prevMainPressedTime=0,this.isDespawning=!1,this.despawnTime=0,this.smoothRotation=new Smooth2dRotation,this.currentInputSpeed=0,this.currentLookDirection=new Vector3(-1,0,0),this.animator=new PlayerAnimator,this.animator.startSpawnAnimation(),this.stream=new WaterStream({frontOffset:.34,frontSizeX:.5,frontSizeY:.3,cullRadius:3.5}),this.rigidBody=main.physics.createRigidBody(),this.rigidBody.addBeforeLoopCb((e=>this.beforePhysics(e))),this.inFrustrum=!1,this.hasValidServerPos=!1,this.serverPos=new Vector3,this.lastSentPlayerPos=new Vector3,this.lastNearbyDucklings=[],this.myNests=new Set,this.hasDied=!1,this.destructed=!1,this.compass=null,this.isNearbyNestForHatSwitch=!1,this.onIsNearbyNestForHatSwitchChangeCbs=new Set,this.paused=!t,this.hasValidSmoothNestCirclingThetaOffset=!1,this.smoothNestCirclingThetaOffset=0,this.gameStarted=!1,this.lastKarmaChangeTime=0,this.positiveKarma=1,this.mainAssetScene=null,this.hatAssetScene=null,this.currentSelectedHatName="empty",this.selectedHatId=-1,this.addWaterCircle(),this.loadAsset(),this.loadHatAsset()}destructor(){this.destructed=!0,this.obj.parent&&this.obj.parent.remove(this.obj),this.obj=null,this.removeInput(),this.smoothRotation.destructor(),this.smoothRotation=null,this.animator.destructor(),this.animator=null,this.removeWaterCircle(),this.stream.destructor(),this.stream=null,this.rigidBody.destructor(),this.rigidBody=null,this.compass&&(this.compass.destructor(),this.compass=null),this.stopFollowingAllDucklings()}get controllableByMe(){return this.hasOwnership&&!this.isBot}startDespawn(){this.isDespawning=!0,this.despawnTime=main.now,this.animator.startDespawnAnimation(),this.addWaterCircle();for(const e of this.myNests)e.removeOwner(this);this.myNests=new Set}setOwnership(e){this.destructed||(this.hasOwnership=e,this.removeInput(),this.hasOwnership&&(this.isBot?(this.input=main.input.createBot(),this.input.linkedPlayer=this):(this.input=main.input.mainInput,this.setSelectedHatName(main.hats.lastSelectedHat,!0),main.game.assignMainPlayerInput()),this.input.onMainPressed(this.boundOnMainPressed),this.sendGameStartedStateToServer(),this.sendGamePausedStateToServer()))}removeInput(){this.input&&(this.isBot?(main.input.removeInputPlayer(this.input),this.input.linkedPlayer=null):main.game.assignMainPlayerInput(),this.input.removeOnMainPressed(this.boundOnMainPressed),this.input=null)}async loadAsset(){let e=await main.assetCache.getItem("duck.glb");this.obj&&(this.mainAssetScene=e.scene.clone(),this.obj.add(this.mainAssetScene),this.setAnimator())}async loadHatAsset(){let e=await main.assetCache.getItem("duckHats.glb",{doubleSideMaterial:!0});this.obj&&(this.hatAssetScene=e.scene.clone(),this.obj.add(this.hatAssetScene),this.setAnimator())}setAnimator(){this.mainAssetScene&&this.animator.setObjects(this.mainAssetScene,this.hatAssetScene,this)}getNestCirclingThetaOffset(){const e=this.getMainNest();if(!e)return 0;const t=Array.from(e.owners).filter((e=>e.paused||e==this)).map((e=>e.id)).sort();return t.indexOf(this.id)/t.length*Math.PI*2}getNestCirclingTheta(){return 3e-4*main.networkManager.serverTime+this.smoothNestCirclingThetaOffset}resetSmoothCirclingThetaOffset(){this.hasValidSmoothNestCirclingThetaOffset=!0,this.smoothNestCirclingThetaOffset=this.getNestCirclingThetaOffset()}getLookDirForNestCirclingTheta(e){const t=e+.5*Math.PI;return new Vector3(Math.cos(t),0,Math.sin(t))}loop(e,t){let i=this.inFrustrum=main.cam.frustum.intersectsSphere(new Sphere(this.posNoClone,.5));this.obj.visible=i,i&&this.updatePos(),this.animator.loop(e,t,i);let n=null;if(this.paused&&!this.gameStarted){const e=this.getMainNest();if(e){const t=e.pos;if(e.currentNestStage<9){if(this.hasValidSmoothNestCirclingThetaOffset){const e=this.getNestCirclingThetaOffset();this.smoothNestCirclingThetaOffset=lerp(this.smoothNestCirclingThetaOffset,e,.003)}else this.resetSmoothCirclingThetaOffset();const e=this.getNestCirclingTheta();t.x+=Math.cos(e),t.z+=Math.sin(e),n=this.getLookDirForNestCirclingTheta(e)}this.rigidBody.pos.copy(t)}}if(i&&(n?this.smoothRotation.setLookDir(n):this.smoothRotation.setLookDir(this.rigidBody.velocity),this.smoothRotation.loop(e,t),this.obj.quaternion.setFromAxisAngle(new Vector3(0,1,0),this.smoothRotation.angle+.5*Math.PI)),this.isDespawning||this.stream.setPos(this.posNoClone,this.smoothRotation.angle),this.stream.loop(e,t),this.hasOwnership&&!this.isDespawning){if(!(this.hasDied||main.game.paused&&this.controllableByMe)){const e=[];for(const[t,i]of main.game.ducklings.entries()){if(this.posNoClone.distanceTo(i.posNoClone)<1&&(e.push(t),!i.isGoingToNestOrRequested)){const e=i.getRootFollowingObject();if(e!=this&&!this.lastNearbyDucklings.includes(t)){const t=i.requestFollowPlayer(this);if(e&&e instanceof Player&&this.isBot!=e.isBot){const i=.05*t.length;this.isBot?e.changeKarma(i):this.changeKarma(-i)}}}}this.lastNearbyDucklings=e}let i=new Set(this.traverseChildDucklings());for(const e of i)e.isGoingToNestOrRequested&&i.delete(e);let n=new Set([this]);const r=[];for(;i.size>0;){let e=1/0,t=null,s=null;for(const r of i)for(const i of n){let n=r.posNoClone.distanceTo(i.posNoClone);n<e&&(t=r,s=i,e=n)}t.startFollowingObject(s),n.add(t),i.delete(t);let o=HostConnection.DucklingFollowType.OTHER_DUCKLING,a=0;s instanceof Player?(o=HostConnection.DucklingFollowType.PLAYER,a=s.id):s instanceof Duckling&&(o=HostConnection.DucklingFollowType.OTHER_DUCKLING,a=s.id),t.willRequestFollowId(o,a)&&r.push({id:t.id,type:o,followId:a})}main.networkManager.hostConnection.sendDucklingsFollowStates(r,this.id);for(const e of main.game.boats)e.pointInsideBoat(this.posNoClone)&&this.die();for(const e of this.myNests)if(e.isNearbyNest(this.posNoClone)){const t=[];for(const i of this.traverseChildDucklings()){const n=HostConnection.DucklingFollowType.NEST,r=e.id;i.willRequestFollowId(n,r)&&(t.push({id:i.id,type:n,followId:r}),this.controllableByMe&&i.markMyGoingToNestDuckling())}main.networkManager.hostConnection.sendDucklingsFollowStates(t,this.id),this.controllableByMe&&t.length>0&&(main.sfx.playSound("ducklingsScoreBase"),main.sfx.playSound("duckling/9"));break}if(this.input){let e=!0;if(main.game.paused&&this.controllableByMe&&(e=!1),this.hasDied&&(e=!1),e){let e=this.input.inputDirection2D.clone(),i=e.length(),n=this.input.inputDirection3D;if(n.length()>.1){let t=this.currentLookDirection.angleTo(n);this.currentLookDirection.clone().cross(n).y>0&&(t*=-1);let i=n.angleTo(n);n.clone().cross(n).y>0&&(i*=-1);let r=Smooth2dRotation.getDeltaAngle(t,i);e.y=1,e.x=r}this.currentInputSpeed=clamp01(e.y)+Math.abs(e.x),this.currentInputSpeed*=clamp01(i+n.length()),this.currentLookDirection.applyAxisAngle(new Vector3(0,1,0),clamp(e.x,-1,1)*t*.003)}else this.currentInputSpeed=0;this.controllableByMe&&main.cam.setControllablePlayerMoving(this.currentInputSpeed>0)}if(!this.paused){const t=this.pos,i=t.clone().sub(this.lastSentPlayerPos),n=e-this.input.lastInputTime<800?.1:1;i.length()>n&&(main.networkManager.hostConnection.sendPlayerPosition(this.id,t.x,t.z),this.lastSentPlayerPos.copy(t))}}if(this.controllableByMe){const e=this.getIsNearbyNestForHatSwitch();if(e!=this.isNearbyNestForHatSwitch){this.isNearbyNestForHatSwitch=e;for(const e of this.onIsNearbyNestForHatSwitchChangeCbs)e(this.isNearbyNestForHatSwitch)}}const r=main.game.getMainPlayer();let s=!1;if(r&&r!=this)for(const e of this.myNests)if(r.myNests.has(e)){s=!0;break}let o=null;s&&this.hasValidServerPos&&(o=this.pos,this.createCompass()),this.compass&&(this.compass.setTargetPosition(o),this.compass.loop(e,t)),this.waterCircle&&(this.waterCircle.loop(e,t),e-this.waterCircle.creationTime>1e3&&this.removeWaterCircle()),this.isDespawning&&main.now-this.despawnTime>3e3&&main.game.destroyDespawningPlayer(this)}beforePhysics(e){if(this.hasOwnership){let t=this.currentLookDirection.clone();t.y=0,t.clampLength(0,1);for(const e of main.game.environment.activeSwimLimits){let i=e.pos.distanceTo(this.posNoClone),n=.3*(e.radius-i);if(e.inverse&&(n*=-1),n>0){n=clamp01(n),n=inOut(n);let i=e.pos.clone().sub(this.posNoClone);e.inverse&&i.multiplyScalar(-1);let r=t.clone().dot(i.clone().setLength(1));r=Math.max(0,r);let s=i.clone().setLength(r*n);t.sub(s)}}let i=1;this.controllableByMe&&main.game.speedBoostActive&&(i=1.6),this.rigidBody.velocity.addScaledVector(t,1e-4*e*clamp01(this.currentInputSpeed)*i)}else if(!this.paused){const t=this.serverPos.clone().sub(this.rigidBody.pos);this.rigidBody.velocity.addScaledVector(t,2e-4*e)}if(this.inFrustrum){let t=SeaNoise.getNoiseForPos(this.rigidBody.pos,main.networkManager.serverTime);this.rigidBody.velocity.addScaledVector(t,4e-6*e)}}get pos(){return this.rigidBody.pos.clone()}get posNoClone(){return this.rigidBody.pos}get forward(){const e=Math.cos(this.smoothRotation.angle),t=-Math.sin(this.smoothRotation.angle);return new Vector3(e,0,t)}updatePos(){this.obj.position.copy(this.rigidBody.pos)}stopFollowingAllDucklings(){for(const e of this.followingDucklings)e.stopFollowing()}setServerPos(e,t,i){if(this.serverPos.set(e,0,t),(this.serverPos.distanceTo(this.rigidBody.pos)>5||i)&&this.rigidBody.pos.set(e,0,t),!this.hasValidServerPos){main.game.getMainPlayer()==this&&main.cam.doFastCut()}this.hasValidServerPos=!0}forceNetworkPosition(){if(!this.hasOwnership){this.rigidBody.pos.copy(this.serverPos);for(const e of this.traverseChildDucklings())e.setPos(this.pos.x,this.pos.z)}}addOwnedNest(e){this.myNests.add(e)}removeOwnedNest(e){this.myNests.delete(e)}getMainNest(){let e=null,t=1/0;for(const i of this.myNests)i.score<t&&(t=i.score,e=i);return e}onMainPressed(){let e=main.now;e-this.prevMainPressedTime>300&&(this.prevMainPressedTime=e,this.quack()),this.isNearbyNestForHatSwitch&&main.mainMenu.lastVisibleMsAgo>1e3&&this.cycleSelectedHat()}getIsNearbyNestForHatSwitch(){for(const e of this.myNests)if(e.pos.distanceTo(this.posNoClone)<3)return!0;return!1}onIsNearbyNestForHatSwitchChange(e){this.onIsNearbyNestForHatSwitchChangeCbs.add(e)}quack(e=!0){this.animator.quackInterval.fireNow(),this.controllableByMe&&e&&main.networkManager.hostConnection.sendPlayerQuack(this.id)}cycleSelectedHat(e=!0){const t=main.hats.getNextHat(this.currentSelectedHatName);t!=this.currentSelectedHatName&&(main.hats.lastSelectedHat=t,this.setSelectedHatName(t,e),main.cam.hatChanged(),main.hats.cycledHatOnce())}setSelectedHatId(e,t=!0){const i=main.hats.hatIdToName(e);this.setSelectedHatName(i,t)}setSelectedHatName(e,t=!0){if(this.currentSelectedHatName=e,this.selectedHatId=main.hats.hatNameToId(e),this.animator.setSelectedHatName(e),this.controllableByMe&&t){const t=main.hats.hatNameToId(e);main.networkManager.hostConnection.sendPlayerHatId(this.id,t)}}createCompass(){this.compass||this.destructed||(this.compass=new CompassUI)}addWaterCircle(){this.waterCircle||(this.waterCircle=new WaterCircle$1(!0),this.waterCircle.obj.scale.setScalar(2),this.obj.add(this.waterCircle.obj))}removeWaterCircle(){this.waterCircle&&(this.waterCircle.destructor(),this.waterCircle=null)}die(){if(!this.hasDied&&(this.hasDied=!0,main.sfx.playSound("duckDeath",{pos:this.posNoClone}),this.playDeathFx(),this.animator.startDespawnAnimation(2),this.addWaterCircle(),this.hasOwnership)){this.input.resetInputs();const e=[];for(const t of this.traverseChildDucklings())e.push({id:t.id,x:t.pos.x,y:t.pos.z});main.networkManager.hostConnection.sendDetachDucklings(e,this.id),this.isBot?window.setTimeout((e=>{this.respawn()}),4e3):main.game.myPlayerDied(this.id),main.networkManager.hostConnection.sendPlayerDeathState(this.id,!0)}}playDeathFx(){let e=main.particles.createSystem({particleAssetPath:"feather.glb",particleCount:10,duration:2,pickRandomChild:!0,spawnerShape:{type:"box",size:.1},startVelocity:{x:.3,minY:0,maxY:.5,z:.3},angularVelocity:.03,drag:.3,particleSize:.1,gravity:-.003});e&&e.obj.position.copy(this.posNoClone)}respawn(){if(!this.hasDied)return;this.hasDied=!1,this.animator.startSpawnAnimation(),this.addWaterCircle(),this.hasValidSmoothNestCirclingThetaOffset=!1,this.resetSmoothCirclingThetaOffset();const e=this.getNestCirclingTheta();if(this.smoothRotation.setLookDir(this.getLookDirForNestCirclingTheta(e)),this.smoothRotation.resetToCurrentTarget(),this.stream.setPos(this.posNoClone,this.smoothRotation.angle),this.hasOwnership){main.networkManager.hostConnection.sendPlayerDeathState(this.id,!1);const e=this.getMainNest();this.serverPos.copy(e.pos),this.rigidBody.pos.copy(e.pos)}}setDeathStateFromServer(e){e?this.die():this.respawn()}setPausedStateFromServer(e){this.isBot||(this.paused=e)}setGameStartedStateFromServer(e){this.isBot||(this.gameStarted=e)}sendGameStartedStateToServer(){const e=main.game.gameStarted;main.networkManager.hostConnection.sendPlayerGameStartedState(this.id,e),this.setGameStartedStateFromServer(e)}sendGamePausedStateToServer(){const e=main.game.myPlayerPaused;main.networkManager.hostConnection.sendPlayerPausedState(this.id,e),this.setPausedStateFromServer(e),main.game.updateSingleplayerPausedState()}setKarmaFromServer(e){this.positiveKarma=e}changeKarma(e){main.now-this.lastKarmaChangeTime<3e3?e=0:this.lastKarmaChangeTime=main.now;const t=clamp(this.positiveKarma+e,0,3);t!=this.positiveKarma&&(main.networkManager.hostConnection.sendPlayerKarma(this.id,t),this.positiveKarma=t)}getKarmaDucklingDistMultiplier(){return.5/(1-clamp01(this.positiveKarma))}}class Timeout{constructor(e,t,i){this.cb=e,this.id=-1,this.ms=t,this.isDestructed=!1,i&&this.start()}destructor(){this.stop(),this.isDestructed=!0,this.cb=null}get isRunning(){return-1!=this.id}stop(){if(!this.isDestructed)return this.id>=0&&(window.clearTimeout(this.id),this.id=-1,!0)}start(){this.isDestructed||(this.stop(),this.id=window.setTimeout(this.execute.bind(this),this.ms))}execute(){this.id=-1,this.cb&&this.cb()}static promise(e){return new Promise(((t,i)=>{window.setTimeout((()=>{t()}),e)}))}}class Ducklet{constructor(){this.obj=new Object3D,this.obj.name="ducklet",this.assetStates=[],this.isPlayingHappyAnimation=!1,this.playingHappyStartTime=0,this.loadAssets()}async loadAssets(){await this.loadAssetState("nest/ducketIdle.glb",{loop:!0}),await this.loadAssetState("nest/ducketHappy.glb"),(await this.loadAssetState("nest/heartsFX.glb")).obj.scale.setScalar(.1),this.setVisibleStates([0])}async loadAssetState(e,t={}){let i=await main.assetCache.getItem(e),n=i.scene.clone();n.visible=!1,this.obj.add(n);let r={asset:i,obj:n,animationMixer:new AnimationMixer(n),opts:t,opts:t};return this.assetStates.push(r),r}loop(e,t){for(const e of this.assetStates)e&&e.obj.visible&&e.animationMixer.update(t/1e3);this.isPlayingHappyAnimation&&main.now-this.playingHappyStartTime>5e3&&this.setVisibleStates([0])}setVisibleStates(e){for(let t=0;t<this.assetStates.length;t++){let i=this.assetStates[t],n=e.includes(t);if(i.obj.visible!=n&&(i.obj.visible=n,n))for(const e of i.asset.animations){let t=i.animationMixer.clipAction(e);t.reset(),i.opts.loop?t.setLoop(2201):t.setLoop(2200,1),t.play()}}}async playHappyAnimation(){this.isPlayingHappyAnimation=!0,this.playingHappyStartTime=main.now,this.setVisibleStates([1]),await Timeout.promise(1e3),this.setVisibleStates([1,2])}}class Nest extends DucklingFollowable{constructor(e){super(),this.id=e,this.obj=new Object3D,this.obj.name="nest",this.nestAssetObj=new Object3D,this.nestAssetObj.name="nestAsset",this.nestAssetObj.position.y=.01,this.obj.add(this.nestAssetObj),this.owners=new Set,this.wigglers=[],this.waterCircle=new WaterCircle$1,this.waterCircle.obj.scale.setScalar(4),this.obj.add(this.waterCircle.obj),this.nestAnimationMixers=[],this.scoreServer=0,this.scoreClientDucklingids=new Set,this.currentNestStage=0,this.hasValidServerScore=!1,this.scoreClientOffsets=new Map,this.lastAdjustScoreRequestId=1,this.ducklet=new Ducklet,this.ducklet.obj.rotation.y=.5*Math.PI,this.obj.add(this.ducklet.obj),this.smokeFXAsset=null,this.smokeFX=null,this.smokeFXMixer=null,this.isSettingNestStage=!1,this.lastQueuedStage=-1,this.nestStageQueue=[],this.swimLimit=main.game.environment.addStaticSwimLimit({pos:this.pos,radius:3}),this.reLoadAsset(),this.loadSmokeFx()}destructor(){main.game.environment.removeStaticSwimLimit(this.swimLimit),this.obj.parent.remove(this.obj);for(const e of this.owners)e.removeOwnedNest(this)}static get maxNestStage(){return 32}static cacheNestAssets(){let e=[];for(let t=0;t<=this.maxNestStage;t++)e.push("lazyAssets/nestStages/"+(t+1)+".glb");main.serviceWorker.storeCacheUrls(e)}addDucklingScore(e){this.scoreClientDucklingids.add(e),this.updateNestStage(),main.cornerScore.updateScoreFromNests()}updateServerScoreDucklings(e,t){for(const e of t)this.scoreClientDucklingids.delete(e);this.updateServerScore(e)}updateServerScoreClientOffset(e,t){this.scoreClientOffsets.delete(t),this.updateServerScore(e)}updateServerScore(e){const t=this.hasValidServerScore;this.hasValidServerScore=!0,this.scoreServer=e,main.cornerScore.updateScoreFromNests(t),this.updateNestStage(t)}get score(){let e=0;for(const t of this.scoreClientOffsets.values())e+=t;return this.scoreServer+this.scoreClientDucklingids.size+e}requestAdjustScore(e){this.lastAdjustScoreRequestId++,this.lastAdjustScoreRequestId>=Math.pow(2,16)&&(this.lastAdjustScoreRequestId=1),this.scoreClientOffsets.set(this.lastAdjustScoreRequestId,e),main.networkManager.hostConnection.sendNestScoreOffset(this.id,e,this.lastAdjustScoreRequestId),this.updateNestStage(e>0),main.cornerScore.updateScoreFromNests()}requestResetScore(){this.requestAdjustScore(-this.score)}updateNestStage(e=!0){const t=main.cornerScore.nestStageForDucklingCount(this.score);this.setNestStageQueue(t,e)&&this.controllableByMyClientPlayer&&main.cornerScore.resetMyDucklingReturned()}setNestStageQueue(e,t=!0){return e!=this.lastQueuedStage&&(this.lastQueuedStage=e,this.nestStageQueue.push({stage:e,playAnimation:t}),this.emptyNestStageQueue(),!0)}async setNestStageImmediate(e,t=!0){this.isSettingNestStage=!0,(e=clamp(e,0,Nest.maxNestStage))!=this.currentNestStage&&(t&&(this.controllableByMyClientPlayer&&main.cam.tempFocusOnNest(this),await Timeout.promise(1500),main.sfx.playSound("upgradeNestSound",{pos:this.pos}),main.sfx.playSound("hearts",{pos:this.pos}),this.controllableByMyClientPlayer&&main.ads.adLad.customRequest("happyTime"),CORDOVA&&e>=7&&"true"!=lsGet("didRequestReview")&&(lsSet("didRequestReview",!0),this.requestReviewWithDelay(2e3)),this.smokeFX&&this.smokeFX.scale.setScalar(.1*e+.5),this.playSmokeFX(),this.ducklet.playHappyAnimation()),this.currentNestStage=e,await this.reLoadAsset()),this.isSettingNestStage=!1,await this.emptyNestStageQueue()}async requestReviewWithDelay(e=1e3){await Timeout.promise(e),main.game.setGamePaused(!0),window.cordova.plugins.AppStoreReviewPrompt.prompt(),await main.input.mainInput.waitForAnyInput(),main.game.setGamePaused(!1)}async emptyNestStageQueue(){if(this.isSettingNestStage)return;let e=this.nestStageQueue.shift();e&&await this.setNestStageImmediate(e.stage,e.playAnimation)}async reLoadAsset(){let e=this.currentNestStage,t=[],i=this.currentNestStage+1;for(let e=Math.min(21,i);e<=i;e++)t.push(await main.assetCache.getItem("lazyAssets/nestStages/"+e+".glb",{assetPackageName:null}));if(this.currentNestStage!=e)return;for(this.wigglers=[],this.nestAnimationMixers=[];this.nestAssetObj.children.length;){let e=this.nestAssetObj.children[0];this.nestAssetObj.remove(e)}let n=null;for(const e of t){let t=e.scene;t=t.clone(),t.traverse((e=>{if(e.morphTargetDictionary)for(const t of["move","morphTarget0"])if(t in e.morphTargetDictionary){let i=new MorphTargetWiggler(e,t);i.minValue=-3,i.maxValue=3,i.speed=5,this.wigglers.push(i)}e.name.startsWith("duckPos")&&(n=e)}));let i=new AnimationMixer(t);this.nestAnimationMixers.push(i);for(const t of e.animations){i.clipAction(t).play()}this.nestAssetObj.add(t)}let r=this.obj.position.clone();n&&(this.obj.updateMatrixWorld(),n.getWorldPosition(r)),this.obj.remove(this.ducklet.obj),this.ducklet.obj.position.copy(r),this.obj.attach(this.ducklet.obj)}async loadSmokeFx(){this.smokeFXAsset=await main.assetCache.getItem("nest/smokeFX.glb"),this.smokeFX=this.smokeFXAsset.scene.clone(),this.smokeFX.visible=!1,this.obj.add(this.smokeFX),this.smokeFXMixer=new AnimationMixer(this.smokeFX)}playSmokeFX(){if(this.smokeFXAsset&&this.smokeFXMixer){for(const e of this.smokeFXAsset.animations){let t=this.smokeFXMixer.clipAction(e);t.reset(),t.setLoop(2200,1),t.play()}this.smokeFX.visible=!0}}loop(e,t){for(const i of this.wigglers)i.loop(e,t);if(this.waterCircle.loop(e,t),this.ducklet.loop(e,t),this.smokeFXMixer&&(this.smokeFXMixer.update(t/1e3),this.smokeFX.visible)){let e=!1;for(const t of this.smokeFXAsset.animations){if(this.smokeFXMixer.clipAction(t).enabled){e=!0;break}}e||(this.smokeFX.visible=!1)}for(const e of this.nestAnimationMixers)e.update(t/1e3)}setPos(e,t){this.obj.position.set(e,0,t),this.swimLimit.pos.copy(this.obj.position)}get pos(){return this.obj.position.clone()}get posNoClone(){return this.obj.position}addOwner(e){this.owners.add(e)}removeOwner(e){this.owners.delete(e)}get controllableByMyClientPlayer(){for(const e of this.owners)if(e.controllableByMe)return!0;return!1}isNearbyNest(e){return this.obj.position.distanceTo(e)<mapValue(0,5,2,5,this.currentNestStage,!0)}}class GenericButton{constructor(e){if((e={text:"",icon:"",addIconInContainer:!1,iconContainerWidth:0,onClick:null,classes:[],addShine:!0,shineType:"shine1",fontSize:null,textStroke:null,textShadow:null,padding:null,ariaLabel:null,makeNiceButton:!0,makeHoverScaleButton:!0,hoverScaleAmount:null,el:null,...e}).el?this.el=e.el:this.el=document.createElement("div"),this.el.setAttribute("role","button"),e.ariaLabel&&(this.el.ariaLabel=e.ariaLabel),this.el.classList.toggle("niceButton",e.makeNiceButton),this.el.classList.toggle("hoverScaleButton",e.makeHoverScaleButton),this.el.classList.toggle("customHoverScale",e.hoverScaleAmount),this.el.classList.add("preventFullScreenDblClick",...e.classes),this.setText(e.text),this.el.addEventListener("click",(t=>{this.disabled||e.onClick&&e.onClick()})),this.disabled=!1,this.visible=!0,e.fontSize&&(this.el.style.fontSize=e.fontSize+"pt"),e.textStroke&&(this.el.style.webkitTextStroke=e.textStroke+"px var(--not-black)"),e.textShadow&&(this.el.style.textShadow=`0px ${e.textShadow}px var(--not-black)`),e.padding&&(this.el.style.padding=e.padding+"px"),e.icon&&(e.addIconInContainer?(this.iconContainerEl=document.createElement("div"),this.iconContainerEl.classList.add("niceButtonIconContainer"),this.iconContainerEl.style.width=e.iconContainerWidth+"px",this.el.appendChild(this.iconContainerEl),this.iconEl=document.createElement("div"),this.iconEl.style.backgroundImage=`url(${e.icon})`,this.iconEl.classList.add("niceButtonIcon","imageEl"),this.iconContainerEl.appendChild(this.iconEl)):(this.iconEl=document.createElement("div"),this.iconEl.classList.add("niceButtonIcon","imageEl"),this.iconEl.style.backgroundImage=`url(${e.icon})`,this.el.appendChild(this.iconEl))),e.hoverScaleAmount&&(this.el.addEventListener("pointerenter",(t=>{this.el.style.transform=`scale(${e.hoverScaleAmount})`})),this.el.addEventListener("pointerleave",(e=>{this.el.style.transform=null}))),e.addShine){let t=document.createElement("div");t.classList.add("niceButtonShine",e.shineType),this.el.appendChild(t);let i=document.createElement("div");i.classList.add("niceButtonShine",e.shineType,"blurred"),this.el.appendChild(i)}}setVisibility(e){this.visible=e,this.el.style.display=e?null:"none"}click(e=!1){e&&!this.visible||this.el.click()}setAriaToggledState(e){this.el.ariaPressed=e}setText(e){this.el.textContent=e}setDisabled(e){this.disabled=e,this.el.classList.toggle("disabled",e)}}class ResizeHandler{constructor(){}static init(){this.listeners||(this.listeners=[]),window.addEventListener("resize",(e=>{this.testResized()})),this.loop()}static loop(){this.testResized(),window.requestAnimationFrame((e=>{this.loop()}))}static testResized(){let e=window.innerWidth,t=window.innerHeight;if(e!=this.prevW||t!=this.prevH){this.prevW=e,this.prevH=t;for(const e of this.listeners)e()}}static addListener(e){this.listeners||(this.listeners=[]),this.listeners.push(e)}static removeListener(e){this.listeners||(this.listeners=[]);let t=this.listeners.indexOf(e);t>=0&&this.listeners.splice(t,1)}}class GameOverScreen{constructor(e){this.el=document.createElement("div"),this.el.classList.add("gameOverScreen","menuScreen","fullScreen"),document.body.appendChild(this.el),this.contentEl=document.createElement("div"),this.contentEl.classList.add("gameOverScreenContent"),this.el.appendChild(this.contentEl),this.adContentElSide=document.createElement("div"),this.adContentElSide.classList.add("gameOverScreenAdContentSide"),this.el.appendChild(this.adContentElSide);let t=document.createElement("div");t.textContent="Game Over",t.classList.add("gameOverTitle","niceFont"),this.contentEl.appendChild(t);let i=document.createElement("div");const n=main.cornerScore.myReturnedDucklingsThisStage;let r="0 ducklings saved.";if(n>0){const t=n>1?"ducklings":"duckling";r=e?`You will lose ${n} ${t}.`:`You lost ${n} ${t}.`}i.textContent=r,i.classList.add("menuSmallText","niceFont"),this.contentEl.appendChild(i),this.adContentEl=document.createElement("div"),this.contentEl.appendChild(this.adContentEl),CORDOVA||(GameOverScreen.adEl.parentElement&&GameOverScreen.adEl.parentElement.removeChild(GameOverScreen.adEl),this.adContentEl.appendChild(GameOverScreen.adEl)),this.buttonsContainer=document.createElement("div"),this.buttonsContainer.classList.add("gameOverButtons"),this.contentEl.appendChild(this.buttonsContainer),this.doNoThanksTimeout="crazygames"==main.ads.adLad.activePlugin,this.nothanksText=e?"No thanks":"Back",this.continueButton=null,e&&(this.continueButton=new GenericButton({text:"Continue",icon:"svg/rewardedAd.svg",addIconInContainer:!0,iconContainerWidth:50,onClick:e=>{this.onContinueClick()}}),this.buttonsContainer.appendChild(this.continueButton.el),this.doNoThanksTimeout&&this.continueButton.setDisabled(!0)),this.noThanksButton=new GenericButton({text:this.nothanksText,onClick:e=>{this.fireContinueResultCbs(null)},classes:e?["secondary"]:[],addShine:!1}),this.doNoThanksTimeout&&this.noThanksButton.setDisabled(!0),this.buttonsContainer.appendChild(this.noThanksButton.el),this.onContinueResultCbs=[],this.hiding=!1,this.destructed=!1,this.setVisibility(!1),recalculateStyle(this.el),this.setVisibility(!0),this.onMainPressed=e=>{this.noThanksButton.click()},main.input.mainInput.onMainPressed(this.onMainPressed),this.updateBannerLocation(),this.boundUpdateBannerLocation=this.updateBannerLocation.bind(this),ResizeHandler.addListener(this.boundUpdateBannerLocation)}static get adEl(){return this._adEl||(this._adEl=document.createElement("div"),this._adEl.id="gameOverBannerAd",this._adEl.classList.add("adBanner")),this._adEl}destructor(){this.destructed=!0,this.el.parentElement&&this.el.parentElement.removeChild(this.el),this.el=null,this.onContinueResultCbs=[],main.input.mainInput.removeOnMainPressed(this.onMainPressed),ResizeHandler.removeListener(this.boundUpdateBannerLocation)}static testBannerAdVisible(){return!CORDOVA&&this.adEl.clientHeight>0}updateBannerLocation(){window.innerHeight<=720?GameOverScreen.adEl.parentElement==this.adContentEl&&(this.adContentEl.removeChild(GameOverScreen.adEl),this.adContentElSide.appendChild(GameOverScreen.adEl)):GameOverScreen.adEl.parentElement==this.adContentElSide&&(this.adContentElSide.removeChild(GameOverScreen.adEl),this.adContentEl.appendChild(GameOverScreen.adEl))}waitForContinueResult(){return new Promise((e=>this.onContinueResultCbs.push(e)))}fireContinueResultCbs(e){if(!this.hiding){for(const t of this.onContinueResultCbs)t(e);this.hide()}}async onContinueClick(){const e=await main.ads.adLad.showRewardedAd();this.fireContinueResultCbs(e)}async performNoThanksCountdown(){if(this.doNoThanksTimeout)for(let e=5;e>=0;e--)0==e?(this.noThanksButton.setText(this.nothanksText),this.noThanksButton.setDisabled(!1),this.continueButton&&this.continueButton.setDisabled(!1)):(this.noThanksButton.setText(`${this.nothanksText} (${e})`),await Timeout.promise(1e3))}setVisibility(e){this.el.classList.toggle("hidden",!e)}async hide(){this.hiding=!0,this.setVisibility(!1),await Timeout.promise(500),this.destructor()}}class TapCircle{constructor(){this.obj=new Object3D,this.obj.name="tapCircle",this.canBeDestructed=!1,this.animationStartTime=0,this.circleObj=null,this.loadAsset()}destructor(){this.obj.parent&&this.obj.parent.remove(this.obj),this.obj=null,this.circleObj=null}async loadAsset(){let e=await main.assetCache.getItem("waterCircle.glb");this.obj&&(this.circleObj=e.scene.children[0].clone(),this.obj.add(this.circleObj),this.animationStartTime=main.now)}loop(e,t){let i=e-this.animationStartTime;this.circleObj&&(this.circleObj.scale.setScalar(.001*i),this.circleObj.morphTargetInfluences[0]=clamp01(.0015*i)),this.canBeDestructed=i>1e3}}class RewardedUpgradeButton{constructor({icon:e,onClick:t}){this.el=document.createElement("div"),this.el.classList.add("rewarded-upgrade-container"),this.playButton=new GenericButton({icon:e,hoverScaleAmount:1.05,onClick:e=>{t()}}),this.el.appendChild(this.playButton.el)}destructor(){this.el.remove()}}const REWARD_INTERVAL=12e4,REWARD_AVAILABILITY_DURATION=3e4;class RewardManager{constructor(e){this.rewardConfigs=e,this.nextRewardTimer=0,this.currentButton=null,this.currentConfig=null,this.timer=0}loop(e,t){this.currentConfig&&this.currentConfig.available&&!this.currentConfig.available()&&(this.currentConfig=null),this.currentConfig||this.pickRandomConfig();const i=main.ads.adLad;this.timer+=t,!this.currentButton&&i.canShowRewardedAd?this.timer>12e4&&this.currentConfig&&(this.timer=0,this.currentButton=new RewardedUpgradeButton({icon:this.currentConfig.icon,onClick:()=>{const e=this.currentConfig;(async()=>{const t=await i.showRewardedAd();e&&t.didShowAd&&(e.receiveReward(),this.pickRandomConfig())})()}}),document.body.appendChild(this.currentButton.el)):this.timer>3e4&&this.pickRandomConfig()}pickRandomConfig(){this.currentButton&&(this.currentButton.destructor(),this.currentButton=null,this.timer=0);const e=this.rewardConfigs.filter((e=>!e.available||e.available())),t=randFromArray(e);this.currentConfig=t||null}}class Game{constructor(){this.scene=new Scene,DebugLine.setCurrentScene(this.scene),this.players=new Map,this.despawningPlayers=new Set,this.isRequestingPlayerSpawn=!1,this.ducklings=[],this.nests=[],this.tapCircles=[],this.karma=1,this.lastKarmaChangeTime=0,this.boatsT=0,this.currentBoatsSpeed=0,this.smoothBoatsT=0,this.lastReceivedServerBoatsTime=0,this.nearbyNestForHatSwitch=!1,this.nestCompass=new CompassUI({isNestCompass:!0}),this.gameOverScreen=null;let e={assetPath:"boats/sailBoat.glb",travelRadius:40,travelSpeed:.5,sfxName:"boats/sailBoat",assetRotation:.5,hitBoxX:3,hitBoxY:7,hitBoxXOffset:2,streamOptions:{frontOffset:8,frontSizeX:7,frontSizeY:7,streamDistance:3,streamSizeX:10,streamSizeY:15,cullRadius:15},sfxName:"boats/sailBoat"},t={assetPath:"boats/rowingBoat.glb",travelRadius:48,travelSpeed:-.4,sfxName:"boats/rowBoat",assetRotation:1,hitBoxX:1.8,hitBoxY:3,hitBoxXOffset:2,streamRotation:1,streamOptions:{frontSizeX:3,frontSizeY:4,frontOffset:7,streamSizeX:2.5,streamSizeY:6,streamDistance:2,cullRadius:10}};this.boats=[new Boat(e),new Boat({...e,travelOffset:1}),new Boat(t),new Boat({...t,travelOffset:1})],this.worldBorderRadius=70,this.paused=!0,this.gameStarted=!1,this.myPlayerPaused=!0,this.allControllablePlayersPaused=!0,this.environment=new EnvironmentGenerator(this.scene),this.ambientNoise=new AmbientNoiseManager,this.themeSong=null,this.musicMuted=!1,this.lastPingTime=0,this.speedBoostActive=!1,this.boostTimer=0,this.rewardManager=new RewardManager([{icon:"svg/rewardedBoost.svg",receiveReward:()=>{this.speedBoostActive=!0,this.boostTimer=6e4},available:()=>!this.speedBoostActive}]),this.documentHidden=!1,this.documentHideTime=0,document.addEventListener("visibilitychange",(e=>{if(document.hidden!=this.documentHidden)if(this.documentHidden=document.hidden,document.hidden)this.documentHideTime=Date.now();else{Date.now()-this.documentHideTime>2e3&&this.forceNetworkPositions()}})),window.killMe=e=>{this.getMainPlayer().die()}}init(){this.environment.init(),this.ambientNoise.init();for(const e of this.boats)e.init(),this.scene.add(e.obj);this.loadThemeSong()}async loadThemeSong(){this.themeSong=await main.sfx.playSound("themeSong",{overrideMute:!0}),this.setMutedMusic(this.musicMuted)}loop(e,t){for(const[i,n]of this.players)n.loop(e,t);for(const i of this.despawningPlayers)i.loop(e,t);for(let i=this.ducklings.length-1;i>=0;i--){this.ducklings[i].loop(e,t)}for(const i of this.nests)i.loop(e,t);this.environment.loop(e,t);let i=null;const n=main.game.getMainPlayer();if(n){const e=n.getMainNest();e&&(i=e.pos)}this.nestCompass.setTargetPosition(i),this.nestCompass.loop(e,t),this.boatsT+=this.currentBoatsSpeed*main.unclampedDt;const r=mapValue(0,6e3,.1,1,e-this.lastReceivedServerBoatsTime,!0);Math.abs(this.smoothBoatsT-this.boatsT)<1e3?this.smoothBoatsT=lerp(this.smoothBoatsT,this.boatsT,r):this.smoothBoatsT=this.boatsT;for(const i of this.boats)i.updatePosition(this.smoothBoatsT),i.loop(e,t);for(let i=this.tapCircles.length-1;i>=0;i--){let n=this.tapCircles[i];n.loop(e,t),n.canBeDestructed&&(n.destructor(),this.tapCircles.splice(i,1))}this.ambientNoise.loop(e,t),this.rewardManager.loop(e,t),this.speedBoostActive&&(this.boostTimer-=t,main.cornerScore.setBoostTimer(Math.round(this.boostTimer/1e3)),this.boostTimer<0&&(this.speedBoostActive=!1)),e-this.lastPingTime>5e3&&(main.networkManager.doHostPing(),main.networkManager.sendAliveRequests(),this.lastPingTime=e)}resetGame(){for(const e of this.players.keys())this.despawnPlayer(e);for(const e of this.ducklings)e.reset()}newGameStarted(){this.requestPlayerSpawn()}requestPlayerSpawn(){this.isRequestingPlayerSpawn=!0,main.networkManager.hostConnection.sendRequestPlayerSpawn()}onHostConnectionChanged(){this.claimMyPlayers(),this.isRequestingPlayerSpawn&&this.requestPlayerSpawn()}setGameStarted(e){if(e!=this.gameStarted){this.gameStarted=e,main.pauseButton.updateVisibility();for(const e of this.getMyControllablePlayers())e.sendGameStartedStateToServer()}}setGamePaused(e){this.paused=e,e?main.ads.adLad.gameplayStop():main.ads.adLad.gameplayStart(),this.updateMyPlayerPaused()}newPlayer(e,t){if(this.players.has(e))return;let i=new Player(e,t);i.onIsNearbyNestForHatSwitchChange((e=>{this.updateNearbyNestForHatSwitch()})),this.players.set(e,i),this.scene.add(i.obj)}setPlayerOwnership(e,t){const i=this.players.get(e);i&&(i.setOwnership(t),t&&!i.isBot&&(this.isRequestingPlayerSpawn=!1)),main.cornerScore.updateScoreFromNests(!1)}assignMainPlayerInput(){const e=this.getMyControllablePlayers().next().value||null;main.input.mainInput.linkedPlayer=e}claimMyPlayers(){for(const e of this.getMyOwnedPlayers())main.networkManager.hostConnection.sendClaimPlayer(e.id)}despawnPlayer(e){const t=this.players.get(e);t.startDespawn(),this.players.delete(e),this.despawningPlayers.add(t)}destroyDespawningPlayer(e){this.despawningPlayers.delete(e),e.destructor()}getMainPlayer(){for(const e of main.game.getMyControllablePlayers())return e;return null}*getMyOwnedPlayers(){for(const e of this.players.values())e.hasOwnership&&(yield e)}*getMyControllablePlayers(){for(const e of this.players.values())e.controllableByMe&&(yield e)}getPlayer(e){return this.players.get(e)}getDuckling(e){return this.ducklings[e]}getNest(e){return this.nests[e]}setPlayerServerPosition(e,t,i,n){const r=this.players.get(e);r&&r.setServerPos(t,i,n)}playerQuackFromServer(e){const t=this.players.get(e);t&&t.quack(!1)}playerDeathStateFromServer(e,t){const i=this.players.get(e);i&&i.setDeathStateFromServer(t)}playerPausedStateFromServer(e,t){const i=this.players.get(e);i&&i.setPausedStateFromServer(t),this.updateSingleplayerPausedState()}playerGameStartedStateFromServer(e,t){const i=this.players.get(e);i&&i.setGameStartedStateFromServer(t)}setPlayerKarma(e,t){const i=this.players.get(e);i&&i.setKarmaFromServer(t)}setPlayerHatId(e,t){const i=this.players.get(e);i&&i.setSelectedHatId(t,!1)}setNestOwnership(e,t){const i=this.nests[e],n=this.players.get(t);n.addOwnedNest(i),i.addOwner(n),main.cornerScore.updateScoreFromNests(!1)}updateNestServerScoreDucklings(e,t,i){this.nests[e].updateServerScoreDucklings(t,i)}updateNestServerScoreClientOffset(e,t,i){this.nests[e].updateServerScoreClientOffset(t,i)}async myPlayerDied(e){this.setGamePaused(!0),this.setGameStarted(!1),this.updateMyPlayerPaused();let t=!0;main.cornerScore.myReturnedDucklingsThisStage<=0&&(t=!1),main.ads.adLad.canShowRewardedAd||(t=!1),this.gameOverScreen=new GameOverScreen(t);let i=!1;if(!t){await Timeout.promise(500);(await main.ads.adLad.showFullScreenAd()).didShowAd&&(i=!0)}this.gameOverScreen.performNoThanksCountdown(),main.ads.updateBannerVisibilities();let n=await this.gameOverScreen.waitForContinueResult();main.ads.updateBannerVisibilities(),n&&n.didShowAd?(this.respawnMyDeadPlayers(),this.setGameStarted(!0),this.setGamePaused(!1)):(!n||n.errorReason,this.respawnMyDeadPlayers(),main.mainMenu.setVisibility(!0),main.ads.updateBannerVisibilities(),this.removeDucklingsFromMainNest(main.cornerScore.myReturnedDucklingsThisStage),main.cornerScore.resetMyDucklingReturned())}get gameOverScreenVisible(){return!!this.gameOverScreen&&!this.gameOverScreen.hiding&&!this.gameOverScreen.destructed}resetToMainMenu(){this.setGamePaused(!0),this.setGameStarted(!1),this.updateMyPlayerPaused(),main.mainMenu.setVisibility(!0)}removeDucklingsFromMainNest(e){for(const t of this.getMyControllablePlayers()){t.getMainNest().requestAdjustScore(-e)}}respawnMyDeadPlayers(){for(const e of this.getMyControllablePlayers())e.hasDied&&e.respawn()}get myPlayersPaused(){return this.paused&&main.mainMenu.visible||main.ads.adLad.needsPause}updateMyPlayerPaused(){const e=this.myPlayersPaused;if(this.myPlayerPaused!=e){this.myPlayerPaused=e,main.pauseButton.updateVisibility();for(const e of this.getMyControllablePlayers())e.sendGamePausedStateToServer()}}updateSingleplayerPausedState(){this.allControllablePlayersPaused=!0;for(const e of this.players.values())if(!e.isBot&&!e.paused){this.allControllablePlayersPaused=!1;break}}initDucklings(e){const t=e-this.ducklings.length;if(t>0)for(let e=0;e<t;e++)this.createDuckling();else if(t<0)for(let t=this.ducklings.length-1;t>=e;t--){this.ducklings[t].destructor(),this.ducklings.splice(t,1)}for(const e of this.ducklings)e.markUnknownState()}createDuckling(){const e=new Duckling(this.ducklings.length);this.ducklings.push(e),this.scene.add(e.obj)}setDucklingFollowState(e){this.ducklings[e.id].setFollowState(e.type,e.followId)}updateUnknownDucklingStates(){for(const e of this.ducklings)e.updateUnknownState()}respawnDuckling(e,t,i){this.ducklings[e].respawn(t,i)}setNestPositions(e){const t=e.length-this.nests.length;if(t>0)for(let e=0;e<t;e++)this.createNest();else if(t<0)for(let t=this.nests.length-1;t>=e.length;t--){this.nests[t].destructor(),this.nests.splice(t,1)}for(let t=0;t<this.nests.length;t++){const i=this.nests[t],n=e[t];i.setPos(n[0],n[1])}}createNest(){const e=new Nest(this.nests.length);this.nests.push(e),this.scene.add(e.obj)}resetAllNestScores(){for(const e of this.nests)e.requestResetScore()}setServerBoatSpeed(e,t){this.lastReceivedServerBoatsTime=main.now,this.boatsT=e,this.currentBoatsSpeed=t}getHasMyPlayerNearbyNestForHatSwitch(){for(const e of this.getMyControllablePlayers())if(e.isNearbyNestForHatSwitch)return!0;return!1}updateNearbyNestForHatSwitch(){const e=this.getHasMyPlayerNearbyNestForHatSwitch();e!=this.nearbyNestForHatSwitch&&(this.nearbyNestForHatSwitch=e,main.hats.updateCycleTutorialMessage())}getClientStateForNewServer(){const e={},t=[];for(const[e,i]of this.players)t.push({id:e,pos:[i.pos.x,i.pos.z],isBot:i.isBot,hasDied:i.hasDied,paused:i.paused,gameStarted:i.gameStarted,positiveKarma:i.positiveKarma,selectedHatId:i.selectedHatId});e.players=t;const i=[];for(const e of this.nests)i.push({id:e.id,pos:[e.pos.x,e.pos.z],score:e.score,owners:Array.from(e.owners).map((e=>e.id))});i.sort(((e,t)=>e.id-t.id)),e.nests=i;const n=[];for(const e of this.ducklings)n.push({followType:e.lastFollowRequestType,followId:e.lastFollowRequestId,pos:[e.pos.x,e.pos.z]});return e.ducklings=n,e.environmentSeed=this.environment.lastUsedScatterSeed,e.boatsSpeed=this.currentBoatsSpeed,e.boatsTime=this.boatsT,e.snapShotTime=Date.now(),e.serverTime=main.networkManager.serverTime,e}startGame(){this.setGameStarted(!0),this.setGamePaused(!1)}forceNetworkPositions(){for(const e of this.players.values())e.forceNetworkPosition()}setMutedMusic(e){this.musicMuted=e,this.themeSong&&(e?this.themeSong.pause():this.themeSong.resume())}addTapCircle(e){let t=new TapCircle;this.scene.add(t.obj),t.obj.position.copy(e),this.tapCircles.push(t)}}class CameraController{constructor(){this.camera=new PerspectiveCamera(75,1,.1,1e3),this.camSmoothing=!0,this.setCamSmoothingNextFrame=!1,this.smoothTarget=new Vector3,this.smoothCamDistance=1,this.smoothCamHeight=.9,this.currentCamTarget=new Vector3,this.currentCamDistanceTarget=1,this.currentCamHeightTarget=.9,this.nestFocusT=0,this.lastFocusOnNestTime=-1e4,this.currentFocussingNest=null,this.nestStageAtNestFocusStart=0,this.playerIsMoving=!1,this.playerStopMoveTime=0,this.lastHatChangeTime=0,this.projectionMatrixOffsetTarget=0,this.projectionMatrixOffsetSmooth=0,this.frustum=new Frustum,this.mainMenuMousePos=new Vector2,this.smoothMainMenuMousePos=new Vector2,window.addEventListener("mousemove",(e=>{this.mainMenuMousePos.set(e.pageX,e.pageY),this.mainMenuMousePos.x/=window.innerWidth,this.mainMenuMousePos.y/=window.innerHeight,this.mainMenuMousePos.x-=.5,this.mainMenuMousePos.y-=.5})),ResizeHandler.addListener((e=>{this.onResize()}))}init(){this.doFastCut(),this.onResize()}onResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.updateProjectionMatrixOffset(!0)}updateProjectionMatrixOffset(e=!1){let t=window.innerWidth<=830&&window.innerWidth>530;main.mainMenu.visible||(t=!1),this.projectionMatrixOffsetTarget=t?.5:0,e&&(this.projectionMatrixOffsetSmooth=this.projectionMatrixOffsetTarget)}getCamDistForNestStage(e){return mapValue(4,14,2,8,e,!0)}loop(e,t){const i=main.game.getMainPlayer();let n=0;if(i){let r=new Vector3(0,0,0),s=null;s=this.currentFocussingNest?this.currentFocussingNest:i.getMainNest(),s&&(r=s.pos);let o=i.pos,a=o.distanceTo(r);const l=clamp(70-o.length(),2,5),c=e-this.lastHatChangeTime;let h=0;this.playerIsMoving||(h=e-this.playerStopMoveTime);const u=mapValue(1e4,2e4,l,1,h,!0),d=mapValue(0,5e3,1,l,c,!0);if(this.currentCamDistanceTarget=Math.min(u,d),this.currentCamHeightTarget=mapValue(0,5,.9,1.2,a,!0),main.game.paused&&main.mainMenu.visible){this.currentCamTarget.copy(r);let e=0;main.game.gameStarted&&s&&(e=s.currentNestStage),this.currentCamDistanceTarget=this.getCamDistForNestStage(e)}else{e-this.lastFocusOnNestTime<2500?this.nestFocusT+=t:this.nestFocusT-=t,this.nestFocusT=clamp(this.nestFocusT,0,2500);let i=this.nestFocusT,s=1;if(i<=0)this.currentCamTarget.copy(o),this.currentFocussingNest=null;else{s=inOut(mapValue(0,20,0,1,a,!0)),n=inOut(mapValue(0,2e3,0,1,i,!0)),s=lerp(1,s,n),this.currentCamTarget.lerpVectors(r,o,s);const e=this.getCamDistForNestStage(this.nestStageAtNestFocusStart);this.currentCamDistanceTarget=lerp(e,this.currentCamDistanceTarget,s),this.currentCamHeightTarget=lerp(.9,this.currentCamHeightTarget,s)}}}main.mainMenu.visible?this.smoothMainMenuMousePos.lerp(this.mainMenuMousePos,lerpt01(.03)):this.smoothMainMenuMousePos.lerp(new Vector2(0,0),lerpt01(.03));const r=new Vector3(0,.4*-this.smoothMainMenuMousePos.y,.2*-this.smoothMainMenuMousePos.x);if(this.projectionMatrixOffsetSmooth=lerpt(this.projectionMatrixOffsetSmooth,this.projectionMatrixOffsetTarget,.03),this.camera.projectionMatrix.elements[8]=this.projectionMatrixOffsetSmooth,this.camSmoothing){this.smoothTarget.lerp(this.currentCamTarget,lerpt01(.1));let e=this.smoothCamHeight<this.currentCamHeightTarget?.003:.01;e=lerp(e,.1,n),this.smoothCamDistance=lerpt(this.smoothCamDistance,this.currentCamDistanceTarget,e),this.smoothCamHeight=lerpt(this.smoothCamHeight,this.currentCamHeightTarget,e)}else this.smoothTarget.copy(this.currentCamTarget),this.smoothCamDistance=this.currentCamDistanceTarget,this.smoothCamHeight=this.currentCamHeightTarget;let s=this.smoothTarget.clone();s.addScaledVector(new Vector3(1,this.smoothCamHeight,0),this.smoothCamDistance),s.add(r),this.camera.position.copy(s),this.camera.lookAt(this.smoothTarget),main.sfx.setListenerPosition(s);let o=new Matrix4;o.multiplyMatrices(this.camera.projectionMatrix,this.camera.matrixWorldInverse),this.frustum.setFromProjectionMatrix(o),this.setCamSmoothingNextFrame&&(this.setCamSmoothingNextFrame=!1,this.camSmoothing=!0)}doFastCut(){this.camSmoothing=!1,this.setCamSmoothingNextFrame=!0}getInputDirection(e){let t=new Quaternion;this.camera.getWorldQuaternion(t);let i=new Vector3;i.copy(this.camera.up),i.applyQuaternion(t);let n=new Vector3(0,0,1),r=new Matrix4;r.extractRotation(this.camera.matrix),n.applyMatrix4(r);let s=n.clone();s.cross(new Vector3(0,1,0)),s.normalize();let o=s.clone();return o.applyAxisAngle(new Vector3(0,1,0),.5*Math.PI),s.multiplyScalar(e.x),o.multiplyScalar(-e.y),s.add(o)}tempFocusOnNest(e){this.currentFocussingNest=e,this.nestStageAtNestFocusStart=e.currentNestStage,this.lastFocusOnNestTime=main.now}setControllablePlayerMoving(e){this.playerIsMoving!=e&&(this.playerIsMoving=e,e||(this.playerStopMoveTime=main.now))}hatChanged(){this.lastHatChangeTime=main.now}}class Renderer{constructor(){this.renderer=null,this.afterFrameRenderCbs=[],this.renderWidth=0,this.renderHeight=0,this._resolutionMultiplier=1}get width(){return this.renderWidth/this._resolutionMultiplier}get height(){return this.renderHeight/this._resolutionMultiplier}get size(){return new Vector2(this.width,this.height)}set resolutionMultiplier(e){this._resolutionMultiplier=e,this.onResize()}init(){this.renderer=new WebGLRenderer({antialias:!0,powerPreference:"high-performance"}),this.renderer.shadowMap.enabled=!0,this.renderer.outputEncoding=3001,this.renderer.setClearColor(363479,1);let e=this.renderer.domElement;e.classList.add("fullScreen","mainCanvas"),document.body.appendChild(e),ResizeHandler.addListener((e=>{this.onResize()})),this.onResize()}onResize(){let e=this._resolutionMultiplier;this.setSize(window.innerWidth*e,window.innerHeight*e)}setSize(e,t){this.renderWidth=e,this.renderHeight=t,this.renderer.setSize(e,t,!1)}loop(){this.renderer.setViewport(0,0,window.innerWidth*this._resolutionMultiplier,window.innerHeight*this._resolutionMultiplier),this.renderCamera()}renderCamera(){this.renderer.render(main.game.scene,main.cam.camera);for(let e=this.afterFrameRenderCbs.length-1;e>=0;e--){let t=this.afterFrameRenderCbs[e];t.waitCount--,t.waitCount<=0&&(t.cb(),this.afterFrameRenderCbs.splice(e,1))}}async waitForFrameRender(e=1){return await new Promise((t=>{this.afterFrameRenderCbs.push({cb:t,waitCount:e})}))}get supportsShadows(){return this.renderer.capabilities.maxTextures>8}worldToScreenPos(e){let t=this.width/2,i=this.height/2;return(e=e.clone()).project(main.cam.camera),e.x=e.x*t+t,e.y=-e.y*i+i,e}}class ManagedRtcConnection{constructor(e,t,i,n=!1){this.otherClientUuid=e,this.connectionUuid=t,this.networkManager=i,this.isHost=!1,this.clonedUuidChangeConnection=!1,this.isWaitingForIAmHostConfirmation=!1,this.knowsItIsHost=!1,this.onDataChannelOpenMessageBuffer=[],this.lastMessageReceiveTime=performance.now(),this.lastUuidSwitchTime=-1e5,this.onOpenCbs=new Set,this.onMessageCbs=new Set,this.onUuidChangeCbs=new Set,this.onKnowsItIsHostChangeCbs=new Set,this.closed=!1,this.onCloseCbs=new Set,this.connected=!1,this.onConnectedChangeCbs=new Set,this.rtcConnection=new RTCPeerConnection({iceServers:i.iceServers}),this.rtcConnection.addEventListener("icecandidate",(e=>{e.candidate&&i.sendRtcIceCandidate(this.otherClientUuid,this.connectionUuid,e.candidate)})),this.rtcConnection.addEventListener("datachannel",(e=>{this.dataChannel=e.channel,this.addDataChannelEvents()})),n&&(this.dataChannel=this.rtcConnection.createDataChannel("data"),this.addDataChannelEvents()),this.rtcConnection.addEventListener("negotiationneeded",(e=>{n&&this.initConnection()})),this.rtcConnection.addEventListener("connectionstatechange",(e=>{"failed"==this.rtcConnection.connectionState&&(this.didRecentUuidSwitch?(main.networkManager.connectionNeedsRetry(this),this.handleClose()):this.rtcConnection.restartIce())})),this.rtcConnection.addEventListener("iceconnectionstatechange",(e=>{this.updateConnectedState()}))}destructor(){this.rtcConnection&&(this.rtcConnection.close(),this.rtcConnection=null),this.dataChannel=null,this.networkManager=null}async initConnection(){let e=await this.rtcConnection.createOffer();await this.rtcConnection.setLocalDescription(e),this.networkManager.sendRtcDescription(this.otherClientUuid,this.connectionUuid,e,!0)}async onRtcDescription(e,t){if(e!=this.connectionUuid)return;const i=new RTCSessionDescription(t);if(await this.rtcConnection.setRemoteDescription(i),"offer"==i.type){let e=await this.rtcConnection.createAnswer();await this.rtcConnection.setLocalDescription(e),this.networkManager.sendRtcDescription(this.otherClientUuid,this.connectionUuid,e,!1)}}async onRtcIceCandidate(e,t){e==this.connectionUuid&&this.rtcConnection.addIceCandidate(new RTCIceCandidate(t))}get lastMessageReceiveMsAgo(){return performance.now()-this.lastMessageReceiveTime}get didRecentUuidSwitch(){return main.now-this.lastUuidSwitchTime<1e4}testConnectionAlive(){return performance.now()-main.networkManager.lastDocumentHiddenTime<5e3||this.lastMessageReceiveMsAgo<3e4}updateConnectedState(){const e="connected"==this.rtcConnection.iceConnectionState;if(e!=this.connected){this.connected=e;for(const e of this.onConnectedChangeCbs)e(this.connected)}}onConnectedChange(e){this.onConnectedChangeCbs.add(e)}async getCandidatePair(){const e=this.rtcConnection.sctp;if(e){const t=e.transport;if(t){const e=t.iceTransport;if(e)return e.getSelectedCandidatePair()}}const t=await this.rtcConnection.getStats();if(t){let e=null;for(const[i,n]of t)if("transport"==n.type){e=n.selectedCandidatePairId;break}let i=t.get(e);if(!i)for(const[e,n]of t)if("candidate-pair"==n.type&&n.selected){i=n;break}if(i){let e=null,n=null;for(const[r,s]of t)r==i.localCandidateId?e=this.transformCandidateStat(s):r==i.remoteCandidateId&&(n=this.transformCandidateStat(s));return{local:e,remote:n}}}return null}transformCandidateStat(e){return{address:e.address||e.ip,type:e.candidateType}}async guessConnectionType(){const e=await this.getCandidatePair();if(!e||!e.remote)return"unknown";if("relay"==e.remote.type)return"relay";if(!e.remote.address)return"unknown";const t=e.remote.address;return t.match(/((^\s*((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))\s*$)|(^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$))/)?t.match(/(^127\.)|(^192\.168\.)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^::1$)|(^[fF][cCdD])/)?"private":"public":"private"}testStrIsIpv4(e){return e.match(/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/)}addDataChannelEvents(){this.dataChannel&&(this.dataChannel.binaryType="arraybuffer",this.dataChannel.addEventListener("open",(e=>{for(const e of this.onOpenCbs)e();let t=this.onDataChannelOpenMessageBuffer.slice();this.onDataChannelOpenMessageBuffer=[];for(const e of t)this.send(e)})),this.dataChannel.addEventListener("message",(e=>{const t=e.data,i=new DataView(t).getUint8(0),n=t.slice(1);if(i==HostConnection.ServerAction.RTC_CONNECTION_UUID_CHANGED){const e=(new TextDecoder).decode(n);main.networkManager.connectionUuidChanged(this.otherClientUuid,e)}else if(i==HostConnection.ServerAction.I_AM_HOST)main.networkManager.setCurrentHostUuid(this.otherClientUuid),this.setKnowsItIsHost(!0),this.send(HostConnection.composeMessage([HostConnection.ServerAction.YOU_ARE_HOST_CONFIRMED]));else if(i==HostConnection.ServerAction.YOU_ARE_HOST_CONFIRMED)this.isWaitingForIAmHostConfirmation=!1;else if(!this.isWaitingForIAmHostConfirmation&&!this.closed)for(const e of this.onMessageCbs)e(t);this.lastMessageReceiveTime=performance.now()})),this.dataChannel.addEventListener("close",(e=>{this.handleClose()})))}send(e){this.dataChannel&&"connecting"!=this.dataChannel.readyState?"open"==this.dataChannel.readyState&&this.dataChannel.send(e):this.onDataChannelOpenMessageBuffer.push(e),this.testConnectionAlive()||this.close()}close(){this.closed||(this.rtcConnection.close(),this.handleClose())}onOpen(e){this.onOpenCbs.add(e)}onMessage(e){this.onMessageCbs.add(e)}onUuidChange(e){this.onUuidChangeCbs.add(e)}onKnowsItIsHostChange(e){this.onKnowsItIsHostChangeCbs.add(e)}onClose(e){this.onCloseCbs.add(e)}handleClose(){if(!this.closed){this.closed=!0;for(const e of this.onCloseCbs)e();this.unsetHost()}}reconfigureIceServers(){this.rtcConnection.setConfiguration({iceServers:this.networkManager.iceServers})}setHost(){this.isHost||(this.setKnowsItIsHost(!1),this.isHost=!0)}unsetHost(){this.isHost&&(this.isHost=!1)}markClonedUuidChangeConnection(){this.clonedUuidChangeConnection=!0}sendMyNewUuid(e){const t=(new TextEncoder).encode(e),i=new ArrayBuffer(t.byteLength+1);new DataView(i).setUint8(0,HostConnection.ServerAction.RTC_CONNECTION_UUID_CHANGED);new Uint8Array(i).set(new Uint8Array(t),1),this.send(i)}changeUuid(e){const t=this.otherClientUuid;this.otherClientUuid=e,this.lastUuidSwitchTime=main.now;for(const i of this.onUuidChangeCbs)i(t,e)}sendIAmHost(){this.isWaitingForIAmHostConfirmation=!0,this.send(HostConnection.composeMessage([HostConnection.ServerAction.I_AM_HOST]))}setKnowsItIsHost(e){if(this.knowsItIsHost!=e){this.knowsItIsHost=e;for(const t of this.onKnowsItIsHostChangeCbs)t(e)}}}class LocalHostUser{constructor(e,t){this.uuid=e,this.isLocalClient=t,this.tabActive=!0}destructor(){}changeUuid(e){this.uuid=e}setTabActive(e){this.tabActive=e}}class LocalHostPlayer{constructor(e,t=!1){this.id=e,this.owner=null,this.pos=new Vector2,this.isBot=t,this.ownedNestIds=new Set,this.died=!1,this.paused=!0,this.gameStarted=!1,this.positiveKarma=1,this.selectedHatId=-1}assignToUser(e){this.owner!=e&&(this.owner&&this.unassignUser(),this.owner=e,e&&main.networkManager.localHostServer.sendPlayerOwnership(this.id,!0,[e.uuid]))}unassignUser(e=!0){e&&main.networkManager.localHostServer.sendPlayerOwnership(this.id,!1,[this.owner.uuid]),this.owner=null}setPosition(e,t){this.pos.set(e,t)}addOwnedNest(e){this.ownedNestIds.add(e)}setDeathState(e){this.died=e}setPaused(e){this.paused=e}setGameStarted(e){this.gameStarted=e}setKarma(e){this.positiveKarma=e}setSelectedHatId(e){this.selectedHatId=e}}class LocalHostNest{constructor({isOwnedByControllablePlayer:e=!1}={}){this.pos=new Vector2,this.score=0,this.isOwnedByControllablePlayer=e,this.playerOwnerIds=new Set}setPos(e,t){this.pos.set(e,t)}addDucklingScore(){this.score++,this.isOwnedByControllablePlayer||(this.score=Math.min(this.score,main.cornerScore.ducklingCountForStage(12)))}offsetScore(e){this.score+=e}addPlayerOwner(e){this.playerOwnerIds.add(e.id)}}class LocalHostDuckling{constructor(){this.spawnPosition=new Vector2,this.followType=0,this.followId=0,this.currentOwnerPlayerId=-1}setFollowState(e,t){this.followType=e,this.followId=t,e==HostConnection.DucklingFollowType.PLAYER&&(this.currentOwnerPlayerId=t)}respawn(e,t){this.spawnPosition.set(e,t),this.currentOwnerPlayerId=-1,this.followType=0,this.followId=0}}class LocalHostServer{constructor(){this.users=new Map,this.players=new Map,this.ducklings=[],this.nests=[];this.maxDucklingCount=100;for(let e=0;e<20;e++){const t=0==e,i=this.nests[e]=new LocalHostNest({isOwnedByControllablePlayer:t});t&&(i.score=main.cornerScore.savedScore);const n=68,r=2*Math.PI*(e/20);i.setPos(Math.cos(r)*n,Math.sin(r)*n)}for(let e=0;e<this.maxDucklingCount;e++)this.ducklings[e]=new LocalHostDuckling,this.respawnDuckling(e);this.lastVerifiedBoatsTime=0,this.lastVerifiedBoatsTimestamp=0,this.lastVerifiedBoatsSpeed=0,this.serverTimeOffset=0,this.environmentSeed=randInt(0,Math.pow(2,32)),this.updateBoatsSpeed()}userJoined(e,t){if(this.users.has(e))return;let i=new LocalHostUser(e,t);this.users.set(e,i),main.networkManager.updateIsMultiplayer();const n=this.nests.map((e=>[e.pos.x,e.pos.y]));this.sendNestPositions(n,[e]);for(const[e,t]of this.nests.entries())this.sendNestScoreDucklings(e,t.score);for(const[t,i]of this.players){this.sendCreatePlayer(t,i.isBot,[e]),this.sendPlayerPosition(t,i.pos.x,i.pos.y,!1,[e]),this.sendPlayerDeathState(t,i.died,[e]),this.sendPlayerPausedState(t,i.paused,[e]),this.sendPlayerGameStartedState(t,i.gameStarted,[e]),this.sendPlayerKarma(t,i.positiveKarma,[e]),this.sendPlayerHatId(t,i.selectedHatId,[e]);for(const t of i.ownedNestIds)this.sendNestOwnership(t,i.id,[e])}this.sendInitDucklings(this.maxDucklingCount,[e]);const r=[],s=[];for(const[e,t]of this.ducklings.entries())t.followType==HostConnection.DucklingFollowType.NONE?s.push({id:e,pos:t.spawnPosition}):r.push({id:e,type:t.followType,followId:t.followId});this.sendRespawnDucklings(s,[e]);const o=HostConnection.createDucklingsFollowStatesMessages(r);for(const t of o)this.sendClients(t,[e]);this.sendEnvironmentSeed(this.environmentSeed,[e]),this.updateBoatsTime(),this.sendCurrentBoatsTime([e]),this.spawnBots(),this.assignBots(),this.sendFullServerStateSent([e])}userLeft(e){let t=this.users.get(e),i=!1;t&&t.destructor();for(const e of this.players.values())e.owner==t&&(e.isBot?(e.unassignUser(!1),i=!0):this.removePlayer(e));this.users.delete(e),main.networkManager.updateIsMultiplayer(),i&&this.assignBots()}localClientUuidChanged(e){for(const[t,i]of this.users)if(i.isLocalClient){this.users.delete(t),this.users.set(e,i),i.changeUuid(e);break}}userUuidChanged(e,t){for(const[i,n]of this.users)if(i==e){this.users.delete(e),this.users.set(t,n),n.changeUuid(t);break}}copyStateFromClient(e){if(!e)return;for(const t of e.players){const e=new LocalHostPlayer(t.id);this.players.set(t.id,e),e.setPosition(...t.pos),e.isBot=t.isBot,e.died=t.hasDied,e.paused=t.paused,e.gameStarted=t.gameStarted,e.positiveKarma=t.positiveKarma,e.selectedHatId=t.selectedHatId}this.nests=[];for(const[t,i]of e.nests.entries()){const e=0==t,n=this.nests[t]=new LocalHostNest({isOwnedByControllablePlayer:e});n.setPos(...i.pos),n.score=i.score;for(const e of i.owners){const i=this.players.get(e);i.addOwnedNest(t),n.addPlayerOwner(i)}}const t=e.ducklings.length-this.ducklings.length;if(t>0)for(let e=0;e<t;e++)this.ducklings.push(new LocalHostDuckling);else if(t<0)for(let t=this.ducklings.length-1;t>=e.ducklings.length;t--)this.ducklings[t],this.ducklings.splice(t,1);for(const[t,i]of this.ducklings.entries()){const n=e.ducklings[t];i.respawn(...n.pos),i.setFollowState(n.followType,n.followId)}this.environmentSeed=e.environmentSeed,this.lastVerifiedBoatsTimestamp=Date.now(),this.lastVerifiedBoatsSpeed=e.boatsSpeed,this.lastVerifiedBoatsTime=e.boatsTime;const i=Date.now()-e.snapShotTime,n=e.serverTime+i;this.serverTimeOffset=n-performance.now(),window.setTimeout((e=>{this.removePlayersWithoutOwner()}),5e3)}get serverTime(){return performance.now()+this.serverTimeOffset}onClientMessage(e,t){const i=this.users.get(e),n=new DataView(t).getUint8(0),r=t.slice(1);if(n==HostConnection.ServerAction.PINGPONG){const t=HostConnection.composeMessage([HostConnection.ServerAction.PINGPONG,{type:"float64",value:this.serverTime}]);this.sendClients(t,[e])}else if(n==HostConnection.ServerAction.PLAYER_SPAWN){const e=this.createPlayer();e.assignToUser(i);const t=0,n=this.nests[t];this.setNestOwnership(e,t),e.setPosition(n.pos.x,n.pos.y),this.sendPlayerPosition(e.id,e.pos.x,e.pos.y,!0)}else if(n==HostConnection.ServerAction.PLAYER_POSITION){const[n,s,o,a]=HostConnection.decomposeMessage(r,["uint16","float32","float32","bool"]),l=this.players.get(n);l&&!a&&(l.owner==i?(l.setPosition(s,o),this.sendClients(t,null,[e])):this.sendPlayerPosition(n,l.pos.x,l.pos.y,!0,[e]))}else if(n==HostConnection.ServerAction.DUCKLINGS_FOLLOW_STATES){const{ownerPlayerId:e,states:t}=HostConnection.parseDucklingsFollowStateMessage(r),i=[];for(const n of t){const t=this.ducklings[n.id];t.followType!=HostConnection.DucklingFollowType.NEST&&(n.type!=HostConnection.DucklingFollowType.PLAYER&&e!=t.currentOwnerPlayerId||(t.setFollowState(n.type,n.followId),i.push(n)))}const n=HostConnection.createDucklingsFollowStatesMessages(i);for(const e of n)this.sendClients(e)}else if(n==HostConnection.ServerAction.REQUEST_DUCKLING_RESPAWN){const[e]=HostConnection.decomposeMessage(r,["uint16"]),t=this.ducklings[e];if(t.followType==HostConnection.DucklingFollowType.NEST){const i=t.followId;this.respawnDuckling(e),this.sendRespawnDucklings([{id:e,pos:t.spawnPosition}]);const n=this.nests[i];n.addDucklingScore(),this.updateBoatsSpeed(),this.sendNestScoreDucklings(i,n.score,[e])}}else if(n==HostConnection.ServerAction.CLAIM_PLAYER){const[t]=HostConnection.decomposeMessage(r,["uint16"]),n=this.players.get(t);n&&(null==n.owner||n.owner==i?n.assignToUser(i):this.sendPlayerOwnership(t,!1,[e]))}else if(n==HostConnection.ServerAction.PLAYER_QUACK){const[n]=HostConnection.decomposeMessage(r,["uint16"]),s=this.players.get(n);s&&s.owner==i&&this.sendClients(t,null,[e])}else if(n==HostConnection.ServerAction.PLAYER_DEATH_STATE){const[n,s]=HostConnection.decomposeMessage(r,["uint16","bool"]),o=this.players.get(n);o&&o.owner==i&&(o.setDeathState(s),this.sendClients(t,null,[e]))}else if(n==HostConnection.ServerAction.PLAYER_PAUSED_STATE){const[n,s]=HostConnection.decomposeMessage(r,["uint16","bool"]),o=this.players.get(n);o&&o.owner==i&&(o.setPaused(s),this.sendClients(t,null,[e])),this.updateBoatsSpeed()}else if(n==HostConnection.ServerAction.PLAYER_GAME_STARTED_STATE){const[n,s]=HostConnection.decomposeMessage(r,["uint16","bool"]),o=this.players.get(n);o&&o.owner==i&&(o.setGameStarted(s),this.sendClients(t,null,[e]))}else if(n==HostConnection.ServerAction.DETACH_DUCKLINGS){const{ownerPlayerId:e,ducklings:t}=HostConnection.parseDetachDucklingsMessage(r),i=[];for(const n of t){const t=this.ducklings[n.id];e==t.currentOwnerPlayerId&&(t.respawn(n.x,n.y),i.push({id:n.id}))}const n=HostConnection.createDucklingsFollowStatesMessages(i);for(const e of n)this.sendClients(e)}else if(n==HostConnection.ServerAction.PLAYER_KARMA){const{playerId:n,karma:s}=HostConnection.parsePlayerKarmaMessage(r),o=this.players.get(n);o&&o.owner==i&&(o.setKarma(s),this.sendClients(t,null,[e]))}else if(n==HostConnection.ServerAction.MY_TAB_ACTIVE){const[e]=HostConnection.decomposeMessage(r,["bool"]);i.setTabActive(e),this.assignBots()}else if(n==HostConnection.ServerAction.ARE_YOU_STILL_THERE)this.sendClients(HostConnection.composeMessage([HostConnection.ServerAction.I_AM_STILL_HERE]),[e]);else if(n==HostConnection.ServerAction.PLAYER_HAT_ID){const{playerId:n,hatId:s}=HostConnection.parsePlayerHatMessage(r),o=this.players.get(n);o&&o.owner==i&&(o.setSelectedHatId(s),this.sendClients(t,null,[e]))}else if(n==HostConnection.ServerAction.NEST_SCORE_OFFSET){const{nestId:t,score:i,requestId:n}=HostConnection.parseNestScoreOffsetMessage(r),s=this.nests[t];s&&(s.offsetScore(i),this.sendNestScoreClientOffset(t,s.score,n,[e]),this.sendNestScoreClientOffset(t,s.score,0,null,[e]))}}sendClients(e,t=null,i=null){main.networkManager.sendServerMessageToClients(e,t,i)}sendEnvironmentSeed(e,t=null,i=null){const n=HostConnection.composeMessage([{type:"uint8",value:HostConnection.ServerAction.ENVIRONMENT_SEED},{type:"uint32",value:e}]);this.sendClients(n,t,i)}sendCreatePlayer(e,t,i=null,n=null){const r=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_SPAWN,{type:"uint16",value:e},{type:"bool",value:t}]);this.sendClients(r,i,n)}sendDeletePlayer(e,t=null,i=null){const n=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_DELETE,{type:"uint16",value:e}]);this.sendClients(n,t,i)}sendPlayerOwnership(e,t,i=null,n=null){const r=HostConnection.composeMessage([HostConnection.ServerAction.SET_PLAYER_OWNERSHIP,{type:"uint16",value:e},{type:"bool",value:t}]);this.sendClients(r,i,n)}sendPlayerPosition(e,t,i,n=!1,r=null,s=null){const o=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_POSITION,{type:"uint16",value:e},{type:"float32",value:t},{type:"float32",value:i},{type:"bool",value:n}]);this.sendClients(o,r,s)}sendPlayerDeathState(e,t,i=null,n=null){const r=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_DEATH_STATE,{type:"uint16",value:e},{type:"bool",value:t}]);this.sendClients(r,i,n)}sendPlayerPausedState(e,t,i=null,n=null){const r=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_PAUSED_STATE,{type:"uint16",value:e},{type:"bool",value:t}]);this.sendClients(r,i,n)}sendPlayerGameStartedState(e,t,i=null,n=null){const r=HostConnection.composeMessage([HostConnection.ServerAction.PLAYER_GAME_STARTED_STATE,{type:"uint16",value:e},{type:"bool",value:t}]);this.sendClients(r,i,n)}sendPlayerKarma(e,t,i=null,n=null){const r=HostConnection.createPlayerKarmaMessage(e,t);this.sendClients(r,i,n)}sendPlayerHatId(e,t,i=null,n=null){const r=HostConnection.createPlayerHatMessage(e,t);this.sendClients(r,i,n)}sendNestOwnership(e,t,i=null,n=null){const r=HostConnection.composeMessage([HostConnection.ServerAction.NEST_OWNERSHIP,{type:"uint16",value:e},{type:"uint16",value:t}]);this.sendClients(r,i,n)}sendNestPositions(e,t=null,i=null){const n=[];n.push({type:"uint8",value:HostConnection.ServerAction.NEST_POSITIONS});for(const t of e)n.push({type:"float32",value:t[0]}),n.push({type:"float32",value:t[1]});const r=HostConnection.composeMessage(n);this.sendClients(r,t,i)}sendInitDucklings(e,t=null,i=null){const n=HostConnection.composeMessage([HostConnection.ServerAction.INIT_DUCKLINGS,{type:"uint16",value:e}]);this.sendClients(n,t,i)}sendRespawnDucklings(e,t=null,i=null){const n=[];n.push({type:"uint8",value:HostConnection.ServerAction.RESPAWN_DUCKLINGS});for(const t of e)n.push({type:"uint16",value:t.id}),n.push({type:"float32",value:t.pos.x}),n.push({type:"float32",value:t.pos.y});const r=HostConnection.composeMessage(n);this.sendClients(r,t,i)}sendNestScoreDucklings(e,t,i=[]){const n=[HostConnection.ServerAction.NEST_SCORE_DUCKLINGS,{type:"uint16",value:e},{type:"uint32",value:t}];for(const e of i)n.push({type:"uint16",value:e});const r=HostConnection.composeMessage(n);this.sendClients(r)}sendNestScoreClientOffset(e,t,i,n=null,r=null){const s=HostConnection.createNestScoreOffsetMessage(e,t,i);this.sendClients(s,n,r)}sendBoatsTime(e,t,i=null,n=null){const r=HostConnection.composeMessage([HostConnection.ServerAction.BOATS_TIME,{type:"uint32",value:Math.round(e/100)},{type:"float32",value:t}]);this.sendClients(r,i,n)}sendCurrentBoatsTime(e=null,t=null){this.sendBoatsTime(this.lastVerifiedBoatsTime,this.lastVerifiedBoatsSpeed,e,t)}sendFullServerStateSent(e=null,t=null){const i=HostConnection.composeMessage([HostConnection.ServerAction.FULL_SERVER_STATE_SENT]);this.sendClients(i,e,t)}createPlayer(e=!1){const t=this.getUnusedPlayerId();if(null==t)return;const i=new LocalHostPlayer(t,e);return this.players.set(t,i),this.sendCreatePlayer(t,e),i}removePlayer(e){this.players.delete(e.id),this.sendDeletePlayer(e.id)}getUnusedPlayerId(){for(let e=0;e<256;e++){let t=!0;for(const i of this.players.keys())if(i==e){t=!1;break}if(t)return e}return null}*getNonBotPlayers(){for(const e of this.players.values())e.isBot||(yield e)}respawnDuckling(e){const t=[];let i=0;for(const e of this.nests){if(!e.isOwnedByControllablePlayer)continue;const n=mapValue(0,20,.05,0,e.score);n>0&&(i+=n,t.push({nest:e,probability:n}))}const n=randFromArrayWithProbability(t),r=Math.max(.5,1-i);let s=0,o=0,a=n&&Math.random()>r;if(a){let e=0;for(const t of this.ducklings)t.followType==HostConnection.DucklingFollowType.NONE&&t.spawnPosition.distanceTo(n.nest.pos)<9&&e++;e>10&&(a=!1)}if(a){let{theta:e,dist:t}=randomCirclePos({startRadius:2,endRadius:8,distributionCurve:e=>Math.pow(e,.5),thetaMin:.45*Math.PI,thetaMax:1.55*Math.PI});s=Math.cos(e)*t,o=Math.sin(e)*t}else{let{theta:e,dist:t}=randomCirclePos({startRadius:25,endRadius:70,distributionCurve:e=>Math.pow(e,2)});const i=Array.from(this.getNonBotPlayers());if(i.length>0){const t=randFromArray(i);e=Math.atan(t.pos.y/t.pos.x),t.pos.x<0&&(e+=Math.PI);const n=Math.random();e+=.5*Math.log(-n/(n-1))}s=Math.cos(e)*t,o=Math.sin(e)*t}a&&(s+=n.nest.pos.x,o+=n.nest.pos.y);const l=this.ducklings[e];l.respawn(s,o),l.setFollowState(HostConnection.DucklingFollowType.NONE,0)}getRandomUserForBot(){return randFromArray(Array.from(this.users.values()).filter((e=>e.tabActive)))}addBotPlayer(e=0){const t=this.createPlayer(!0),i=this.getRandomUserForBot();t.assignToUser(i);const n=this.nests[e];this.setNestOwnership(t,e),t.setPosition(n.pos.x,n.pos.y),this.sendPlayerPosition(t.id,t.pos.x,t.pos.y)}spawnBots(){for(const[e,t]of this.nests.entries())t.isOwnedByControllablePlayer||t.playerOwnerIds.size<=0&&this.addBotPlayer(e)}assignBots(){for(const[e,t]of this.players)if(t.isBot&&(null==t.owner||!t.owner.tabActive)){const e=this.getRandomUserForBot();t.assignToUser(e)}}setNestOwnership(e,t){const i=this.nests[t];e.addOwnedNest(t),i.addPlayerOwner(e),this.sendNestOwnership(t,e.id)}updateBoatsSpeed(){let e=0;for(const t of this.nests)t.isOwnedByControllablePlayer&&(e+=t.score);let t=mapValue(0,100,.3,1,e,!0),i=!0;for(const e of this.players.values())if(!e.isBot&&!e.paused){i=!1;break}i&&(t=0),this.setBoatsSpeed(t)}setBoatsSpeed(e){this.lastVerifiedBoatsSpeed!=e&&(this.updateBoatsTime(),this.lastVerifiedBoatsSpeed=e,this.sendCurrentBoatsTime())}updateBoatsTime(){const e=Date.now(),t=e-this.lastVerifiedBoatsTimestamp;this.lastVerifiedBoatsTime+=t*this.lastVerifiedBoatsSpeed,this.lastVerifiedBoatsTimestamp=e}removePlayersWithoutOwner(){for(const e of this.players.values())e.owner||this.removePlayer(e)}}class NetworkManager{constructor(){this.hostConnection=new HostConnection,this.localHostServer=null,this.hostUuid=null,this.hostConnectionInit=!1,this.thisRoomHostConnectionHasBeenInit=!1,this.thisRoomHasBeenMultiplayer=!1,this.prevThisRoomHasBeenMultiplayer=!1,this.thisRoomHasBeenMultiplayerTimeout=new Timeout((e=>{this.isMultiplayerGame||(this.thisRoomHasBeenMultiplayer=!1,this.updateHasBeenMultiplayer())}),15e3),this.currentHostSymbol=null,this.managedRtcConnections=new Map,this.retryUuidsAfterClose=new Set,this.ws=null,this.hasHadOpenWsConnection=!1,this.isRetryingWsConnection=!1,this.serverClosedFromShutdown=!1,this.nextWsRetryTime=0,this.wsRetryCount=0,this.nextWsPingTime=0,this.lastWsMessageTime=0,this.onWsOpenCloseCbs=new Set,this.myUuid=null,this.myPreviousUuids=[],this.turnCredentials=null,this.turnCredentialsExpireTimeSeconds=0,this.isWaitingForNewTurnCredentials=!1,this.connectionState="disconnected",this.connectingMessage=null,this.needsDisconnectedMessage=!1,this.showConnectingDuringWebSocketSetup=!1,this.currentRoomId=null,this.onRoomJoinCbs=new Set,this.roomIdDigits=9,this.minRoomId=Math.pow(10,this.roomIdDigits-1),this.maxRoomId=Math.pow(10,this.roomIdDigits)-1,this.onHostConnectionInitCbs=new Set,this.onFullHostStateReceivedCbs=new Set,this.prevIsMultiplayerGame=!1,this.onHasBeenMultiplayerGameChangeCbs=new Set,this.lastHostPingTime=0,this.lastPing=0,this.serverTimeOffset=0,this.smoothServerTimeOffset=0,this.didDisconnectConnectionRecently=!1,this.noConnectionsDisconnectedTimeout=new Timeout((e=>{this.didDisconnectConnectionRecently=!1,this.updateConnectionState()}),2e3),this.updateReportedConnectionTypesTimeout=new Timeout((e=>{this.updateReportedConnectionTypes()}),5e3),this.hasReceivedFullHostState=!1,this.hasStartedThisGame=!1,window.addEventListener("beforeunload",(e=>{for(const e of this.managedRtcConnections.values())e.close()})),this.lastMajorFreezeTime=0,this.lastDocumentHideTime=0,document.addEventListener("visibilitychange",(e=>{document.hidden||(this.lastDocumentHideTime=performance.now()),this.sendCurrentTabActiveToHost()})),window.addEventListener("hashchange",(e=>{this.onHashChange()}))}init(){this.onHashChange({cameFromInit:!0})}loop(e,t){this.smoothServerTimeOffset=lerp(this.smoothServerTimeOffset,this.serverTimeOffset,.03),this.isRetryingWsConnection&&e>this.nextWsRetryTime&&!this.ws&&(this.startWebsocketConnection(),this.sendMyPreviousUuids(),this.joinCurrentRoomId(),this.nextWsRetryTime=e+1e3*Math.pow(2,this.wsRetryCount),this.wsRetryCount++),main.unclampedDt>2e3&&(this.lastMajorFreezeTime=e),this.ws&&this.ws.readyState==WebSocket.CLOSING&&"connected"==this.connectionState&&this.updateConnectionState();this.webSocketConnected&&(e>this.lastWsMessageTime+7e3&&performance.now()>Math.max(this.lastDocumentHiddenTime,this.lastMajorFreezeTime)+7e3&&this.ws.close(),e>this.nextWsPingTime&&(this.sendWs({op:"ping"}),this.nextWsPingTime=e+5e3)),!this.isWaitingForNewTurnCredentials&&this.turnCredentials&&this.turnCredentialsExpireTimeSeconds-Date.now()/1e3<30&&(this.sendRequestNewTurnCredentials(),this.isWaitingForNewTurnCredentials=!0)}startWebsocketConnection(){let e;e="http:"==location.protocol?"ws://":"wss://",e+=window.location.hostname,location.hostname.endsWith("ducklings.io")?e+="/ws":e+=":5032",e="wss://ducklings.io/ws",CORDOVA&&(main.debugEnv?e="wss://dev.ducklings.io/ws":"staging"==main.env?e="wss://staging.ducklings.io/ws":"production"==main.env&&(e="wss://ducklings.io/ws")),this.ws=new WebSocket(e),this.updateConnectionState(),this.ws.addEventListener("open",(e=>{this.fireOpenCloseWsCbs(!0),this.updateConnectionState()})),this.ws.addEventListener("close",(e=>{this.fireOpenCloseWsCbs(!1),this.ws=null,this.updateConnectionState()})),this.ws.addEventListener("error",(e=>{this.fireOpenCloseWsCbs(!1),this.ws=null,this.updateConnectionState()})),this.ws.addEventListener("message",(e=>{let t=JSON.parse(e.data);this.onWsMessage(t)}))}async joinCurrentRoomId(e=!1){await this.waitForWsConnected()?this.testValidRoomId(this.currentRoomId)?await this.sendJoinRoomId(this.currentRoomId):await this.requestNewRoomId():this.testValidRoomId(this.currentRoomId)&&e&&(this.showCouldntConnect(),this.setRoomIdUrl(-1,{preventNewWebsocket:!0}))}setRoomIdUrl(e,{replace:t=!0,preventNewWebsocket:i=!1,cameFromSinglePlayer:n=!1,cameFromWsMessage:r=!1}={}){if(e==this.currentRoomId)return;let s=".";this.testValidRoomId(e)&&(s="#"+e),t?history.replaceState(null,"",s):history.pushState(null,"",s),this.onHashChange({preventNewWebsocket:i,cameFromSinglePlayer:n,cameFromWsMessage:r})}onHashChange({preventNewWebsocket:e=!1,forceNewWebSocket:t=!1,cameFromSinglePlayer:i=!1,cameFromWsMessage:n=!1,cameFromInit:r=!1}={}){let s=-1;if(location.hash&&(s=parseInt(location.hash.substring(1))),s!=this.currentRoomId||t&&-1==s&&-1==this.currentRoomId){const t=this.currentRoomId;this.currentRoomId=s;let o=!0;i&&(-1!=t&&-1!=s||(o=!1)),o&&(this.thisRoomHostConnectionHasBeenInit=!1,this.thisRoomHasBeenMultiplayer=!1,this.updateHasBeenMultiplayer(),this.hasReceivedFullHostState=!1,this.hostConnectionInit=!1,this.hostUuid=null,this.destroyLocalHostServer(),r||main.game.resetToMainMenu()),this.updateConnectionState();for(const e of this.managedRtcConnections.values())e.close();let a="Ducklings";if(this.testValidRoomId(this.currentRoomId)&&(a+=" - "+this.currentRoomId),document.title==a,this.ws||e||this.startWebsocketConnection(),-1==t||i||this.resetGame(),-1!=s||this.localHostServer?-1!=t&&-1!=s&&(this.hasStartedThisGame=!1):(this.createLocalHostServer(),main.game.newGameStarted(),this.hasStartedThisGame=!0),n||this.joinCurrentRoomId(!0),-1!=s){for(const e of this.onRoomJoinCbs)e();this.onRoomJoinCbs.clear()}}}resetGame(){this.currentHostSymbol=Symbol("host connection id"),main.game.resetGame()}reconnectWebSocketAfterFail(){this.showConnectingDuringWebSocketSetup=!0,this.ws||this.isRetryingWsConnection||this.onHashChange({forceNewWebSocket:!0,cameFromSinglePlayer:!0})}fireOpenCloseWsCbs(e){e?(this.hasHadOpenWsConnection=!0,this.isRetryingWsConnection=!1,this.lastWsMessageTime=main.now,this.needsDisconnectedMessage=!0):this.hasHadOpenWsConnection&&!this.isRetryingWsConnection&&(this.isMultiplayerGame||this.serverClosedFromShutdown)&&(this.serverClosedFromShutdown=!1,this.isRetryingWsConnection=!0,this.wsRetryCount=0,this.nextWsRetryTime=main.now+1e3);for(const t of this.onWsOpenCloseCbs)t(e);this.onWsOpenCloseCbs.clear()}get isHost(){return!!this.localHostServer}updateConnectionState(){const e=this.getConnectionState();e!=this.connectionState&&(this.connectionState=e,this.setConnectingMessageVisibility("connecting"==e),"disconnected"==e?(this.needsDisconnectedMessage?(this.needsDisconnectedMessage=!1,main.toasts.showMessage("Disconnected.")):this.showConnectingDuringWebSocketSetup&&this.showCouldntConnect(),this.showConnectingDuringWebSocketSetup=!1,this.isRetryingWsConnection=!1,this.thisRoomHasBeenMultiplayer&&main.game.resetToMainMenu(),this.webSocketConnected&&this.ws.close(),this.setRoomIdUrl(-1,{replace:!this.thisRoomHasBeenMultiplayer,preventNewWebsocket:!0,cameFromSinglePlayer:!this.thisRoomHasBeenMultiplayer})):"connected"==e&&(this.showConnectingDuringWebSocketSetup=!1))}showCouldntConnect(){let e="";e=navigator.onLine?"Couldn't connect to server...":"Couldn't connect to server,\ncheck your connection.",main.toasts.showMessage(e)}setConnectingMessageVisibility(e){e?this.connectingMessage||(this.connectingMessage=main.toasts.showMessage("Connecting...",{autoHideSeconds:-1})):this.connectingMessage&&(this.connectingMessage.hide(),this.connectingMessage=null)}getConnectionState(){if(this.isHost)return this.showConnectingDuringWebSocketSetup&&this.ws?-1!=this.currentRoomId?"connected":"connecting":this.webSocketConnected?"connected":this.isRetryingWsConnection?this.isMultiplayerGame?"connecting":"connected":"disconnected";if(0==this.managedRtcConnections.size&&!this.didDisconnectConnectionRecently&&this.thisRoomHostConnectionHasBeenInit)return"disconnected";if(!this.hasReceivedFullHostState)return"connecting";for(const e of this.managedRtcConnections.values())if(e.connected)return"connected";return"connecting"}startNoConnectionTimeout(){this.didDisconnectConnectionRecently=!0,this.updateConnectionState(),this.noConnectionsDisconnectedTimeout.start()}get isMultiplayerGame(){return this.isHost?this.localHostServer.users.size>1:!!this.hostConnectionInit}updateIsMultiplayer(){this.isMultiplayerGame!=this.prevIsMultiplayerGame&&(this.isMultiplayerGame?(this.thisRoomHasBeenMultiplayer=!0,this.updateHasBeenMultiplayer()):this.thisRoomHasBeenMultiplayerTimeout.start(),this.prevIsMultiplayerGame=this.isMultiplayerGame)}onHasBeenMultiplayerGameChange(e){this.onHasBeenMultiplayerGameChangeCbs.add(e)}updateHasBeenMultiplayer(){if(this.thisRoomHasBeenMultiplayer!=this.prevThisRoomHasBeenMultiplayer){this.prevThisRoomHasBeenMultiplayer=this.thisRoomHasBeenMultiplayer;for(const e of this.onHasBeenMultiplayerGameChangeCbs)e(this.thisRoomHasBeenMultiplayer)}}get iceServers(){let e=[{urls:["stun:188.166.69.11:3478"]}];return this.myUuid&&this.turnCredentials&&e.push({urls:["turn:188.166.69.11:3478"],username:this.turnCredentials.username,credential:this.turnCredentials.password}),e}get serverTime(){return performance.now()+this.smoothServerTimeOffset+this.lastPing/2}testValidRoomId(e){return e>=this.minRoomId&&e<=this.maxRoomId}onWsMessage(e){if(this.lastWsMessageTime=main.now,"myUuid"==e.op){if(this.myUuid){for(const t of this.managedRtcConnections.values())t.sendMyNewUuid(e.uuid);this.myPreviousUuids.push({uuid:this.myUuid,time:performance.now()})}this.myUuid=e.uuid,this.isHost&&this.localHostServer.localClientUuidChanged(this.myUuid)}else if("joinedRoomId"==e.op){const t=e.id;t!=this.currentRoomId&&this.setRoomIdUrl(t,{replace:-1==this.currentRoomId,cameFromSinglePlayer:-1==this.currentRoomId,cameFromWsMessage:!0})}else if("hostUuid"==e.op)this.setCurrentHostUuid(e.uuid);else if("connectedUserUuids"==e.op){if(this.isHost)for(const t of e.connectedUserUuids)this.createConnection(t)}else if("userJoined"==e.op){if(this.isHost){let t=null;for(const i of e.previousUuids){const e=this.managedRtcConnections.get(i);if(e){t=e;break}}t?this.connectionUuidChanged(t.otherClientUuid,e.uuid):this.createConnection(e.uuid)}}else if("rtcDescription"==e.op)this.onRtcDescription(e.uuid,e.connectionUuid,e.description);else if("rtcIceCandidate"==e.op)this.onRtcIceCandidate(e.uuid,e.connectionUuid,e.candidate);else if("turnCredentials"==e.op){this.turnCredentials=e.credentials,this.isWaitingForNewTurnCredentials=!1,this.turnCredentialsExpireTimeSeconds=Date.now()/1e3+e.credentials.relativeExpireTimeSeconds;for(const e of this.managedRtcConnections.values())e.reconfigureIceServers()}else"serverWillClose"==e.op&&(this.serverClosedFromShutdown=!0)}get webSocketConnected(){return this.ws&&this.ws.readyState==WebSocket.OPEN||!1}async waitForWsConnected(){return!!this.ws&&(this.ws.readyState==WebSocket.OPEN||this.ws.readyState!=WebSocket.CLOSING&&this.ws.readyState!=WebSocket.CLOSED&&await new Promise((e=>this.onWsOpenCloseCbs.add(e))))}async sendWs(e){await this.waitForWsConnected()&&this.ws.send(JSON.stringify(e))}async sendJoinRoomId(e){await this.sendWs({op:"joinRoom",roomId:e})}async requestNewRoomId(){await this.sendJoinRoomId(null)}async waitForRoomJoin(){await new Promise((e=>this.onRoomJoinCbs.add(e)))}async waitForWebSocketFail(){await new Promise((e=>this.onWsOpenCloseCbs.add((t=>{t||e()}))))}async sendRequestNewTurnCredentials(){await this.sendWs({op:"requestNewTurnCredentials"})}removeOldPreviousUuids(){this.myPreviousUuids=this.myPreviousUuids.filter((e=>performance.now()-e.time<1e4))}async sendMyPreviousUuids(){this.removeOldPreviousUuids();const e=this.myPreviousUuids.map((e=>e.uuid));this.myUuid&&e.push(this.myUuid),await this.sendWs({op:"previousUuids",uuids:e})}setCurrentHostUuid(e){if(e==this.hostUuid)return;const t=this.hostUuid;if(this.hostUuid=e,null==t&&e==this.myUuid&&this.hostConnectionInit)return;const i=this.hasReceivedFullHostState&&this.thisRoomHostConnectionHasBeenInit;if(i||(this.unsetHostConnectionInit(),this.resetGame()),this.hasStartedThisGame&&this.hasReceivedFullHostState||(main.game.newGameStarted(),this.hasStartedThisGame=!0),e==this.myUuid){for(const e of this.managedRtcConnections.values())e.unsetHost(),e.sendIAmHost();this.createLocalHostServer()}else{this.destroyLocalHostServer();for(const[e,t]of this.managedRtcConnections)e!=this.hostUuid&&t.unsetHost();this.unsetHostConnectionInit();for(const[e,t]of this.managedRtcConnections)e==this.hostUuid&&t.setHost()}i&&main.game.onHostConnectionChanged()}closeNonHostConnections(){for(const[e,t]of this.managedRtcConnections)e!=this.hostUuid&&t.close()}createLocalHostServer(){if(this.localHostServer)return;this.localHostServer=new LocalHostServer,this.updateIsMultiplayer(),this.updateConnectionState();let e=null;this.hasReceivedFullHostState&&(e=main.game.getClientStateForNewServer()),this.localHostServer.copyStateFromClient(e),this.localHostServer.userJoined(this.myUuid,!0);for(const[e,t]of this.managedRtcConnections)this.localHostServer.userJoined(e);this.fireHostConnectionInitCbs()}destroyLocalHostServer(){this.localHostServer&&(this.localHostServer=null,this.updateIsMultiplayer(),this.updateConnectionState())}async waitForHostConnectionInit(){this.hostConnectionInit||await new Promise((e=>this.onHostConnectionInitCbs.add(e)))}fireHostConnectionInitCbs(){this.hostConnectionInit=!0,this.thisRoomHostConnectionHasBeenInit=!0;for(const e of this.onHostConnectionInitCbs)e();this.onHostConnectionInitCbs.clear(),this.updateIsMultiplayer(),this.sendCurrentTabActiveToHost(),this.doHostPing()}unsetHostConnectionInit(){this.hostConnectionInit=!1,this.updateIsMultiplayer()}async createConnection(e,t=null){const i=null==t;if(e==this.myUuid)return null;let n=this.managedRtcConnections.get(e);if(n){if(n.testConnectionAlive())return n}return n||(i&&(t=MathUtils.generateUUID()),n=new ManagedRtcConnection(e,t,this,i),this.hostUuid&&e==this.hostUuid&&n.setHost(),this.managedRtcConnections.set(e,n),this.updateConnectionState()),n.onOpen((e=>{this.isHost?this.localHostServer.userJoined(n.otherClientUuid):n.isHost&&this.fireHostConnectionInitCbs()})),n.onMessage((e=>{this.isHost?this.localHostServer.onClientMessage(n.otherClientUuid,e):n.isHost&&this.hostConnection.onMessageFromServer(e)})),n.onUuidChange(((e,t)=>{t==this.hostUuid&&n.setHost(),this.isHost&&this.localHostServer.userUuidChanged(e,t)})),n.onKnowsItIsHostChange((e=>{e?this.fireHostConnectionInitCbs():this.unsetHostConnectionInit()})),n.onClose((e=>{this.managedRtcConnections.delete(n.otherClientUuid),this.retryUuidsAfterClose.has(n.otherClientUuid)?(this.retryUuidsAfterClose.delete(n.otherClientUuid),this.createConnection(n.otherClientUuid)):(this.startNoConnectionTimeout(),n.clonedUuidChangeConnection||(this.isHost?this.localHostServer.userLeft(n.otherClientUuid):n.isHost&&this.unsetHostConnectionInit())),n.destructor(),this.updateReportedConnectionTypesTimeout.execute()})),n.onConnectedChange((e=>{this.updateConnectionState()})),this.updateReportedConnectionTypesTimeout.start(),n}connectionUuidChanged(e,t){if(e==t)return;const i=this.managedRtcConnections.get(e);if(i){const n=this.managedRtcConnections.get(t);n&&(n.markClonedUuidChangeConnection(),n.close()),this.managedRtcConnections.delete(e),this.managedRtcConnections.set(t,i),i.changeUuid(t)}}connectionNeedsRetry(e){this.retryUuidsAfterClose.add(e.otherClientUuid)}async onRtcDescription(e,t,i){let n=await this.createConnection(e,t);n&&n.onRtcDescription(t,i)}async sendRtcDescription(e,t,i){await this.sendWs({op:"rtcDescription",uuid:e,connectionUuid:t,description:i})}async sendRtcIceCandidate(e,t,i){await this.sendWs({op:"rtcIceCandidate",uuid:e,connectionUuid:t,candidate:i})}onRtcIceCandidate(e,t,i){this.managedRtcConnections.get(e).onRtcIceCandidate(t,i)}sendServerMessageToClients(e,t=null,i=null){if(this.isHost){i&&i.includes(this.myUuid)||t&&!t.includes(this.myUuid)||this.hostConnection.onMessageFromServer(e);for(const[n,r]of this.managedRtcConnections)i&&i.includes(n)||t&&!t.includes(n)||r.send(e)}}async sendMessageToHost(e){const t=this.currentHostSymbol;if(await this.waitForHostConnectionInit(),t==this.currentHostSymbol)if(this.isHost)this.localHostServer.onClientMessage(this.myUuid,e);else for(const[t,i]of this.managedRtcConnections)i.isHost&&i.send(e)}sendMessageToAll(e){for(const t of this.managedRtcConnections.values())t.send(e)}get lastDocumentHiddenTime(){return document.hidden?performance.now():this.lastDocumentHideTime}sendCurrentTabActiveToHost(){this.hostConnection.sendMyTabActive(!document.hidden)}doHostPing(){this.lastHostPingTime=performance.now(),this.hostConnection.sendPing()}sendAliveRequests(){const e=HostConnection.composeMessage([HostConnection.ServerAction.ARE_YOU_STILL_THERE]);this.sendMessageToAll(e)}receivedHostPong(e){this.lastPing=performance.now()-this.lastHostPingTime,this.serverTimeOffset=e-performance.now(),Math.abs(this.smoothServerTimeOffset-this.serverTimeOffset)>1e3&&(this.smoothServerTimeOffset=this.serverTimeOffset)}fullHostStateReceived(){if(!this.hasReceivedFullHostState){this.hasReceivedFullHostState=!0,this.updateConnectionState(),this.sendWs({op:"makeCapableHost"});for(const e of this.onFullHostStateReceivedCbs)e();this.onFullHostStateReceivedCbs.clear()}}async updateReportedConnectionTypes(){const e=await Promise.all(Array.from(main.networkManager.managedRtcConnections.values()).map((e=>e.guessConnectionType())));await this.sendWs({op:"reportConnectionTypes",types:e})}async waitForFullHostState(){this.hasReceivedFullHostState||await new Promise((e=>this.onFullHostStateReceivedCbs.add(e)))}}class InputPlayer{constructor(){this.linkedPlayer=null,this.resetInputs(),this.lastPressedKey=null,this.lastPressedKeyWasDown=!1,this.lastInputTime=0,this.onMainPressedCbs=[]}destructor(){this.linkedPlayer=null,this.resetInputs()}resetInputs(){this.leftPressed=!1,this.rightPressed=!1,this.upPressed=!1,this.downPressed=!1,this.mainButtonPressed=!1,this.inputDirection2D=new Vector2,this.inputDirection2DNonDirectional=new Vector2,this.inputDirection3D=new Vector3,this.customInputDirection2D=new Vector2,this.customInputDirection2DDirectional=new Vector2,this.customInputDirection3D=new Vector3}loop(){}keyboardEvent(e,t){}updateInputDirection(){this.inputDirection2D=new Vector2,this.rightPressed&&(this.inputDirection2D.x-=1),this.leftPressed&&(this.inputDirection2D.x+=1),this.upPressed&&(this.inputDirection2D.y+=1),this.downPressed&&(this.inputDirection2D.y-=1),this.inputDirection2D.add(this.customInputDirection2D),this.inputDirection3D=main.cam.getInputDirection(this.inputDirection2DNonDirectional),this.inputDirection3D.add(this.customInputDirection3D);let e=this.inputDirection2DNonDirectional.length()+this.customInputDirection3D.length();e=clamp01(e),this.inputDirection3D.setLength(e),(this.inputDirection2D.length()>0||this.inputDirection2DNonDirectional.length()>0||this.inputDirection3D.length()>0)&&(this.lastInputTime=main.now)}fireMainPressed(){for(const e of this.onMainPressedCbs)e();this.lastInputTime=main.now}onMainPressed(e){this.onMainPressedCbs.push(e)}removeOnMainPressed(e){let t=this.onMainPressedCbs.indexOf(e);t>=0&&this.onMainPressedCbs.splice(t,1)}}class InputPlayerMain extends InputPlayer{constructor(){super(),this.keys={left:["KeyA","ArrowLeft","KeyJ","Numpad4"],right:["KeyD","ArrowRight","KeyL","Numpad6"],up:["KeyW","ArrowUp","KeyI","Numpad8"],down:["KeyS","ArrowDown","KeyK","Numpad5"],main:["Enter","Space","NumpadEnter"],leftKeyCode:[65,37,74,100],rightKeyCode:[68,39,76,102],upKeyCode:[87,38,73,104],downKeyCode:[83,40,75,101],mainKeyCode:[13,32]},this.touchListener=document.createElement("div"),this.touchListener.classList.add("touchListener","fullScreen"),document.body.appendChild(this.touchListener),this.touchJoystickPad=document.createElement("div"),this.touchJoystickPad.classList.add("touchJoystickPad"),document.body.appendChild(this.touchJoystickPad),this.touchJoystick=document.createElement("div"),this.touchJoystick.classList.add("touchJoystick"),this.touchJoystickPad.appendChild(this.touchJoystick),this.setTouchPadOpacity(0),this.touchPadRadius=100,this.touchPadMoveRadius=170,this.didTouchEndJoystick=!1,this.lastJoystickTouchEndTime=0,this.touchListener.addEventListener("touchstart",(e=>{this.updateTouches(e),this.fireOnAnyInput()}),{passive:!1}),this.touchListener.addEventListener("touchmove",(e=>{this.updateTouches(e)}),{passive:!1}),this.touchListener.addEventListener("touchend",(e=>{this.updateTouches(e)}),{passive:!1}),this.touchListener.addEventListener("mousemove",(e=>{this.updateMouse(e)})),this.touchListener.addEventListener("click",(e=>{this.ignoreMouseUntilClick=!1,this.fireMainPressed(),this.fireOnAnyInput()})),this.currentTouchInputDirection=new Vector2,this.currentGamepadInputDirection=new Vector2,this.gamepadMainPressed=!1,this.gamepadActive=!1,this.lastActiveTouchId=null,this.touchTargetPos=null,this.lastActiveTouchPosition=null,this.hasMovedLastTouch=!1,this.farTouchPosition=null,this.ignoreMouseUntilClick=!1,this.lastMouseX=-100,this.lastMouseY=-100,this.lastMousePosition=null,this.useMouse=!0,this.onAnyInputCbs=[],this.lastUsedInputType="none",this.onInputTypeChangeCbs=new Set}destructor(){super.destructor(),this.touchListener.parentElement&&this.touchListener.parentElement.removeChild(this.touchListener),this.touchListener=null}resetInputs(){super.resetInputs(),this.currentTouchInputDirection=new Vector2,this.touchTargetPos=null}loop(e,t){super.loop(),this.currentGamepadInputDirection=new Vector2;let i=navigator.getGamepads(),n=!1;for(const e of i){if(!e)continue;let t=new Vector2(-e.axes[0],-e.axes[1]);t.length()<.05?t.set(0,0):(this.setCursorVisibility(!1),this.setLastUsedInputType("gamepad")),this.currentGamepadInputDirection.add(t),e.buttons&&e.buttons.length>0&&e.buttons[0].pressed&&(n=!0,this.fireOnAnyInput())}if(n!=this.gamepadMainPressed&&(this.gamepadMainPressed=n,this.mainButtonPressed=n,n&&this.fireMainPressed()),this.linkedPlayer)if(this.touchTargetPos){let e=this.touchTargetPos.clone().sub(this.linkedPlayer.pos);e.length()<1&&(this.touchTargetPos=null,this.currentTouchInputDirection=new Vector2),this.customInputDirection3D.copy(e)}else if(this.lastMousePosition&&this.useMouse&&document.hasFocus()){let e=this.screenToWorld(this.lastMousePosition).clone().sub(this.linkedPlayer.pos);this.customInputDirection3D.copy(e)}else this.customInputDirection3D.set(0,0,0);else this.customInputDirection3D.set(0,0,0);this.didTouchEndJoystick&&e-this.lastJoystickTouchEndTime>3e3&&(this.setTouchPadOpacity(0),this.didTouchEndJoystick=!1);let r=this.currentGamepadInputDirection.length()>.1;this.gamepadActive!=r&&(this.gamepadActive=r,r&&(this.useMouse=!1,this.touchTargetPos=null,this.currentTouchInputDirection=new Vector2)),this.updateTouchGamepadInputDirection(),this.updateInputDirection()}keyboardEvent(e,t){super.keyboardEvent(e,t),e.code,!e.code&&e.keyCode;let i=!1,n=!1;this.testKeyPressed(e,this.keys.left,this.keys.leftKeyCode)&&(n=!0,this.leftPressed!=t&&(this.leftPressed=t,this.ignoreMouseUntilClick=!0,i=!0)),this.testKeyPressed(e,this.keys.right,this.keys.rightKeyCode)&&(n=!0,this.rightPressed!=t&&(this.rightPressed=t,this.ignoreMouseUntilClick=!0,i=!0)),this.testKeyPressed(e,this.keys.up,this.keys.upKeyCode)&&(n=!0,this.upPressed!=t&&(this.upPressed=t,this.ignoreMouseUntilClick=!0,i=!0)),this.testKeyPressed(e,this.keys.down,this.keys.downKeyCode)&&(n=!0,this.downPressed!=t&&(this.downPressed=t,this.ignoreMouseUntilClick=!0,i=!0)),this.testKeyPressed(e,this.keys.main,this.keys.mainKeyCode)&&(n=!0,this.mainButtonPressed!=t&&(this.mainButtonPressed=t,i=!0,t&&this.fireMainPressed())),n&&e.preventDefault(),i&&(this.useMouse=!1,this.touchTargetPos=null,this.currentTouchInputDirection=new Vector2,this.setLastUsedInputType("keyboard")),this.updateInputDirection(),this.setCursorVisibility(!1)}testKeyPressed(e,t,i){let n=e.code,r=n?null:e.keyCode;return n&&t.includes(n)||r&&i.includes(r)}updateTouches(e){e.preventDefault();let t=null;for(const i of e.touches)if(null==this.lastActiveTouchId||i.identifier==this.lastActiveTouchId){t=i;break}if(null==t||"touchcancel"==e.type||"touchend"==e.type)this.lastActiveTouchId=null,this.farTouchPosition=null,!this.hasMovedLastTouch&&this.lastActiveTouchPosition?(this.touchTargetPos=this.screenToWorld(this.normalizeScreenPos(this.lastActiveTouchPosition)),main.game.addTapCircle(this.touchTargetPos),this.useMouse=!1,this.setLastUsedInputType("touch"),this.setTouchPadOpacity(0),this.didTouchEndJoystick=!1,this.fireMainPressed()):(this.setTouchPadOpacity(.2),this.lastJoystickTouchEndTime=main.now,this.didTouchEndJoystick=!0);else{let e=new Vector2(t.pageX,t.pageY);t.identifier!=this.lastActiveTouchId&&(this.lastActiveTouchId=t.identifier,this.hasMovedLastTouch=!1),this.lastActiveTouchPosition=e.clone(),this.farTouchPosition||(this.farTouchPosition=e.clone()),this.currentTouchInputDirection=this.farTouchPosition.clone().sub(e),this.currentTouchInputDirection.length()>5&&(this.hasMovedLastTouch=!0,this.useMouse=!1,this.setLastUsedInputType("touch"),this.touchTargetPos=null,this.setTouchPadOpacity(1),this.didTouchEndJoystick=!1);const i=this.currentTouchInputDirection.clone().clampLength(0,this.touchPadRadius),n=this.currentTouchInputDirection.clone().clampLength(0,this.touchPadMoveRadius);this.farTouchPosition.copy(e).add(n),this.hasMovedLastTouch&&this.setTouchJoystickPosition(this.farTouchPosition,i),this.currentTouchInputDirection.divideScalar(this.touchPadRadius),this.currentTouchInputDirection.clampLength(0,1)}this.updateTouchGamepadInputDirection()}updateTouchGamepadInputDirection(){this.inputDirection2DNonDirectional.copy(this.currentTouchInputDirection),this.inputDirection2DNonDirectional.add(this.currentGamepadInputDirection)}setTouchJoystickPosition(e,t){this.touchJoystickPad.style.transform=`translate(${e.x-this.touchPadRadius}px, ${e.y-this.touchPadRadius}px)`,this.touchJoystick.style.transform=`translate(${-t.x}px, ${-t.y}px)`}setTouchPadOpacity(e){this.touchJoystickPad.style.opacity=e}updateMouse(e){document.hasFocus()&&!this.ignoreMouseUntilClick&&(e.clientX,e.clientY,this.setMousePosition(e.clientX,e.clientY)),this.setCursorVisibility(!0)}setMousePosition(e,t){let i=this.normalizeScreenPos(new Vector2(e,t));null!=this.lastMousePosition&&this.lastMouseX==e&&this.lastMouseY==t||(this.lastMousePosition=i.clone(),this.useMouse=!0),this.lastMouseX=e,this.lastMouseY=t,this.setLastUsedInputType("mouse")}normalizeScreenPos(e){let t=new Vector2(e.x/main.renderer.width,e.y/main.renderer.height);return t.multiplyScalar(2),t.subScalar(1),t.y*=-1,t}screenToWorld(e){let t=new Raycaster;t.setFromCamera(e,main.cam.camera);let i=new Vector3;return t.ray.intersectPlane(new Plane(new Vector3(0,1,0)),i),i}setCursorVisibility(e){this.touchListener.classList.toggle("hiddenCursor",!e)}async waitForAnyInput(){await new Promise((e=>this.onAnyInputCbs.push(e)))}fireOnAnyInput(){for(const e of this.onAnyInputCbs)e();this.onAnyInputCbs=[]}setLastUsedInputType(e){this.lastUsedInputType=e;for(const e of this.onInputTypeChangeCbs)e(this.lastUsedInputType)}onInputTypeChange(e){this.onInputTypeChangeCbs.add(e)}}class InputPlayerBot extends InputPlayer{constructor(){super(),this.currentTargetObject=null,this.nextTargetChangeTime=0,this.minDucklingsForGoToNest=randInt(2,15)}loop(e,t){if(super.loop(),e>this.nextTargetChangeTime){this.nextTargetChangeTime=e+randRange(200,500);let t=main.game.ducklings.map((e=>{const t=e.pos.distanceTo(this.linkedPlayer.pos),i=e.getRootFollowingObject();let n=1;i&&i instanceof Player&&!i.isBot&&(n=i.getKarmaDucklingDistMultiplier());return{duckling:e,dist:t,rootFollowingObject:i,orderValue:t*n,karmaDistMultiplier:n}}));t.sort(((e,t)=>e.orderValue-t.orderValue));let i=1/0,n=null;for(const{duckling:e,dist:r,rootFollowingObject:s,karmaDistMultiplier:o}of t){if(s==this.linkedPlayer)continue;if(e.isGoingToNest)continue;if(s instanceof Player&&s.pos.distanceTo(e.pos)<5*o)continue;let t=!1;for(const i of main.game.nests)if(!this.linkedPlayer.myNests.has(i)&&e.pos.distanceTo(i.pos)<10){t=!0;break}if(t)continue;let a=!1,l=0;for(const t of main.game.players.values()){if(t==this.linkedPlayer)continue;const i=e.pos.distanceTo(t.pos);if(i<5&&l++,r>i&&i<10){if(e.pos.sub(t.pos).normalize().angleTo(t.forward)<.3){a=!0;break}}}if(!a&&l<4){i=r,n=e;break}}if(i>100/Array.from(this.linkedPlayer.traverseChildDucklings()).length-5){let e=null,t=1/0;for(const i of this.linkedPlayer.myNests){const n=this.linkedPlayer.pos.distanceTo(i.pos);n<t&&(t=n,e=i)}this.currentTargetObject=e}else this.currentTargetObject=n}if(this.currentTargetObject&&this.currentTargetObject.obj){let e=this.currentTargetObject.pos.sub(this.linkedPlayer.pos);this.customInputDirection3D.copy(e)}this.updateInputDirection()}}class InputManager{constructor(){this.inputPlayers=[],window.addEventListener("blur",(e=>{for(const e of this.inputPlayers)e.resetInputs()})),this.mainInput=new InputPlayerMain,this.inputPlayers.push(this.mainInput)}init(){window.addEventListener("keydown",(e=>{this.setKeyPressed(e,!0)})),window.addEventListener("keyup",(e=>{this.setKeyPressed(e,!1)}))}removeInputPlayer(e){e.destructor();let t=this.inputPlayers.indexOf(e);t>=0&&this.inputPlayers.splice(t,1)}loop(e,t){for(const i of this.inputPlayers)i.loop(e,t)}setKeyPressed(e,t){if("INPUT"!=document.activeElement.tagName)for(const i of this.inputPlayers)i.keyboardEvent(e,t)}createBot(){let e=new InputPlayerBot;return this.inputPlayers.push(e),e}getClickActionText(){let e=null;return e="touch"==this.mainInput.lastUsedInputType?"tap":"click",e}}class RigidBody{constructor(){this.drag=.95,this.pos=new Vector3,this.velocity=new Vector3,this.beforeLoopCbs=[]}destructor(){this.pos=null,this.velocity=null,this.beforeLoopCbs=[],main.physics.removeRigidBody(this)}loop(e,t){for(const t of this.beforeLoopCbs)t(e);let i=lerptt10(this.drag,e/16.6666);this.velocity.multiplyScalar(i),this.pos.addScaledVector(this.velocity,e/16.66)}addBeforeLoopCb(e){this.beforeLoopCbs.push(e)}}class Physics{constructor(){this.iterations=10,this.rigidBodies=[]}loop(e,t){if(!main.game.allControllablePlayersPaused)for(let e=0;e<this.iterations;e++)this.loopPhysics(t/this.iterations)}loopPhysics(e){for(const t of this.rigidBodies)t.loop(e,this.rigidBodies)}createRigidBody(){let e=new RigidBody;return this.rigidBodies.push(e),e}removeRigidBody(e){let t=this.rigidBodies.indexOf(e);t>=0&&this.rigidBodies.splice(t,1)}}const GLTFLoader=function(){function e(e){this.manager=void 0!==e?e:DefaultLoadingManager,this.dracoLoader=null}function t(){var e={};return{get:function(t){return e[t]},add:function(t,i){e[t]=i},remove:function(t){delete e[t]},removeAll:function(){e={}}}}e.prototype={constructor:e,crossOrigin:"Anonymous",load:function(e,t,i,n){var r=this,s=void 0!==this.path?this.path:Loader.prototype.extractUrlBase(e),o=new FileLoader(r.manager);o.setResponseType("arraybuffer"),o.load(e,(function(e){try{r.parse(e,s,t,n)}catch(e){if(void 0===n)throw e;n(e)}}),i,n)},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e},setDRACOLoader:function(e){this.dracoLoader=e},parse:function(e,t,o,a){var u,d={};if("string"==typeof e)u=e;else if(E(new Uint8Array(e,0,4))===s){try{d[i.KHR_BINARY_GLTF]=new l(e)}catch(e){return void(a&&a(e))}u=d[i.KHR_BINARY_GLTF].content}else u=E(new Uint8Array(e));var p=JSON.parse(u);if(void 0===p.asset||p.asset.version[0]<2)a&&a(new Error("GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead."));else{p.extensionsUsed&&(p.extensionsUsed.indexOf(i.KHR_LIGHTS)>=0&&(d[i.KHR_LIGHTS]=new n(p)),p.extensionsUsed.indexOf(i.KHR_MATERIALS_COMMON)>=0&&(d[i.KHR_MATERIALS_COMMON]=new r),p.extensionsUsed.indexOf(i.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS)>=0&&(d[i.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]=new h),p.extensionsUsed.indexOf(i.KHR_DRACO_MESH_COMPRESSION)>=0&&(d[i.KHR_DRACO_MESH_COMPRESSION]=new c(this.dracoLoader)));var m=new R(p,d,{path:t||this.path||"",crossOrigin:this.crossOrigin,manager:this.manager});this.parser=m,m.parse((function(e,t,i,n){o({scene:e,scenes:t,cameras:i,animations:n})}),a)}}};var i={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS:"KHR_lights",KHR_MATERIALS_COMMON:"KHR_materials_common",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness"};function n(e){this.name=i.KHR_LIGHTS,this.lights={};var t=(e.extensions&&e.extensions[i.KHR_LIGHTS]||{}).lights||{};for(var n in t){var r,s=t[n],o=(new Color).fromArray(s.color);switch(s.type){case"directional":(r=new DirectionalLight(o)).position.set(0,0,1);break;case"point":r=new PointLight(o);break;case"spot":(r=new SpotLight(o)).position.set(0,0,1);break;case"ambient":r=new AmbientLight(o)}r&&(void 0!==s.constantAttenuation&&(r.intensity=s.constantAttenuation),void 0!==s.linearAttenuation&&(r.distance=1/s.linearAttenuation),void 0!==s.quadraticAttenuation&&(r.decay=s.quadraticAttenuation),void 0!==s.fallOffAngle&&(r.angle=s.fallOffAngle),void 0!==s.fallOffExponent&&console.warn("GLTFLoader:: light.fallOffExponent not currently supported."),r.name=s.name||"light_"+n,this.lights[n]=r)}}function r(e){this.name=i.KHR_MATERIALS_COMMON}r.prototype.getMaterialType=function(e){switch(e.extensions[this.name].type){case"commonBlinn":case"commonPhong":return MeshPhongMaterial;case"commonLambert":return MeshLambertMaterial;default:return MeshBasicMaterial}},r.prototype.extendParams=function(e,t,i){var n=t.extensions[this.name],r=[],s=[];switch(n.type){case"commonBlinn":case"commonPhong":s.push("diffuseFactor","diffuseTexture","specularFactor","specularTexture","shininessFactor");break;case"commonLambert":s.push("diffuseFactor","diffuseTexture")}var o={};return s.forEach((function(e){void 0!==n[e]&&(o[e]=n[e])})),void 0!==o.diffuseFactor&&(e.color=(new Color).fromArray(o.diffuseFactor),e.opacity=o.diffuseFactor[3]),void 0!==o.diffuseTexture&&r.push(i.assignTexture(e,"map",o.diffuseTexture.index)),void 0!==o.specularFactor&&(e.specular=(new Color).fromArray(o.specularFactor)),void 0!==o.specularTexture&&r.push(i.assignTexture(e,"specularMap",o.specularTexture.index)),void 0!==o.shininessFactor&&(e.shininess=o.shininessFactor),Promise.all(r)};var s="glTF",o=1313821514,a=5130562;function l(e){this.name=i.KHR_BINARY_GLTF,this.content=null,this.body=null;var t=new DataView(e,0,12);if(this.header={magic:E(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==s)throw new Error("GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.");for(var n=new DataView(e,12),r=0;r<n.byteLength;){var l=n.getUint32(r,!0);r+=4;var c=n.getUint32(r,!0);if(r+=4,c===o){var h=new Uint8Array(e,12+r,l);this.content=E(h)}else if(c===a){var u=12+r;this.body=e.slice(u,u+l)}r+=l}if(null===this.content)throw new Error("GLTFLoader: JSON content not found.")}function c(e){if(!e)throw new Error("GLTFLoader: No DRACOLoader instance provided.");this.name=i.KHR_DRACO_MESH_COMPRESSION,this.dracoLoader=e}function h(){return{name:i.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:["color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","displacementMap","displacementScale","displacementBias","specularMap","specular","glossinessMap","glossiness","alphaMap","envMap","envMapIntensity","refractionRatio"],getMaterialType:function(){return ShaderMaterial},extendParams:function(e,t,i){var n=t.extensions[this.name],r=ShaderLib.standard,s=UniformsUtils.clone(r.uniforms),o=["#ifdef USE_SPECULARMAP","\tuniform sampler2D specularMap;","#endif"].join("\n"),a=["#ifdef USE_GLOSSINESSMAP","\tuniform sampler2D glossinessMap;","#endif"].join("\n"),l=["vec3 specularFactor = specular;","#ifdef USE_SPECULARMAP","\tvec4 texelSpecular = texture2D( specularMap, vUv );","\ttexelSpecular = sRGBToLinear( texelSpecular );","\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture","\tspecularFactor *= texelSpecular.rgb;","#endif"].join("\n"),c=["float glossinessFactor = glossiness;","#ifdef USE_GLOSSINESSMAP","\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );","\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture","\tglossinessFactor *= texelGlossiness.a;","#endif"].join("\n"),h=["PhysicalMaterial material;","material.diffuseColor = diffuseColor.rgb;","material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );","material.specularColor = specularFactor.rgb;"].join("\n"),u=r.fragmentShader.replace("#include <specularmap_fragment>","").replace("uniform float roughness;","uniform vec3 specular;").replace("uniform float metalness;","uniform float glossiness;").replace("#include <roughnessmap_pars_fragment>",o).replace("#include <metalnessmap_pars_fragment>",a).replace("#include <roughnessmap_fragment>",l).replace("#include <metalnessmap_fragment>",c).replace("#include <lights_physical_fragment>",h);delete s.roughness,delete s.metalness,delete s.roughnessMap,delete s.metalnessMap,s.specular={value:(new Color).setHex(1118481)},s.glossiness={value:.5},s.specularMap={value:null},s.glossinessMap={value:null},e.vertexShader=r.vertexShader,e.fragmentShader=u,e.uniforms=s,e.defines={STANDARD:""},e.color=new Color(1,1,1),e.opacity=1;var d=[];if(Array.isArray(n.diffuseFactor)){var p=n.diffuseFactor;e.color.fromArray(p),e.opacity=p[3]}if(void 0!==n.diffuseTexture&&d.push(i.assignTexture(e,"map",n.diffuseTexture.index)),e.emissive=new Color(0,0,0),e.glossiness=void 0!==n.glossinessFactor?n.glossinessFactor:1,e.specular=new Color(1,1,1),Array.isArray(n.specularFactor)&&e.specular.fromArray(n.specularFactor),void 0!==n.specularGlossinessTexture){var m=n.specularGlossinessTexture.index;d.push(i.assignTexture(e,"glossinessMap",m)),d.push(i.assignTexture(e,"specularMap",m))}return Promise.all(d)},createMaterial:function(e){var t=new ShaderMaterial({defines:e.defines,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,uniforms:e.uniforms,fog:!0,lights:!0,opacity:e.opacity,transparent:e.transparent});return t.isGLTFSpecularGlossinessMaterial=!0,t.color=e.color,t.map=void 0===e.map?null:e.map,t.lightMap=null,t.lightMapIntensity=1,t.aoMap=void 0===e.aoMap?null:e.aoMap,t.aoMapIntensity=1,t.emissive=e.emissive,t.emissiveIntensity=1,t.emissiveMap=void 0===e.emissiveMap?null:e.emissiveMap,t.bumpMap=void 0===e.bumpMap?null:e.bumpMap,t.bumpScale=1,t.normalMap=void 0===e.normalMap?null:e.normalMap,e.normalScale&&(t.normalScale=e.normalScale),t.displacementMap=null,t.displacementScale=1,t.displacementBias=0,t.specularMap=void 0===e.specularMap?null:e.specularMap,t.specular=e.specular,t.glossinessMap=void 0===e.glossinessMap?null:e.glossinessMap,t.glossiness=e.glossiness,t.alphaMap=null,t.envMap=void 0===e.envMap?null:e.envMap,t.envMapIntensity=1,t.refractionRatio=.98,t.extensions.derivatives=!0,t},cloneMaterial:function(e){var t=e.clone();t.isGLTFSpecularGlossinessMaterial=!0;for(var i=this.specularGlossinessParams,n=0,r=i.length;n<r;n++)t[i[n]]=e[i[n]];return t},refreshUniforms:function(e,t,i,n,r,s){var o,a,l,c=r.uniforms,h=r.defines;if(c.opacity.value=r.opacity,c.diffuse.value.copy(r.color),c.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),c.map.value=r.map,c.specularMap.value=r.specularMap,c.alphaMap.value=r.alphaMap,c.lightMap.value=r.lightMap,c.lightMapIntensity.value=r.lightMapIntensity,c.aoMap.value=r.aoMap,c.aoMapIntensity.value=r.aoMapIntensity,r.map?o=r.map:r.specularMap?o=r.specularMap:r.displacementMap?o=r.displacementMap:r.normalMap?o=r.normalMap:r.bumpMap?o=r.bumpMap:r.glossinessMap?o=r.glossinessMap:r.alphaMap?o=r.alphaMap:r.emissiveMap&&(o=r.emissiveMap),void 0!==o)if(o.isWebGLRenderTarget&&(o=o.texture),void 0!==o.matrix){if(!0===o.matrixAutoUpdate){a=o.offset,l=o.repeat;var u=o.rotation,d=o.center;o.matrix.setUvTransform(a.x,a.y,l.x,l.y,u,d.x,d.y)}c.uvTransform.value.copy(o.matrix)}else a=o.offset,l=o.repeat,c.offsetRepeat.value.set(a.x,a.y,l.x,l.y);c.envMap.value=r.envMap,c.envMapIntensity.value=r.envMapIntensity,c.flipEnvMap.value=r.envMap&&r.envMap.isCubeTexture?-1:1,c.refractionRatio.value=r.refractionRatio,c.specular.value.copy(r.specular),c.glossiness.value=r.glossiness,c.glossinessMap.value=r.glossinessMap,c.emissiveMap.value=r.emissiveMap,c.bumpMap.value=r.bumpMap,c.normalMap.value=r.normalMap,c.displacementMap.value=r.displacementMap,c.displacementScale.value=r.displacementScale,c.displacementBias.value=r.displacementBias,null!==c.glossinessMap.value&&void 0===h.USE_GLOSSINESSMAP&&(h.USE_GLOSSINESSMAP="",h.USE_ROUGHNESSMAP=""),null===c.glossinessMap.value&&void 0!==h.USE_GLOSSINESSMAP&&(delete h.USE_GLOSSINESSMAP,delete h.USE_ROUGHNESSMAP)}}}c.prototype.decodeAccessors=function(e){for(var t=e.json.meshes,n=0,r=t.length;n<r;n++)for(var s=t[n].primitives,o=0,a=s.length;o<a;o++){var l=s[o];l.extensions&&l.extensions[i.KHR_DRACO_MESH_COMPRESSION]&&this.decodePrimitiveAccessors(l,e)}},c.prototype.decodePrimitiveAccessors=function(e,t){var i=this.dracoLoader,n=t.json.accessors,r=e.extensions[this.name].bufferView,s={},o={};o[-1]=v[n[e.indices].componentType];var a=[e.extensions[this.name].attributes],l=e.extensions[this.name].targets,c=[e.attributes],h=e.targets;void 0!==l&&(a=a.concat(l),c=c.concat(h));for(var u=0,d=a.length;u<d;++u){var p=a[u],m=c[u];for(var f in p){var g=p[f],y=m[f];s[g]=y,o[g]=v[n[y].componentType]}}var b=t.getDependency("bufferView",r).then((function(e){return new Promise((function(t){i.decodeDracoFileData(e,t,o)}))}));t.setDependency("accessor",e.indices,b.then((function(t){var i=t.indices,r=e.indices;return new BufferAttribute(i,S[n[r].type],!1)})));for(let e in s){let i=s[e];t.setDependency("accessor",i,b.then((function(t){return new BufferAttribute(t.attributes[e],S[n[i].type],!0===n[i].normalized)})))}};var u=0,d=1,p=2,m=3,f=4,g=5,y=6,v={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},b={9728:1003,9729:1006,9984:1004,9985:1007,9986:1005,9987:1008},_={33071:1001,33648:1002,10497:1e3},x={6406:1021,6407:1022,6408:1023,6409:1024,6410:1025},w={5121:1009,32819:1017,32820:1018,33635:1019},S={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},M={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},C={CATMULLROMSPLINE:2302,CUBICSPLINE:2302,LINEAR:2301,STEP:2300},T="OPAQUE",A="MASK";function L(e,t){return"string"!=typeof e||""===e?"":/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e}function E(e){if(void 0!==window.TextDecoder)return(new TextDecoder).decode(e);for(var t="",i=0,n=e.length;i<n;i++)t+=String.fromCharCode(e[i]);return t}function P(e,t,i,n){var r=e.geometry,s=e.material,o=i.targets,a=r.morphAttributes;a.position=[],a.normal=[],s.morphTargets=!0;for(var l=0,c=o.length;l<c;l++){var h,u,d=o[l],p="morphTarget"+l;if(void 0!==d.POSITION){h=n[d.POSITION].clone();for(var m=r.attributes.position,f=0,g=h.count;f<g;f++)h.setXYZ(f,h.getX(f)+m.getX(f),h.getY(f)+m.getY(f),h.getZ(f)+m.getZ(f))}else r.attributes.position&&(h=r.attributes.position.clone());if(void 0!==h&&(h.name=p,a.position.push(h)),void 0!==d.NORMAL){s.morphNormals=!0,u=n[d.NORMAL].clone();var y=r.attributes.normal;for(f=0,g=u.count;f<g;f++)u.setXYZ(f,u.getX(f)+y.getX(f),u.getY(f)+y.getY(f),u.getZ(f)+y.getZ(f))}else void 0!==r.attributes.normal&&(u=r.attributes.normal.clone());void 0!==u&&(u.name=p,a.normal.push(u))}if(e.updateMorphTargets(),void 0!==t.weights)for(l=0,c=t.weights.length;l<c;l++)e.morphTargetInfluences[l]=t.weights[l];if(t.extras&&Array.isArray(t.extras.targetNames)){var v=t.extras.targetNames;if(e.morphTargetInfluences.length===v.length){e.morphTargetDictionary={};for(l=0,c=v.length;l<c;l++)e.morphTargetDictionary[v[l]]=l}else console.warn("GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function R(e,i,n){this.json=e||{},this.extensions=i||{},this.options=n||{},this.cache=new t,this.textureLoader=new TextureLoader(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new FileLoader(this.options.manager),this.fileLoader.setResponseType("arraybuffer")}return R.prototype.parse=function(e,t){var n=this.json,r=this;this.cache.removeAll(),this.markDefs(),void 0!==r.extensions[i.KHR_DRACO_MESH_COMPRESSION]&&r.extensions[i.KHR_DRACO_MESH_COMPRESSION].decodeAccessors(r),this.getMultiDependencies(["scene","animation","camera"]).then((function(t){var i=t.scenes||[],r=i[n.scene||0],s=t.animations||[],o=t.cameras||[];e(r,i,o,s)})).catch(t)},R.prototype.markDefs=function(){for(var e=this.json.nodes||[],t=this.json.skins||[],i=this.json.meshes||[],n={},r={},s=0,o=t.length;s<o;s++)for(var a=t[s].joints,l=0,c=a.length;l<c;l++)e[a[l]].isBone=!0;for(var h=0,u=e.length;h<u;h++){var d=e[h];void 0!==d.mesh&&(void 0===n[d.mesh]&&(n[d.mesh]=r[d.mesh]=0),n[d.mesh]++,void 0!==d.skin&&(i[d.mesh].isSkinnedMesh=!0))}this.json.meshReferences=n,this.json.meshUses=r},R.prototype.setDependency=function(e,t,i){var n=e+":"+t;this.cache.add(n,i)},R.prototype.getDependency=function(e,t){var i=e+":"+t,n=this.cache.get(i);n||(n=this["load"+e.charAt(0).toUpperCase()+e.slice(1)](t),this.cache.add(i,n));return n},R.prototype.getDependencies=function(e){var t=this.cache.get(e);if(!t){var i=this,n=this.json[e+("mesh"===e?"es":"s")]||[];t=Promise.all(n.map((function(t,n){return i.getDependency(e,n)}))),this.cache.add(e,t)}return t},R.prototype.getMultiDependencies=function(e){for(var t={},i=[],n=0,r=e.length;n<r;n++){var s=e[n],o=this.getDependencies(s);o=o.then(function(e,i){t[e]=i}.bind(this,s+("mesh"===s?"es":"s"))),i.push(o)}return Promise.all(i).then((function(){return t}))},R.prototype.loadBuffer=function(e){var t=this.json.buffers[e],n=this.fileLoader;if(t.type&&"arraybuffer"!==t.type)throw new Error("GLTFLoader: "+t.type+" buffer type is not supported.");if(void 0===t.uri&&0===e)return Promise.resolve(this.extensions[i.KHR_BINARY_GLTF].body);var r=this.options;return new Promise((function(e,i){n.load(L(t.uri,r.path),e,void 0,(function(){i(new Error('GLTFLoader: Failed to load buffer "'+t.uri+'".'))}))}))},R.prototype.loadBufferView=function(e){var t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then((function(e){var i=t.byteLength||0,n=t.byteOffset||0;return e.slice(n,n+i)}))},R.prototype.loadAccessor=function(e){var t=this.json,i=this.json.accessors[e];if(void 0===i.bufferView)return null;var n=[];return void 0!==i.bufferView?n.push(this.getDependency("bufferView",i.bufferView)):n.push(null),void 0!==i.sparse&&(n.push(this.getDependency("bufferView",i.sparse.indices.bufferView)),n.push(this.getDependency("bufferView",i.sparse.values.bufferView))),Promise.all(n).then((function(e){var n,r=e[0],s=S[i.type],o=v[i.componentType],a=o.BYTES_PER_ELEMENT,l=a*s,c=t.bufferViews[i.bufferView].byteStride,h=!0===i.normalized;c&&c!==l?n=new InterleavedBufferAttribute(new InterleavedBuffer(new o(r),c/a),s,i.byteOffset/a,h):n=new BufferAttribute(null===r?new o(i.count*s):new o(r,i.byteOffset,i.count*s),s,h);if(void 0!==i.sparse){var u=S.SCALAR,d=v[i.sparse.indices.componentType],p=i.sparse.indices.byteOffset||0,m=i.sparse.values.byteOffset||0,f=new d(e[1],p,i.sparse.count*u),g=new o(e[2],m,i.sparse.count*s);null!==r&&n.setArray(n.array.slice());for(var y=0,b=f.length;y<b;y++){var _=f[y];if(n.setX(_,g[y*s]),s>=2&&n.setY(_,g[y*s+1]),s>=3&&n.setZ(_,g[y*s+2]),s>=4&&n.setW(_,g[y*s+3]),s>=5)throw new Error("GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return n}))},R.prototype.loadTexture=function(e){var t=this.json,i=this.options,n=this.textureLoader,r=window.URL||window.webkitURL,s=t.textures[e],o=t.images[s.source],a=o.uri,l=!1;return void 0!==o.bufferView&&(a=this.getDependency("bufferView",o.bufferView).then((function(e){l=!0;var t=new Blob([e],{type:o.mimeType});return a=r.createObjectURL(t)}))),Promise.resolve(a).then((function(e){var t=Loader.Handlers.get(e)||n;return new Promise((function(n,r){t.load(L(e,i.path),n,void 0,r)}))})).then((function(e){!0===l&&r.revokeObjectURL(a),e.flipY=!1,void 0!==s.name&&(e.name=s.name),e.format=void 0!==s.format?x[s.format]:1023,void 0!==s.internalFormat&&e.format!==x[s.internalFormat]&&console.warn("GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."),e.type=void 0!==s.type?w[s.type]:1009;var i=(t.samplers||{})[s.sampler]||{};return e.magFilter=b[i.magFilter]||1006,e.minFilter=b[i.minFilter]||1008,e.wrapS=_[i.wrapS]||1e3,e.wrapT=_[i.wrapT]||1e3,e}))},R.prototype.assignTexture=function(e,t,i){return this.getDependency("texture",i).then((function(i){e[t]=i}))},R.prototype.loadMaterial=function(e){var t=this;this.json;var n,r=this.extensions,s=this.json.materials[e],o={},a=s.extensions||{},l=[];if(a[i.KHR_MATERIALS_COMMON]){var c=r[i.KHR_MATERIALS_COMMON];n=c.getMaterialType(s),l.push(c.extendParams(o,s,t))}else if(a[i.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var h=r[i.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];n=h.getMaterialType(s),l.push(h.extendParams(o,s,t))}else if(void 0!==s.pbrMetallicRoughness){n=MeshStandardMaterial;var u=s.pbrMetallicRoughness;if(o.color=new Color(1,1,1),o.opacity=1,Array.isArray(u.baseColorFactor)){var d=u.baseColorFactor;o.color.fromArray(d),o.opacity=d[3]}if(void 0!==u.baseColorTexture&&l.push(t.assignTexture(o,"map",u.baseColorTexture.index)),o.metalness=void 0!==u.metallicFactor?u.metallicFactor:1,o.roughness=void 0!==u.roughnessFactor?u.roughnessFactor:1,void 0!==u.metallicRoughnessTexture){var p=u.metallicRoughnessTexture.index;l.push(t.assignTexture(o,"metalnessMap",p)),l.push(t.assignTexture(o,"roughnessMap",p))}}else n=MeshPhongMaterial;!0===s.doubleSided&&(o.side=2);var m=s.alphaMode||T;return m!==T?(o.transparent=!0,m===A&&(o.alphaTest=void 0!==s.alphaCutoff?s.alphaCutoff:.5)):o.transparent=!1,void 0!==s.normalTexture&&(l.push(t.assignTexture(o,"normalMap",s.normalTexture.index)),o.normalScale=new Vector2(1,1),void 0!==s.normalTexture.scale&&o.normalScale.set(s.normalTexture.scale,s.normalTexture.scale)),void 0!==s.occlusionTexture&&(l.push(t.assignTexture(o,"aoMap",s.occlusionTexture.index)),void 0!==s.occlusionTexture.strength&&(o.aoMapIntensity=s.occlusionTexture.strength)),void 0!==s.emissiveFactor&&(n===MeshBasicMaterial?o.color=(new Color).fromArray(s.emissiveFactor):o.emissive=(new Color).fromArray(s.emissiveFactor)),void 0!==s.emissiveTexture&&(n===MeshBasicMaterial?l.push(t.assignTexture(o,"map",s.emissiveTexture.index)):l.push(t.assignTexture(o,"emissiveMap",s.emissiveTexture.index))),Promise.all(l).then((function(){var e;return e=n===ShaderMaterial?r[i.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(o):new n(o),void 0!==s.name&&(e.name=s.name),e.normalScale&&(e.normalScale.x=-e.normalScale.x),e.map&&(e.map.encoding=3001),e.emissiveMap&&(e.emissiveMap.encoding=3001),s.extras&&(e.userData=s.extras),e}))},R.prototype.loadGeometries=function(e){return this.getDependencies("accessor").then((function(t){for(var i=[],n=0,r=e.length;n<r;n++){var s=e[n],o=new BufferGeometry,a=s.attributes;for(var l in a){var c=t[a[l]];switch(l){case"POSITION":o.setAttribute("position",c);break;case"NORMAL":o.setAttribute("normal",c);break;case"TEXCOORD_0":case"TEXCOORD0":case"TEXCOORD":o.setAttribute("uv",c);break;case"TEXCOORD_1":o.setAttribute("uv2",c);break;case"COLOR_0":case"COLOR0":case"COLOR":o.setAttribute("color",c);break;case"WEIGHTS_0":case"WEIGHT":o.setAttribute("skinWeight",c);break;case"JOINTS_0":case"JOINT":o.setAttribute("skinIndex",c)}}void 0!==s.indices&&o.setIndex(t[s.indices]),i.push(o)}return i}))},R.prototype.loadMesh=function(e){var t=this;this.json;var n=this.extensions,r=this.json.meshes[e];return this.getMultiDependencies(["accessor","material"]).then((function(s){var o=new Group,a=r.primitives;return void 0!==r.name&&(o.name=r.name),r.extras&&(o.userData=r.extras),t.loadGeometries(a).then((function(t){for(var l=0,c=a.length;l<c;l++){var h=a[l],v=t[l],b=void 0===h.material?new MeshStandardMaterial({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:0}):s.materials[h.material];b.aoMap&&void 0===v.attributes.uv2&&void 0!==v.attributes.uv&&(console.log("GLTFLoader: Duplicating UVs to support aoMap."),v.setAttribute("uv2",new BufferAttribute(v.attributes.uv.array,2)));var _,x=void 0!==v.attributes.color,w=void 0===v.attributes.normal,S=!0===r.isSkinnedMesh,M=void 0!==h.targets;if(x||w||S||M)if(b.isGLTFSpecularGlossinessMaterial)b=n[i.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(b);else b=b.clone();if(x&&(b.vertexColors=2,b.needsUpdate=!0),w&&(b.flatShading=!0),h.mode===f||h.mode===g||h.mode===y||void 0===h.mode)S?(_=new SkinnedMesh(v,b),b.skinning=!0):_=new Mesh(v,b),h.mode===g?_.drawMode=1:h.mode===y&&(_.drawMode=2);else if(h.mode===d)_=new LineSegments(v,b);else if(h.mode===m)_=new Line(v,b);else if(h.mode===p)_=new LineLoop(v,b);else{if(h.mode!==u)throw new Error("GLTFLoader: Primitive mode unsupported: ",h.mode);_=new Points(v,b)}if(_.name=r.name||"mesh_"+e,M&&P(_,r,h,s.accessors),h.extras&&(_.userData=h.extras),!0===b.isGLTFSpecularGlossinessMaterial&&(_.onBeforeRender=n[i.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms),!(a.length>1))return _;_.name+="_"+l,o.add(_)}return o}))}))},R.prototype.loadCamera=function(e){var t,i=this.json.cameras[e],n=i[i.type];if(n){if("perspective"===i.type){var r=n.aspectRatio||1,s=n.yfov*r;t=new PerspectiveCamera(MathUtils.radToDeg(s),r,n.znear||1,n.zfar||2e6)}else"orthographic"===i.type&&(t=new OrthographicCamera(n.xmag/-2,n.xmag/2,n.ymag/2,n.ymag/-2,n.znear,n.zfar));return void 0!==i.name&&(t.name=i.name),i.extras&&(t.userData=i.extras),Promise.resolve(t)}console.warn("GLTFLoader: Missing camera parameters.")},R.prototype.loadSkin=function(e){var t=this.json.skins[e],i={joints:t.joints};return void 0===t.inverseBindMatrices?Promise.resolve(i):this.getDependency("accessor",t.inverseBindMatrices).then((function(e){return i.inverseBindMatrices=e,i}))},R.prototype.loadAnimation=function(e){this.json;var t=this.json.animations[e];return this.getMultiDependencies(["accessor","node"]).then((function(i){for(var n=[],r=0,s=t.channels.length;r<s;r++){var o=t.channels[r],a=t.samplers[o.sampler];if(a){var l=o.target,c=void 0!==l.node?l.node:l.id,h=void 0!==t.parameters?t.parameters[a.input]:a.input,u=void 0!==t.parameters?t.parameters[a.output]:a.output,d=i.accessors[h],p=i.accessors[u],m=i.nodes[c];if(m){var f;switch(m.updateMatrix(),m.matrixAutoUpdate=!0,M[l.path]){case M.weights:f=NumberKeyframeTrack;break;case M.rotation:f=QuaternionKeyframeTrack;break;default:f=VectorKeyframeTrack}var g=m.name?m.name:m.uuid;"CATMULLROMSPLINE"===a.interpolation&&console.warn("GLTFLoader: CATMULLROMSPLINE interpolation is not supported. Using CUBICSPLINE instead.");var y=void 0!==a.interpolation?C[a.interpolation]:2301,v=[];M[l.path]===M.weights?m.traverse((function(e){!0===e.isMesh&&!0===e.material.morphTargets&&v.push(e.name?e.name:e.uuid)})):v.push(g);for(var b=0,_=v.length;b<_;b++)n.push(new f(v[b]+"."+M[l.path],AnimationUtils.arraySlice(d.array,0),AnimationUtils.arraySlice(p.array,0),y))}}}return new AnimationClip(c=void 0!==t.name?t.name:"animation_"+e,void 0,n)}))},R.prototype.loadNode=function(e){this.json;var t=this.extensions,n=this.json.meshReferences,r=this.json.meshUses,s=this.json.nodes[e];return this.getMultiDependencies(["mesh","skin","camera"]).then((function(e){var o;if(!0===s.isBone)o=new Bone;else if(void 0!==s.mesh){var a=e.meshes[s.mesh];if(o=a.clone(),!0===a.isGroup)for(var l=0,c=a.children.length;l<c;l++){var h=a.children[l];h.material&&!0===h.material.isGLTFSpecularGlossinessMaterial&&(o.children[l].onBeforeRender=h.onBeforeRender)}else a.material&&!0===a.material.isGLTFSpecularGlossinessMaterial&&(o.onBeforeRender=a.onBeforeRender);n[s.mesh]>1&&(o.name+="_instance_"+r[s.mesh]++)}else if(void 0!==s.camera)o=e.cameras[s.camera];else if(s.extensions&&s.extensions[i.KHR_LIGHTS]&&void 0!==s.extensions[i.KHR_LIGHTS].light){o=t[i.KHR_LIGHTS].lights[s.extensions[i.KHR_LIGHTS].light]}else o=new Object3D;if(void 0!==s.name&&(o.name=PropertyBinding.sanitizeNodeName(s.name)),s.extras&&(o.userData=s.extras),void 0!==s.matrix){var u=new Matrix4;u.fromArray(s.matrix),o.applyMatrix(u)}else void 0!==s.translation&&o.position.fromArray(s.translation),void 0!==s.rotation&&o.quaternion.fromArray(s.rotation),void 0!==s.scale&&o.scale.fromArray(s.scale);return o}))},R.prototype.loadScene=function(){function e(t,i,n,r,s){var o=r[t],a=n.nodes[t];if(void 0!==a.skin)for(var l=!0===o.isGroup?o.children:[o],c=0,h=l.length;c<h;c++){for(var u=l[c],d=s[a.skin],p=[],m=[],f=0,g=d.joints.length;f<g;f++){var y=d.joints[f],v=r[y];if(v){p.push(v);var b=new Matrix4;void 0!==d.inverseBindMatrices&&b.fromArray(d.inverseBindMatrices.array,16*f),m.push(b)}else console.warn('GLTFLoader: Joint "%s" could not be found.',y)}u.bind(new Skeleton(p,m),u.matrixWorld)}if(i.add(o),a.children){var _=a.children;for(c=0,h=_.length;c<h;c++){e(_[c],o,n,r,s)}}}return function(t){var n=this.json,r=this.extensions,s=this.json.scenes[t];return this.getMultiDependencies(["node","skin"]).then((function(t){var o=new Scene;void 0!==s.name&&(o.name=s.name),s.extras&&(o.userData=s.extras);for(var a=s.nodes||[],l=0,c=a.length;l<c;l++)e(a[l],o,n,t.nodes,t.skins);if(s.extensions&&s.extensions[i.KHR_LIGHTS]&&void 0!==s.extensions[i.KHR_LIGHTS].light){var h=r[i.KHR_LIGHTS].lights;o.add(h[s.extensions[i.KHR_LIGHTS].light])}return o}))}}(),e}(),DRACOLoader=function(e,t,i){this.timeLoaded=0,this.manager=void 0!==i?i:DefaultLoadingManager,this.materials=null,this.verbosity=0,this.attributeOptions={},void 0!==t&&(DRACOLoader.dracoDecoderType=t),this.drawMode=0,this.dracoSrcPath=void 0!==e?e:"./","undefined"==typeof DracoDecoderModule&&DRACOLoader.loadDracoDecoder(this)};DRACOLoader.dracoDecoderType={},DRACOLoader.prototype={constructor:DRACOLoader,load:function(e,t,i,n){var r=this,s=new FileLoader(r.manager);s.setPath(this.path),s.setResponseType("arraybuffer"),void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),s.load(e,(function(e){r.decodeDracoFile(e,t)}),i,n)},setPath:function(e){this.path=e},setCrossOrigin:function(e){this.crossOrigin=e},setVerbosity:function(e){this.verbosity=e},setDrawMode:function(e){this.drawMode=e},setSkipDequantization:function(e,t){var i=!0;void 0!==t&&(i=t),this.getAttributeOptions(e).skipDequantization=i},decodeDracoFileData:function(e,t,i){var n=this;DRACOLoader.getDecoder(this,(function(r){n.decodeDracoFileInternal(e,r,t,i)}))},decodeDracoFileInternal:function(e,t,i,n){var r=new t.DecoderBuffer;r.Init(new Int8Array(e),e.byteLength);var s=new t.Decoder,o=s.GetEncodedGeometryType(r);if(o==t.TRIANGULAR_MESH)this.verbosity>0&&console.log("Loaded a mesh.");else{if(o!=t.POINT_CLOUD){var a="DRACOLoader: Unknown geometry type.";throw console.error(a),new Error(a)}this.verbosity>0&&console.log("Loaded a point cloud.")}i(this.decodeDracoGeometryData(t,s,o,r,n))},decodeDracoGeometryData:function(e,t,i,n,r){var s,o;!0===this.getAttributeOptions("position").skipDequantization&&t.SkipAttributeTransform(e.POSITION);const a=performance.now();if(i===e.TRIANGULAR_MESH?(s=new e.Mesh,o=t.DecodeBufferToMesh(n,s)):(s=new e.PointCloud,o=t.DecodeBufferToPointCloud(n,s)),!o.ok()||0==s.ptr){var l="DRACOLoader: Decoding failed: ";throw l+=o.error_msg(),console.error(l),e.destroy(t),e.destroy(s),new Error(l)}var c,h=performance.now();e.destroy(n),i==e.TRIANGULAR_MESH?(c=s.num_faces(),this.verbosity>0&&console.log("Number of faces loaded: "+c.toString())):c=0;var u=s.num_points(),d=s.num_attributes();this.verbosity>0&&(console.log("Number of points loaded: "+u.toString()),console.log("Number of attributes loaded: "+d.toString()));var p=t.GetAttributeId(s,e.POSITION);if(-1==p){l="DRACOLoader: No position attribute found.";throw console.error(l),e.destroy(t),e.destroy(s),new Error(l)}var m=t.GetAttribute(s,p),f={};for(var g in f.numPoints=u,f.attributes={},r)if(!(g<0)){var y=r[g];void 0===y&&(y=Float32Array);var v=t.GetAttribute(s,g);if(0===v.ptr){l="DRACOLoader: No attribute "+attributeName;throw console.error(l),new Error(l)}var b,_="Float"==y.name.slice(0,5),x=v.num_components();b=new e.DracoFloat32Array,t.GetAttributeFloatForAllPoints(s,v,b);var w=u*x,S=new y(w);if(_)for(var M=0;M<w;M++)S[M]=b.GetValue(M);else for(M=0;M<w;M++)S[M]=Math.round(b.GetValue(M));f.attributes[g]=S,e.destroy(b)}if(i==e.TRIANGULAR_MESH){var C=r[-1];if(void 0===C&&(C=u>65535?Uint32Array:Uint16Array),1===this.drawMode){var T=new e.DracoInt32Array;t.GetTriangleStripsFromMesh(s,T);var A=new C(T.size());for(M=0;M<T.size();++M)A[M]=T.GetValue(M);f.indices=A,e.destroy(T)}else{A=new C(3*c);var L=new e.DracoInt32Array;for(M=0;M<c;++M){t.GetFaceFromMesh(s,M,L);var E=3*M;A[E]=L.GetValue(0),A[E+1]=L.GetValue(1),A[E+2]=L.GetValue(2)}e.destroy(L),f.indices=A}}f.drawMode=this.drawMode;var P=new e.AttributeQuantizationTransform;if(P.InitFromAttribute(m)){f.attributes[p].isQuantized=!0,f.attributes[p].maxRange=P.range(),f.attributes[p].numQuantizationBits=P.quantization_bits(),f.attributes[p].minValues=new Float32Array(3);for(M=0;M<3;++M)f.attributes[p].minValues[M]=P.min_value(M)}return e.destroy(P),e.destroy(t),e.destroy(s),this.decode_time=h-a,this.import_time=performance.now()-h,this.verbosity>0&&(console.log("Decode time: "+this.decode_time),console.log("Import time: "+this.import_time)),f},isVersionSupported:function(e,t){DRACOLoader.getDecoder(this,(function(i){t(i.isVersionSupported(e))}))},getAttributeOptions:function(e){return void 0===this.attributeOptions[e]&&(this.attributeOptions[e]={}),this.attributeOptions[e]}},DRACOLoader.loadJavaScriptFile=function(e,t,i){if(null===document.getElementById("decoder_script")){var n=document.getElementsByTagName("head")[0],r=document.createElement("script");r.id="decoder_script",r.type="text/javascript",r.src=e,r.onload=null!==t?t(i):function(e){DRACOLoader.timeLoaded=performance.now()},n.appendChild(r)}},DRACOLoader.loadWebAssemblyDecoder=function(e){DRACOLoader.dracoDecoderType.wasmBinaryFile=e.dracoSrcPath+"draco_decoder.wasm";var t=new XMLHttpRequest;t.open("GET",e.dracoSrcPath+"draco_decoder.wasm",!0),t.responseType="arraybuffer",t.onload=function(){DRACOLoader.dracoDecoderType.wasmBinary=t.response,DRACOLoader.timeLoaded=performance.now()},t.send(null)},DRACOLoader.loadDracoDecoder=function(e){"object"!=typeof WebAssembly||"js"===DRACOLoader.dracoDecoderType.type?DRACOLoader.loadJavaScriptFile(e.dracoSrcPath+"draco_decoder.js",null,e):DRACOLoader.loadJavaScriptFile(e.dracoSrcPath+"draco_wasm_wrapper.js",(function(e){DRACOLoader.loadWebAssemblyDecoder(e)}),e)},DRACOLoader.getDecoder=function(){var e,t=!1;return function(i,n){if(void 0!==e)void 0!==n&&n(e);else{if("undefined"==typeof DracoDecoderModule){if(DRACOLoader.timeLoaded>0)if(performance.now()-DRACOLoader.timeLoaded>5e3)throw new Error("DRACOLoader: DracoDecoderModule not found.")}else t||(t=!0,DRACOLoader.dracoDecoderType.onModuleLoaded=function(t){e=t},DracoDecoderModule(DRACOLoader.dracoDecoderType));setTimeout((function(){DRACOLoader.getDecoder(i,n)}),10)}}}();class AssetPackageLoader{constructor(e){this.isDownloading=!1,this.loaded=!1,this.url=e,this.arrayBuffer=null,this.fileLocations=[],this.onLoadCbs=[],this.onProgressCbs=[],this.lastProgressValue=0,this.textureCache={}}async startDownloading(){if(this.loaded)return;if(this.isDownloading)return await this.waitForLoad();this.isDownloading=!0;let e=await requestWithProgress(this.url,(e=>{for(const t of this.onProgressCbs)t(e);this.lastProgressValue=e}));main.serviceWorker.storeCache(this.url,e),this.arrayBuffer=await new Response(e).arrayBuffer(),this.parseFilePositions(),this.loaded=!0;for(const e of this.onLoadCbs)e();this.onLoadCbs=[],this.onProgressCbs=[],this.isDownloading=!1}parseFilePositions(){let e=0;for(;e<this.arrayBuffer.byteLength;){let t=new Uint32Array(this.arrayBuffer,e,1)[0],i=new Uint8Array(this.arrayBuffer,e+4,t),n=new TextDecoder("utf-8").decode(i);t%4!=0&&(t=4*Math.ceil(t/4));let r=new Uint32Array(this.arrayBuffer,e+4+t,1)[0];this.fileLocations.push({path:n,start:e+4+t+4,length:r}),r%4!=0&&(r=4*Math.ceil(r/4)),e+=4+t+4+r}}onLoad(e){this.loaded?e():this.onLoadCbs.push(e)}onProgress(e){this.loaded?e(1):this.onProgressCbs.push(e)}async waitForLoad(){if(!this.loaded)return await new Promise(((e,t)=>{this.onLoad((t=>{e()}))}))}async getFileAsBuffer(e){this.loaded||await this.waitForLoad();for(const t of this.fileLocations)if(t.path==e)return this.arrayBuffer.slice(t.start,t.start+t.length);return console.warn("trying to load asset "+e+" but it does not exist!"),null}async getAsObjectUrl(e,t){let i=await this.getFileAsBuffer(e),n=new Blob([new Uint8Array(i)],{type:t});return URL.createObjectURL(n)}async getAsSvg(e){return await this.getAsObjectUrl(e,"image/svg+xml")}async getAsText(e){let t=await this.getFileAsBuffer(e),i=new Uint8Array(t);return new TextDecoder("utf-8").decode(i)}async getAsJSON(e){let t=await this.getAsText(e);return JSON.parse(t)}async getJsonObject(e){let t=await this.getAsJSON(e);return AssetPackageLoader.getJsonObject(t)}static getJsonObject(e){return(new ObjectLoader).parse(e)}static initGltfLoader(){this.gltfLoader||(this.gltfLoader=new GLTFLoader,this.gltfLoader.setDRACOLoader(new DRACOLoader("libs/draco/",{type:"js"})))}async getGltfObject(e){let t=await this.getFileAsBuffer(e);return await AssetPackageLoader.getGltfObjectFromArrayBuffer(t)}async blobToArrayBuffer(e){return await new Response(e).arrayBuffer()}async getGltfObjectFromBlob(e){let t=await this.blobToArrayBuffer(e);return await AssetPackageLoader.getGltfObjectFromArrayBuffer(t)}static async getGltfObjectFromArrayBuffer(e){return await new Promise(((t,i)=>{this.initGltfLoader(),this.gltfLoader.parse(e,"",(e=>{t(e)}),(e=>{i(e)}))}))}async getTexture(e,{imageType:t="png",mapping:i=300,wrapS:n=1001,wrapT:r=1001,magFilter:s=1006,minFilter:o=1008,format:a=1023,type:l=1009,anisotropy:c=1,encoding:h=3e3}={}){let u=this.textureCache[e];if(u){if(u.texture)return u.texture;if(u.loading)return await new Promise(((t,i)=>{this.textureCache[e].onLoadCbs.push(t)}))}this.textureCache[e]=u={loading:!0,texture:null,onLoadCbs:[]};let d=new Texture(await this.getAsImageObject(e),i,n,r,s,o,a,l,c,h);d.needsUpdate=!0,u.texture=d;for(const e of u.onLoadCbs)e(u.texture);return u.onLoadCbs=[],u.loading=!1,d}async getAsImageObject(e){let t=await this.getAsObjectUrl(e);return await new Promise(((e,i)=>{let n=new Image;n.onload=t=>{e(n)},n.onerror=e=>{i()},n.src=t}))}async getCubeTexture(e,{imageType:t="png",mapping:i=301,wrapS:n=1001,wrapT:r=1001,magFilter:s=1006,minFilter:o=1008,format:a=1023,type:l=1009,anisotropy:c=1,encoding:h=3e3}={}){let u=new Array(e.length);for(let t=0;t<e.length;t++){let i=e[t];u[t]=this.getAsImageObject(i)}let d=new CubeTexture(await Promise.all(u),i,n,r,s,o,a,l,c,h);return d.needsUpdate=!0,d}}class AssetsManager{constructor(){let e=["main"];this.packages={};for(const t of e)this.addPackage(t,!1)}addPackage(e,t=!0){let i=this.packages[e]=new AssetPackageLoader("packages/"+e+".bin?v="+VERSION_TIMESTAMP);t&&i.startDownloading()}async init(){for(let[e,t]of Object.entries(this.packages))t.startDownloading();let e=this.getPackage("main");e.loaded||await e.waitForLoad(),main.ads.adLad.loadStop(),Nest.cacheNestAssets()}getPackage(e){return this.packages[e]}}class AssetCache{constructor(){this.cachedItems={}}async getItem(e,{assetPackageName:t="main",doubleSideMaterial:i=!1}={}){let n=this.cachedItems[e];if(n){if("loading"==n.state)return await new Promise((e=>n.onLoadCbs.push(e)));if("loaded"==n.state)return n.obj}n={state:"loading",obj:null,onLoadCbs:[]},this.cachedItems[e]=n;let r=null;if(t){let n=main.assets.getPackage(t);e.endsWith(".json")?(r=await n.getJsonObject(e),makeUnlitVertexColor(r,i)):e.endsWith(".glb")&&(r=await n.getGltfObject(e),makeUnlitVertexColor(r.scene,i))}else if(e.endsWith(".png"))r=(new THREE.TextureLoader).load(e),r.flipY=!1;else{let t=await cordovaFetch(e);if(e.endsWith(".json")){let e=await t.json();r=AssetPackageLoader.getJsonObject(e),makeUnlitVertexColor(r,i)}else if(e.endsWith(".glb")){let e=await t.arrayBuffer();r=await AssetPackageLoader.getGltfObjectFromArrayBuffer(e),makeUnlitVertexColor(r.scene,i)}}n.state="loaded",n.obj=r;for(const e of n.onLoadCbs)e(r);return r}}class PauseButton{constructor(){this.containerEl=document.createElement("div"),this.containerEl.classList.add("pauseButtonContainer"),document.body.appendChild(this.containerEl),this.buttonEl=document.createElement("div"),this.buttonEl.classList.add("pauseButton"),this.containerEl.appendChild(this.buttonEl),this.button=new GenericButton({el:this.buttonEl,makeNiceButton:!1,addShine:!1,onClick:e=>{main.mainMenu.onPauseButtonPress()}}),this.button.setVisibility(!1)}updateVisibility(){const e=main.game.gameStarted&&!main.game.myPlayersPaused;this.button.setVisibility(e)}}class CornerScoreStar{constructor(e,t,i=!1){this.el=document.createElement("div"),this.el.classList.add("cornerScoreStarRotateContainer"),this.rotateEl=document.createElement("div"),this.rotateEl.classList.add("cornerScoreStar"),this.el.appendChild(this.rotateEl),this.el.style.animationDuration=randRange(2,4)+"s",this.rotateEl.style.animationDuration=randRange(9,10)+"s",i&&(this.rotateEl.style.animationDirection="reverse"),this.el.style.left=e+"px",this.el.style.top=t+"px"}setVisibility(e){this.el.style.display=e?null:"none"}}class CornerScoreUI{constructor(){this.el=document.createElement("div"),this.el.classList.add("cornerScoreContainer","niceFont"),document.body.appendChild(this.el);const e=this.createSection("ducklingCountIcon"),t=this.createSection("hatCountIcon"),i=this.createSection("boostIcon");this.ducklingCount=document.createElement("span"),this.ducklingCount.classList.add("cornerScoreNumber"),e.countEl.appendChild(this.ducklingCount),this.scoreSlashChar=document.createElement("span"),this.scoreSlashChar.textContent="/",e.countEl.appendChild(this.scoreSlashChar),this.nextStageCount=document.createElement("span"),this.nextStageCount.classList.add("cornerScoreNumber"),e.countEl.appendChild(this.nextStageCount),this.hatCountSection=t.sectionEl,this.hatStar1=new CornerScoreStar(7,9),t.iconEl.appendChild(this.hatStar1.el),this.hatStar2=new CornerScoreStar(57,3,!0),t.iconEl.appendChild(this.hatStar2.el),this.hatCount=document.createElement("span"),this.hatCount.classList.add("cornerScoreNumber"),t.countEl.appendChild(this.hatCount),this.hatSlashChar=document.createElement("span"),this.hatSlashChar.textContent="/",t.countEl.appendChild(this.hatSlashChar),this.maxHatCount=document.createElement("span"),t.countEl.appendChild(this.maxHatCount),this.boostSection=i.sectionEl,this.boostSection.classList.add("hidden"),this.boostTimer=i.countEl,this.nestStageScale=1,this.currentScore=0,this.nextStageCountValue=0,this.myReturnedDucklingsThisStage=0,this.hasMemoryScoreFromLocalStorage=!1,this.memorySavedScore=0,this.hasReachedMaxHat=!1,this.targetAnimatedHatCount=0,this.currentAnimatedHatCount=0,this.hatCountVisible=!1,this.lastAnimatedHatCountVisibleTime=0,this.nextAnimatedHatCountHideTime=0,this.onHatCountUpdateCbs=new Set}createSection(e){const t=document.createElement("div");t.classList.add("cornerScoreSection"),this.el.appendChild(t);const i=document.createElement("div");i.classList.add("cornerScoreIcon",e,"imageEl"),t.appendChild(i);const n=document.createElement("span");return n.classList.add("cornerScoreNumber"),t.appendChild(n),{sectionEl:t,iconEl:i,countEl:n}}init(){if(this.updateScoreUi(),this.updateHatUi(),this.setHatCountVisibility(!1),main.search.applyScore){const e=this.deobfuscateScore(main.search.applyScore);e&&(this.savedScore=Math.max(this.savedScore,e))}main.hats.onMaxHatCountUpdated((()=>{this.updateHatCount()})),this.makeHatCountTemporaryVisible()}get savedScore(){return this.hasMemoryScoreFromLocalStorage||(this.hasMemoryScoreFromLocalStorage=!0,this.memorySavedScore=+lsGet("lastDucklingCount")||0),this.memorySavedScore}set savedScore(e){this.memorySavedScore=e,lsSet("lastDucklingCount",e)}loop(e,t){this.targetAnimatedHatCount!=this.currentAnimatedHatCount?this.hatCountVisible?e-this.lastAnimatedHatCountVisibleTime>1500&&(this.updateHatCount(),this.nextAnimatedHatCountHideTime=e+3e3):(this.setHatCountVisibility(!0),this.lastAnimatedHatCountVisibleTime=e):e>this.nextAnimatedHatCountHideTime&&this.hatCountVisible&&this.setHatCountVisibility(!1)}setBoostTimer(e){this.boostTimer.textContent=e,this.boostSection.classList.toggle("hidden",e<=0)}resetProgress(){this.savedScore=0,main.networkManager.isMultiplayerGame||main.game.resetAllNestScores()}nestStageForDucklingCount(e){return Math.floor(Math.sqrt(e,2)*this.nestStageScale)}requiredDucklingCountForNextStage(e,t=!1){return this.ducklingCountForStage(this.nestStageForDucklingCount(e)+(t?0:1))}ducklingCountForStage(e){return Math.ceil(Math.pow(e/this.nestStageScale,2))}updateScoreFromNests(e=!0){let t=0;for(const e of main.game.getMyControllablePlayers()){for(const i of e.myNests)t+=i.score;break}if(t!=this.currentScore){if(t>this.currentScore&&e){main.sfx.playSound("ducklingsScoreSingle");const e=this.nestStageForDucklingCount(this.currentScore);if(e>=Nest.maxNestStage){const e=Math.floor(this.currentScore/50),i=Math.floor(t/50),n=Math.max(0,i-e);for(let e=0;e<n;e++)main.hats.unlockNewStageHat()}else if(e>1){const i=this.nestStageForDucklingCount(t),n=Math.max(0,i-e);for(let e=0;e<n;e++)main.hats.unlockNewStageHat()}}this.savedScore=Math.max(this.savedScore,t),this.currentScore=t,this.updateScoreUi()}}get finalStageReached(){return this.nestStageForDucklingCount(this.currentScore)>=Nest.maxNestStage}updateScoreUi(){this.setCountEl(this.ducklingCount,this.currentScore);let e=this.requiredDucklingCountForNextStage(this.currentScore);e!=this.nextStageCountValue&&(this.nextStageCountValue=e,this.setCountEl(this.nextStageCount,this.nextStageCountValue),this.scoreSlashChar.style.display=this.nextStageCount.style.display=this.finalStageReached?"none":null,this.updateMaxHatVisibility())}updateMaxHatVisibility(){const e=this.finalStageReached&&!this.hasReachedMaxHat;this.hatSlashChar.style.display=this.maxHatCount.style.display=e?null:"none"}updateHatUi(e=!1){e?this.targetAnimatedHatCount=main.hats.getUnlockedHatCount():this.updateHatCount()}async waitForHatCountUpdate(){await new Promise((e=>this.onHatCountUpdateCbs.add(e)))}updateHatCount(){const e=main.hats.getUnlockedHatCount();this.currentAnimatedHatCount=e,this.setCountEl(this.hatCount,e);const t=main.hats.getMaxHatCount();this.hasReachedMaxHat=e==t,this.setCountEl(this.maxHatCount,t),this.updateMaxHatVisibility(),this.targetAnimatedHatCount=Math.max(this.targetAnimatedHatCount,e);for(const e of this.onHatCountUpdateCbs)e();this.onHatCountUpdateCbs.clear()}setHatStarsVisibility(e){this.hatStar1.setVisibility(e),this.hatStar2.setVisibility(e)}makeHatCountTemporaryVisible(){this.setHatCountVisibility(!0,!1),this.lastAnimatedHatCountVisibleTime=main.now,this.nextAnimatedHatCountHideTime=main.now+3e3}setHatCountVisibility(e,t=!0){e!=this.hatCountVisible&&(e&&this.setHatStarsVisibility(t),this.hatCountVisible=e,this.hatCountSection.classList.toggle("hidden",!e))}setCountEl(e,t){e.textContent=t,e.classList.add("zoomed"),skipCssTransition(e),e.classList.remove("zoomed")}setVisibility(e){this.el.classList.toggle("hidden",!e)}countMyDucklingReturned(){this.myReturnedDucklingsThisStage++}resetMyDucklingReturned(){this.myReturnedDucklingsThisStage=0}async getCurrentObfuscatedScoreUrl(){return await this.getObfuscatedScoreUrl(this.currentScore)}async getObfuscatedScoreUrl(e){let t=new Uint32Array([e,e,e]).buffer,i=new Uint8Array(t),n=new Blob([i.buffer],{type:"application/octet-stream"});return"https://ducklings.io/?applyScore="+await new Promise(((e,t)=>{let i=new FileReader;i.readAsDataURL(n),i.onloadend=n=>{let r=/data.*base64,(.*)/.exec(i.result);r?e(r[1]):t()},i.onerror=e=>{t()}}))}deobfuscateScore(e){try{var t=window.atob(e),i=t.length,n=new Uint8Array(new ArrayBuffer(i));for(let e=0;e<i;e++)n[e]=t.charCodeAt(e);let r=new Uint32Array(n.buffer);return 3!=r.length||r[0]!=r[1]||r[0]!=r[2]?null:r[0]}catch(e){return null}}}class CachedSfx{constructor(e,t){this.opts=e,this.ctx=t,this.loaded=!1,this.loading=!1,this.buffer=null,this.onLoadCbs=[]}async init(){if(this.loaded)return;if(this.loading)return await new Promise((e=>{this.onLoadCbs.push(e)}));let e;this.loading=!0;let t=main.assets.getPackage("sfx"+SfxManager.audioFormatCamelCase);e=await t.getFileAsBuffer(this.opts.name+"."+SfxManager.audioFormat),this.buffer=await new Promise((t=>{this.ctx.decodeAudioData(e,t)})),this.loaded=!0;for(const e of this.onLoadCbs)e();this.onLoadCbs=[]}async waitForLoad(){if(!this.loaded)return await new Promise((e=>this.onLoadCbs.push(e)))}async getBuffer(){return await this.waitForLoad(),this.buffer}}class SfxSound{constructor(e,t={}){this.cachedSfx=e,this.opts={autoPlay:!0,volume:1,volumeFront:1,volumeBack:0,startRadius:3,falloff:.4,loop:!1,allowWithoutUserEvent:!1,overrideMute:!1,pos:null,linkedObject:null,...e.opts,...t},this.sourceNode=null,this.gainNode=null,this.frontGainNode=null,this.frontSplitterNode=null,this.backGainNode=null,this.backSplitterNode=null,this.channelMergerNode=null,this.preventDestructOnNextStop=!1,this.lastSetVolume=0,this.isLoopPlaying=!1}destructor(){this.cachedSfx=null,this.opts=null,this.sourceNode=null,this.gainNode=null,main.sfx.sfxDestructed(this)}async init(){return!main.sfx.muted||this.opts.loop||this.opts.overrideMute?(this.opts.linkedObject?this.setVolume(0,!0):this.opts.pos?this.setVolumesForPos(this.opts.pos,!0):this.setVolume(this.opts.volume,!0),!this.opts.loop&&this.opts.autoPlay&&this.lastSetVolume<.01?(this.destructor(),!1):(this.opts.autoPlay&&await this.start(!0),this.setMuted(main.sfx.muted),!0)):(this.destructor(),!1)}setVolume(e,t=!1){this.lastSetVolume=e,this.gainNode&&(t?this.gainNode.gain.value=e:this.gainNode.gain.linearRampToValueAtTime(e,main.sfx.ctx.currentTime+.1))}loop(e,t){this.opts.linkedObject&&this.setVolumesForPos(this.opts.linkedObject.position)}setVolumesForPos(e,t=!1){let i=SfxManager.getVolumeForPos(e,this.opts.startRadius,this.opts.falloff,this.opts.volume);this.setVolume(i,t)}setMuted(e,t=!1){if(this.opts.overrideMute&&!t&&(e=!1),this.opts.loop)if(e){let e=this.isLoopPlaying;this.pause(!0),this.isLoopPlaying=e}else this.isLoopPlaying&&this.resume(!0);else e&&this.stop()}async start(e=!1){if(!this.sourceNode){let t=main.sfx.ctx;this.sourceNode=t.createBufferSource(),this.sourceNode.buffer=await this.cachedSfx.getBuffer(),this.sourceNode.loop=this.opts.loop,this.gainNode=t.createGain(),this.sourceNode.connect(this.gainNode),t.destination.maxChannelCount<6?this.gainNode.connect(t.destination):(this.frontGainNode=t.createGain(),this.frontGainNode.gain.value=this.opts.volumeFront,this.gainNode.connect(this.frontGainNode),this.frontSplitterNode=t.createChannelSplitter(2),this.frontGainNode.connect(this.frontSplitterNode),this.backGainNode=t.createGain(),this.backGainNode.gain.value=this.opts.volumeBack,this.gainNode.connect(this.backGainNode),this.backSplitterNode=t.createChannelSplitter(2),this.backGainNode.connect(this.backSplitterNode),this.channelMergerNode=t.createChannelMerger(6),this.frontSplitterNode.connect(this.channelMergerNode,0,0),this.frontSplitterNode.connect(this.channelMergerNode,1,1),this.backSplitterNode.connect(this.channelMergerNode,0,4),this.backSplitterNode.connect(this.channelMergerNode,1,5),this.channelMergerNode.connect(t.destination));let i=e=>{this.sourceNode&&this.sourceNode.removeEventListener("ended",i),this.preventDestructOnNextStop||this.destructor(),this.preventDestructOnNextStop=!1};this.sourceNode.addEventListener("ended",i),this.setVolume(this.lastSetVolume,e),this.sourceNode.start()}this.opts.loop&&(this.isLoopPlaying=!0)}stop(e=!0){if(this.preventDestructOnNextStop=!e,this.sourceNode){this.sourceNode.stop();let e=main.sfx.ctx;this.sourceNode.disconnect(this.gainNode),this.sourceNode=null,e.destination.maxChannelCount<6?(this.gainNode.disconnect(e.destination),this.gainNode=null):(this.gainNode.disconnect(this.frontGainNode),this.frontGainNode.disconnect(this.frontSplitterNode),this.frontGainNode=null,this.gainNode.disconnect(this.backGainNode),this.backGainNode.disconnect(this.backSplitterNode),this.backGainNode=null,this.frontSplitterNode.disconnect(this.channelMergerNode,0,0),this.frontSplitterNode.disconnect(this.channelMergerNode,1,1),this.frontSplitterNode=null,this.backSplitterNode.disconnect(this.channelMergerNode,0,4),this.backSplitterNode.disconnect(this.channelMergerNode,1,5),this.backSplitterNode=null,this.channelMergerNode.disconnect(e.destination),this.channelMergerNode=null)}this.opts.loop&&(this.isLoopPlaying=!1)}pause(e=!1){this.isLoopPlaying=!1,this.sourceNode&&(this.sourceNode.playbackRate.value=1e-7)}resume(e=!1){this.isLoopPlaying=!0,(!this.muted||!this.opts.loop||this.opts.overrideMute&&!this.forceMuted||e)&&this.sourceNode&&(this.sourceNode.playbackRate.value=1)}}class SfxManager{constructor(){if(window.AudioContext=window.AudioContext||window.webkitAudioContext,this.supported=!!AudioContext,this.supported&&this.supported){this.ctx=new AudioContext,this.ctx.destination.maxChannelCount>=6&&(this.ctx.destination.channelCount=6),this.cachedSfx={},this.createdSfx=[],this.settingsMuted=!0,this.adsMuted=!1,this.muted=!0,this.listenerPosition=new Vector3,this.ctx.onstatechange=()=>{this.onCtxStatechange()},this.boundUserEvent=this.userEvent.bind(this),this.addedUserEventListeners=!1,this.onCtxStatechange(),this.soundsConfig=[{name:"duck/1",falloff:.2,volume:.55},{name:"duck/2",falloff:.2,volume:.55},{name:"duck/3",falloff:.2,volume:.55},{name:"duck/4",falloff:.2,volume:.55},{name:"duck/5",falloff:.2,volume:.55},{name:"duck/6",falloff:.2,volume:.55},{name:"duckDeath",volume:1},{name:"upgradeNestSound",volume:1},{name:"hearts",volume:1},{name:"ambientLoops/sea",loop:!0,allowWithoutUserEvent:!0,volume:1,volumeFront:1,volumeBack:.3},{name:"ambientLoops/shore",loop:!0,allowWithoutUserEvent:!0,volume:1,volumeFront:1,volumeBack:.3},{name:"themeSong",loop:!0,allowWithoutUserEvent:!0,volume:.42,volumeFront:0,volumeBack:1},{name:"ducklingsScoreBase",volume:.73,volumeFront:1,volumeBack:1},{name:"ducklingsScoreSingle",volume:.25,volumeFront:1,volumeBack:1},{name:"duckling/1",falloff:.8,volume:1},{name:"duckling/2",falloff:.8,volume:1},{name:"duckling/3",falloff:.8,volume:1},{name:"duckling/4",falloff:.8,volume:1},{name:"duckling/5",falloff:.8,volume:1},{name:"duckling/6",falloff:.8,volume:1},{name:"duckling/7",falloff:.8,volume:1},{name:"duckling/8",falloff:.8,volume:1},{name:"duckling/9",falloff:.8,volume:.3},{name:"ducklingFollow",startRadius:10,falloff:10,volume:.65},{name:"boats/sailBoat",loop:!0,allowWithoutUserEvent:!0,startRadius:10,falloff:.25,volume:.62},{name:"boats/rowBoat",loop:!0,allowWithoutUserEvent:!0,startRadius:15,falloff:.25,volume:.95},{name:"environment/buoyBell",loop:!0,allowWithoutUserEvent:!0,falloff:.35,volume:.82},{name:"gameStart",volume:.5},{name:"grassHit",startRadius:5,volume:.2}];for(let e of this.soundsConfig)this.cachedSfx[e.name]=new CachedSfx(e,this.ctx);this.ctxStatePossiblyInvalid=!1,document.addEventListener("visibilitychange",(e=>{document.hidden?this.ctx.suspend():(this.ctxStatePossiblyInvalid=!0,window.setTimeout((e=>this.ctx.resume()),300))}),!1)}}static get audioFormat(){if(!this._audioFormatSet){let e=document.createElement("audio");e.canPlayType("audio/webm;codecs=opus")?this._audioFormat="webm":e.canPlayType("audio/mp3")?this._audioFormat="mp3":(this._audioFormat=null,this.supported=!1),this._audioFormatSet=!0}return this._audioFormat}static get audioFormatCamelCase(){let e=this.audioFormat;return e.charAt(0).toUpperCase()+e.substring(1)}async init(){if(!this.supported)return;let e=main.assets.getPackage("main");await e.waitForLoad(),main.assets.addPackage("sfx"+SfxManager.audioFormatCamelCase);for(let[e,t]of Object.entries(this.cachedSfx))t.init()}onCtxStatechange(){this.supported&&("running"!=this.ctx.state||this.ctxStatePossiblyInvalid?this.addUserEventListeners():this.removeUserEventListeners())}addUserEventListeners(){this.supported&&(this.addedUserEventListeners||(window.addEventListener("touchstart",this.boundUserEvent),window.addEventListener("touchend",this.boundUserEvent),window.addEventListener("click",this.boundUserEvent),window.addEventListener("keydown",this.boundUserEvent),this.addedUserEventListeners=!0))}removeUserEventListeners(){this.supported&&this.addedUserEventListeners&&(window.removeEventListener("touchstart",this.boundUserEvent),window.removeEventListener("touchend",this.boundUserEvent),window.removeEventListener("click",this.boundUserEvent),window.removeEventListener("keydown",this.boundUserEvent),this.addedUserEventListeners=!1)}async userEvent(){this.supported&&(this.ctxStatePossiblyInvalid&&await this.ctx.suspend(),await this.ctx.resume(),this.ctxStatePossiblyInvalid=!1)}static getVolumeForPos(e,t=1,i=.4,n=1){let r=main.sfx.listenerPosition.distanceTo(e);return this.getVolumeForDist(r,t,i,n)}static getVolumeForDist(e,t=1,i=.4,n=1){return Math.min(1,1/Math.pow(Math.max(0,(e-t)*i+1),2))*n}async playSound(e,t){let i=this.cachedSfx[e];if(!i)return void console.warn("attempted to play sound "+e+" but it doesn't exist");let n=new SfxSound(i,t);return await n.init()?(this.createdSfx.push(n),n):null}setListenerPosition(e){this.listenerPosition.copy(e)}setMutedSettings(e){this.settingsMuted=e,this.updateMuted()}setMutedAds(e){this.adsMuted=e,this.updateMuted()}updateMuted(){this.muted=this.settingsMuted||this.adsMuted;for(let e=this.createdSfx.length-1;e>=0;e--)this.createdSfx[e].setMuted(this.muted,this.adsMuted)}sfxDestructed(e){let t=this.createdSfx.indexOf(e);t>=0&&this.createdSfx.splice(t,1)}loop(e,t){for(const i of this.createdSfx)i.loop(e,t)}}class ParticleSystem{constructor(e){if("number"==typeof(e={doInit:!0,startOnInit:!0,addToScene:!0,particleAssetPath:null,particleAssetPackage:"main",particleCount:10,gravity:-.01,startVelocity:0,angularVelocity:0,spawnerShape:{type:"box"},pickRandomChild:!1,duration:4,drag:0,particleSize:1,...e}).startVelocity){let t=e.startVelocity;e.startVelocity={x:t,y:t,z:t}}if(void 0===e.startVelocity.minX&&void 0!==e.startVelocity.x&&(e.startVelocity.minX=-e.startVelocity.x),void 0===e.startVelocity.maxX&&void 0!==e.startVelocity.x&&(e.startVelocity.maxX=e.startVelocity.x),void 0===e.startVelocity.minY&&void 0!==e.startVelocity.y&&(e.startVelocity.minY=-e.startVelocity.y),void 0===e.startVelocity.maxY&&void 0!==e.startVelocity.y&&(e.startVelocity.maxY=e.startVelocity.y),void 0===e.startVelocity.minZ&&void 0!==e.startVelocity.z&&(e.startVelocity.minZ=-e.startVelocity.z),void 0===e.startVelocity.maxZ&&void 0!==e.startVelocity.z&&(e.startVelocity.maxZ=e.startVelocity.z),this.opts=e,this.obj=new Object3D,e.addToScene&&main.game.scene.add(this.obj),this.particles=[],this.started=!1,this.startTime=0,this.spawnerFunction=null,"box"==e.spawnerShape.type||"boxFaces"==e.spawnerShape.type){e.spawnerShape={size:1,sizeX:1,sizeY:1,sizeZ:1,...e.spawnerShape};let t=e.spawnerShape.size;this.spawnerFunction=i=>{let n=new Vector3;if(n.x=randRange(-e.spawnerShape.sizeX*t,e.spawnerShape.sizeX*t),n.y=randRange(-e.spawnerShape.sizeY*t,e.spawnerShape.sizeY*t),n.z=randRange(-e.spawnerShape.sizeZ*t,e.spawnerShape.sizeZ*t),"boxFaces"==e.spawnerShape.type)switch(randInt(0,6)){case 0:n.x=-e.spawnerShape.sizeX;break;case 1:n.x=e.spawnerShape.sizeX;break;case 2:n.y=-e.spawnerShape.sizeY;break;case 3:n.y=e.spawnerShape.sizeY;break;case 4:n.z=-e.spawnerShape.sizeZ;break;case 5:n.z=e.spawnerShape.sizeZ}return n}}e.doInit&&this.init()}async init(){let e=await main.assetCache.getItem(this.opts.particleAssetPath,{assetPackageName:this.opts.particleAssetPackage});if(e=e.scene,this.obj){for(let t=0;t<this.opts.particleCount;t++){let t=null;t=this.opts.pickRandomChild?randFromArray(e.children).clone():e.clone(),t.position.copy(this.getNewSpawnPos());let i=new Vector3(Math.random(),Math.random(),Math.random());i.length()<=0&&i.set(1,0,0),t.quaternion.setFromAxisAngle(i,Math.random()*Math.PI*2),this.particles.push(t),this.obj.add(t),t.userData.velocity=new Vector3,this.opts.startVelocityMultiplier,t.userData.velocity.x=randRange(this.opts.startVelocity.minX,this.opts.startVelocity.maxX),t.userData.velocity.y=randRange(this.opts.startVelocity.minY,this.opts.startVelocity.maxY),t.userData.velocity.z=randRange(this.opts.startVelocity.minZ,this.opts.startVelocity.maxZ),t.userData.angularVelocity=new Vector3,t.userData.angularVelocity.x=randRange(this.opts.angularVelocity,this.opts.angularVelocity),t.userData.angularVelocity.y=randRange(this.opts.angularVelocity,this.opts.angularVelocity),t.userData.angularVelocity.z=randRange(this.opts.angularVelocity,this.opts.angularVelocity),t.scale.setScalar(this.opts.particleSize)}this.opts.startOnInit&&this.start()}}destructor(){this.obj&&(this.obj.parent.remove(this.obj),this.obj=null,this.particles=[],this.spawnerFunction=null)}start(){this.started=!0,this.startTime=main.now}loop(e,t){if(this.started&&this.obj){for(const e of this.particles){e.userData.velocity.y+=this.opts.gravity*(t/16.66);let i=1/(this.opts.drag+1);if(i=lerptt10(i,t/16.6666),e.userData.velocity.multiplyScalar(i),e.position.addScaledVector(e.userData.velocity,t/16.66),e.userData.angularVelocity.length()>0){let i=new Quaternion;i.setFromAxisAngle(e.userData.angularVelocity,e.userData.angularVelocity.length()*t),i.normalize(),e.quaternion.multiply(i)}}this.opts.duration>0&&e-this.startTime>1e3*this.opts.duration&&this.destructor()}}getNewSpawnPos(){return this.spawnerFunction?this.spawnerFunction():new Vector3}}class ParticleManager{constructor(){this.spawnedSystems=[]}loop(e,t){for(let i=this.spawnedSystems.length-1;i>=0;i--){let n=this.spawnedSystems[i];n.loop(e,t),null==n.obj&&this.spawnedSystems.splice(i,1)}}createSystem(e){let t=new ParticleSystem(e);return this.spawnedSystems.push(t),t}}class LoadingAnimation{constructor(){this.el=document.createElement("div"),this.el.classList.add("loadingAnimation"),this.visible=!1;let e={width:160,height:100,main:"M 73.647 83.32 C 69.647 83.32 66.347 83.22 63.347 82.92 C 49.947 81.82 37.947 80.62 26.147 76.82 C 19.547 74.72 12.547 72.22 7.047 66.42 C 4.347 63.52 4.047 60.12 6.347 57.12 C 8.147 54.72 10.047 52.42 11.847 50.22 C 12.247 49.72 12.647 49.22 13.047 48.72 C 13.447 48.32 13.747 47.82 14.147 47.42 C 15.047 46.32 15.947 45.02 17.047 43.42 L 17.247 43.12 C 18.547 41.12 19.947 39.12 21.747 37.32 C 22.647 36.42 23.647 35.32 24.447 34.42 C 26.347 32.32 28.547 30.02 31.147 28.02 C 36.347 24.02 41.247 21.42 46.547 19.72 C 50.147 18.62 53.947 18.02 58.047 18.02 C 59.247 18.02 60.247 18.02 61.347 18.12 C 66.947 18.52 72.047 19.92 76.347 22.22 L 78.947 23.62 L 79.247 20.72 C 79.447 18.52 80.647 16.12 82.647 13.72 C 86.347 9.52 90.647 5.42 97.147 4.32 C 99.147 4.02 100.947 3.82 102.547 3.82 C 108.847 3.82 115.247 5.82 121.547 9.92 C 124.047 11.52 126.447 14.32 127.947 17.12 C 129.247 19.62 130.247 22.32 131.147 25.12 C 131.447 25.82 131.647 26.42 131.847 27.02 C 132.147 27.92 132.447 28.82 132.847 29.62 C 133.047 30.22 133.347 30.62 133.547 30.72 L 133.747 30.92 L 134.047 31.02 C 135.547 31.72 137.047 32.22 138.447 32.72 C 139.947 33.22 141.347 33.82 142.847 34.42 C 145.047 35.42 146.447 36.22 147.947 37.32 C 150.247 38.92 151.047 40.42 150.347 41.82 C 149.647 43.42 147.547 44.42 145.947 44.42 C 144.547 44.42 143.147 44.12 141.847 43.92 L 141.047 43.82 C 140.447 43.72 139.847 43.62 139.347 43.52 C 138.047 43.32 136.647 43.22 135.247 43.22 C 131.547 43.22 128.247 44.02 125.147 45.72 L 122.947 46.92 L 124.547 48.82 C 127.847 52.62 129.547 57.12 129.447 61.72 C 129.247 67.22 126.447 71.62 120.647 75.32 C 114.847 78.92 108.347 80.22 102.347 81.12 C 91.447 82.62 82.447 83.32 73.647 83.32 Z",shadow:"M 152.747 41.02 C 152.547 36.92 148.047 36.32 144.847 35.92 C 144.047 35.82 142.747 35.62 142.247 35.52 C 141.247 35.12 139.947 34.02 138.647 33.02 C 136.947 31.72 135.247 30.32 133.347 29.52 C 132.447 29.12 132.347 29.12 119.147 28.02 C 107.447 27.02 89.647 25.62 85.247 24.72 C 84.747 24.72 84.347 24.72 83.947 24.72 C 77.647 24.72 43.147 38.92 41.647 39.52 C 3.847 55.02 3.147 58.22 2.747 60.52 C 2.447 62.22 1.647 77.52 5.547 81.62 C 11.247 87.62 18.447 90.32 25.447 92.52 C 37.547 96.42 49.647 97.62 63.047 98.72 C 66.447 99.02 69.947 99.12 73.547 99.12 C 82.147 99.12 91.247 98.42 102.947 96.72 C 109.247 95.82 115.947 94.42 122.047 90.62 C 127.847 86.92 129.847 81.42 131.547 76.62 C 131.747 76.22 134.847 67.02 132.547 60.72 C 133.747 60.02 135.647 59.12 137.847 59.12 C 138.347 59.12 138.847 59.12 139.247 59.22 C 139.747 59.32 140.347 59.42 140.947 59.52 C 142.547 59.82 144.247 60.22 146.147 60.22 C 147.347 60.22 148.347 59.72 149.147 58.92 C 150.047 58.02 150.747 56.82 151.847 49.42 C 151.847 49.12 152.847 42.72 152.747 41.02 Z",outline:"M 102.647 5.72 C 108.547 5.72 114.547 7.62 120.547 11.52 C 122.847 13.02 124.947 15.42 126.247 18.02 C 127.447 20.42 128.447 23.02 129.347 25.72 L 129.347 25.82 L 129.347 25.92 C 129.547 26.52 129.747 27.12 129.947 27.72 C 130.247 28.62 130.547 29.42 130.947 30.32 C 131.147 31.02 131.547 31.62 132.147 32.22 L 132.647 32.72 L 133.247 33.02 C 134.747 33.72 136.347 34.32 137.847 34.82 C 139.247 35.32 140.647 35.82 142.047 36.42 C 144.147 37.32 145.347 38.12 146.847 39.12 C 148.047 39.92 148.747 40.82 148.647 41.12 L 148.647 41.22 L 148.647 41.32 C 148.447 41.92 147.047 42.52 146.147 42.52 C 144.947 42.52 143.747 42.32 142.447 42.02 C 142.147 41.92 141.947 41.92 141.647 41.82 L 141.647 41.82 L 141.647 41.82 C 141.047 41.72 140.547 41.62 140.047 41.52 L 139.947 41.52 L 139.847 41.52 C 138.447 41.32 136.947 41.12 135.447 41.12 C 131.447 41.12 127.847 42.02 124.447 43.92 L 120.147 46.32 L 123.347 50.02 C 126.347 53.52 127.847 57.42 127.747 61.52 C 127.547 66.32 125.047 70.22 119.947 73.42 C 114.447 76.92 108.247 78.12 102.347 78.92 C 91.147 80.52 82.247 81.32 73.547 81.32 C 69.647 81.32 66.347 81.22 63.347 80.92 C 50.147 79.82 38.247 78.62 26.647 74.92 C 20.247 72.92 13.547 70.52 8.447 65.12 C 7.047 63.62 5.747 61.22 7.947 58.32 C 9.647 56.02 11.547 53.72 13.347 51.52 C 13.847 51.02 14.247 50.52 14.547 50.02 C 14.847 49.62 15.247 49.12 15.547 48.82 L 15.647 48.72 L 15.747 48.62 C 16.647 47.52 17.647 46.22 18.747 44.52 L 18.947 44.22 C 20.247 42.32 21.547 40.32 23.147 38.72 C 24.147 37.72 25.047 36.72 25.947 35.72 C 27.747 33.72 29.847 31.52 32.347 29.62 C 37.347 25.82 42.047 23.22 47.147 21.62 C 50.547 20.52 54.147 20.02 58.047 20.02 C 59.147 20.02 60.147 20.02 61.247 20.12 L 61.247 20.12 L 61.247 20.12 C 66.547 20.52 71.347 21.82 75.447 23.92 L 80.647 26.72 L 81.247 20.82 C 81.447 19.02 82.447 17.02 84.147 14.92 C 87.547 10.92 91.547 7.12 97.447 6.12 C 99.447 5.82 101.147 5.72 102.647 5.72 M 102.647 1.72 C 100.747 1.72 98.847 1.92 96.947 2.22 C 89.847 3.42 85.147 7.82 81.247 12.32 C 79.047 14.92 77.647 17.62 77.347 20.42 C 72.647 17.92 67.347 16.52 61.547 16.12 C 60.347 16.02 59.247 16.02 58.047 16.02 C 53.747 16.02 49.747 16.62 45.947 17.82 C 40.547 19.52 35.447 22.22 29.947 26.42 C 27.347 28.42 25.147 30.72 23.047 33.02 C 22.147 34.02 21.247 35.02 20.347 35.92 C 18.347 37.92 16.847 40.22 15.447 42.32 C 14.547 43.72 13.647 45.02 12.747 46.12 C 11.947 47.02 11.247 48.02 10.447 48.92 C 8.547 51.22 6.647 53.52 4.847 55.92 C 1.947 59.72 2.247 64.22 5.647 67.82 C 11.347 73.82 18.547 76.52 25.547 78.72 C 37.647 82.62 49.747 83.82 63.147 84.92 C 66.547 85.22 70.047 85.32 73.647 85.32 C 82.247 85.32 91.347 84.62 103.047 82.92 C 109.347 82.02 116.047 80.62 122.147 76.82 C 128.447 72.82 131.647 67.72 131.847 61.62 C 131.947 56.62 130.147 51.72 126.447 47.42 C 129.347 45.82 132.347 45.12 135.547 45.12 C 136.747 45.12 138.047 45.22 139.247 45.42 C 139.747 45.52 140.347 45.62 140.947 45.72 C 142.547 46.02 144.247 46.42 146.147 46.42 C 148.347 46.42 151.347 45.12 152.347 42.72 C 153.147 41.02 153.147 38.42 149.247 35.72 C 147.547 34.52 146.047 33.62 143.747 32.62 C 142.247 32.02 140.747 31.42 139.247 30.92 C 137.747 30.42 136.347 29.92 135.047 29.32 C 134.947 29.22 134.847 29.12 134.847 29.02 C 134.247 27.52 133.747 26.02 133.147 24.42 C 132.247 21.72 131.247 18.82 129.847 16.12 C 128.247 13.02 125.647 10.02 122.747 8.12 C 116.147 3.92 109.447 1.72 102.647 1.72 L 102.647 1.72 Z"};this.percentageSmooth=0,this.percentageTarget=0,this.ducks=[new LoadingAnimationDuck(e,30,150),new LoadingAnimationDuck(e,250,150),new LoadingAnimationDuck(e,470,150),new LoadingAnimationDuck(e,680,150),new LoadingAnimationDuck(e,900,150),new LoadingAnimationDuck({width:400,height:250,main:"M 264.355 229.792 C 257.155 229.792 250.355 229.592 243.755 229.392 C 238.755 229.192 234.055 229.092 229.655 229.092 C 228.455 229.092 227.355 229.092 226.155 229.092 C 220.455 229.092 214.755 229.192 208.655 229.292 C 202.455 229.392 195.955 229.492 189.455 229.492 C 158.855 229.492 127.155 227.392 102.255 212.492 C 83.955 201.492 67.355 187.092 51.355 168.292 C 42.355 157.792 33.855 147.392 27.655 136.392 C 23.455 129.092 7.055 98.192 9.055 92.792 C 9.155 92.492 9.255 91.992 9.355 91.592 C 9.855 89.392 10.855 85.392 16.955 85.392 C 17.555 85.392 18.255 85.392 18.955 85.492 C 21.255 85.792 25.855 87.792 32.455 90.892 C 32.255 90.192 32.255 89.492 32.455 88.792 C 32.755 88.092 33.355 86.992 35.155 86.692 C 31.955 82.192 32.655 80.592 32.955 79.892 C 33.455 78.692 34.655 77.992 36.155 77.992 C 36.755 77.992 37.455 78.092 38.255 78.392 C 40.455 79.092 44.355 80.992 49.755 83.692 C 58.855 88.192 71.255 94.292 80.555 96.792 C 95.955 100.892 112.655 102.892 123.955 103.792 C 152.055 106.092 180.955 106.392 202.955 106.392 C 208.955 106.392 215.555 106.392 223.655 106.292 L 223.855 106.292 C 224.755 106.292 225.655 106.292 226.755 106.392 C 227.955 106.392 229.255 106.492 230.555 106.492 C 232.455 106.492 238.455 106.492 240.355 104.092 C 242.555 101.492 240.355 98.192 236.855 93.492 C 235.955 92.292 235.055 91.092 234.355 89.892 C 225.855 76.292 223.955 62.092 228.755 47.592 C 231.155 40.392 238.255 22.692 252.855 14.392 C 256.755 12.092 262.855 9.892 267.655 9.092 C 269.155 8.792 270.855 8.692 272.655 8.692 C 274.555 8.692 276.455 8.792 278.355 8.992 L 279.355 9.092 C 282.755 9.392 306.855 16.692 313.855 24.292 C 317.055 27.792 318.555 31.992 319.855 35.792 C 320.855 38.692 321.855 41.392 323.355 43.392 C 325.455 46.092 336.055 48.092 341.755 49.192 C 344.255 49.692 346.455 50.092 347.955 50.492 C 350.055 51.092 352.255 51.592 354.355 52.192 C 359.155 53.392 364.055 54.592 368.755 56.392 C 368.955 56.492 369.555 56.692 370.155 56.792 C 374.355 57.892 378.555 59.292 380.155 62.292 C 380.855 63.592 380.955 65.092 380.455 66.492 C 378.655 71.792 368.955 73.292 361.155 73.692 C 358.355 73.792 355.255 73.892 351.855 73.892 C 347.255 73.892 342.655 73.792 338.155 73.692 C 333.755 73.592 329.155 73.492 324.655 73.492 L 324.455 73.492 C 315.255 73.492 303.055 75.492 298.555 81.092 C 296.855 83.192 296.355 85.692 297.155 88.792 C 300.355 102.392 310.755 114.392 321.755 127.092 C 338.955 146.992 356.755 167.492 345.755 194.892 C 333.355 225.792 295.755 229.792 264.355 229.792 Z",shadow:"M 9.455 95.292 C 9.755 89.992 9.855 94.392 16.555 95.192 C 20.355 95.592 37.755 110.192 42.355 111.792 C 38.755 108.492 25.855 99.392 39.755 103.092 C 37.255 100.392 31.355 86.292 33.555 81.992 C 47.355 87.392 190.355 131.292 222.355 131.092 C 227.255 131.092 237.755 105.192 234.655 100.292 C 227.055 88.092 223.855 71.092 228.455 57.192 C 232.355 45.492 240.855 36.492 251.855 30.192 C 255.555 28.092 261.255 26.092 265.455 25.292 C 268.955 24.592 272.655 24.992 276.155 25.292 C 278.955 25.492 301.755 32.392 308.055 39.292 C 313.155 44.792 313.255 52.792 317.155 57.792 C 320.755 62.292 344.055 60.992 349.455 62.392 C 356.055 64.192 372.055 58.492 378.455 60.892 C 380.455 61.692 380.055 70.192 376.555 74.792 C 373.155 79.392 362.455 80.992 359.955 81.092 C 348.155 81.592 332.255 82.892 320.455 82.892 C 309.855 82.892 287.855 85.692 291.455 100.892 C 299.555 135.992 355.855 171.992 339.155 213.792 C 323.255 253.492 262.655 245.992 228.355 245.792 C 189.555 245.492 139.955 250.592 105.555 229.992 C 86.755 218.692 70.855 204.192 56.655 187.492 C 48.655 177.992 40.655 167.192 33.755 156.792 C 25.755 144.892 8.555 110.992 9.455 95.292 Z",outline:"M 272.555 10.892 C 274.755 10.892 276.855 11.092 279.055 11.292 C 281.855 11.492 305.355 18.592 311.855 25.692 C 317.055 31.392 317.155 39.592 321.255 44.692 C 324.955 49.292 341.755 51.192 347.255 52.692 C 354.055 54.592 361.255 55.992 367.855 58.492 C 369.955 59.292 379.655 60.892 378.055 65.392 C 376.455 69.992 363.655 70.692 361.155 70.792 C 358.155 70.892 355.055 70.992 351.955 70.992 C 342.955 70.992 333.855 70.592 324.855 70.592 C 324.755 70.592 324.755 70.592 324.655 70.592 C 313.755 70.592 291.255 73.492 294.855 89.092 C 303.255 125.092 360.755 150.892 343.655 193.692 C 331.955 222.992 296.555 227.292 264.455 227.292 C 251.855 227.292 239.755 226.592 229.755 226.592 C 228.555 226.592 227.455 226.592 226.255 226.592 C 214.655 226.592 202.255 226.992 189.555 226.992 C 159.355 226.992 127.855 224.892 103.655 210.392 C 84.355 198.792 67.955 183.892 53.455 166.792 C 45.155 157.092 36.255 146.392 29.955 135.292 C 19.955 117.692 10.555 96.592 11.555 93.792 C 12.455 91.292 11.955 88.092 17.055 88.092 C 17.555 88.092 18.155 88.092 18.755 88.192 C 22.655 88.592 39.455 97.492 44.155 99.092 C 41.055 96.192 31.355 89.292 36.455 89.292 C 37.455 89.292 39.055 89.592 41.455 90.192 C 39.055 87.692 33.155 80.692 36.255 80.692 C 36.555 80.692 36.955 80.792 37.555 80.892 C 43.255 82.692 65.255 95.392 79.955 99.292 C 93.755 102.992 109.555 105.192 123.855 106.292 C 149.755 108.392 176.655 108.892 203.055 108.892 C 209.955 108.892 216.855 108.892 223.755 108.792 C 223.855 108.792 223.855 108.792 223.955 108.792 C 225.755 108.792 228.155 108.892 230.655 108.892 C 235.255 108.892 240.155 108.392 242.455 105.492 C 247.055 99.892 239.755 93.392 236.655 88.392 C 228.855 75.892 226.655 62.492 231.355 48.292 C 235.355 36.292 242.955 22.892 254.255 16.492 C 258.055 14.292 263.955 12.292 268.255 11.492 C 269.555 10.992 271.055 10.892 272.555 10.892 M 272.555 5.792 C 270.555 5.792 268.755 5.992 267.055 6.292 C 262.055 7.192 255.655 9.492 251.455 11.892 C 236.155 20.692 228.755 39.092 226.255 46.592 C 221.255 61.892 223.155 76.792 232.055 91.092 C 232.855 92.392 233.755 93.592 234.755 94.792 C 238.655 99.892 238.955 101.392 238.355 102.192 C 238.055 102.492 236.655 103.692 230.455 103.692 C 229.155 103.692 227.955 103.692 226.755 103.592 C 225.655 103.592 224.655 103.492 223.755 103.492 L 223.555 103.492 C 215.455 103.592 208.955 103.592 202.955 103.592 C 180.955 103.592 152.155 103.292 124.155 101.092 C 112.955 100.192 96.455 98.292 81.155 94.192 C 72.155 91.792 59.855 85.692 50.855 81.292 C 45.355 78.592 41.355 76.592 38.955 75.892 C 37.955 75.592 36.955 75.392 36.155 75.392 C 33.655 75.392 31.555 76.692 30.655 78.892 C 29.655 81.192 30.355 83.592 31.555 85.792 C 31.055 86.292 30.755 86.792 30.455 87.192 C 24.755 84.592 21.455 83.292 19.255 82.992 C 18.455 82.892 17.655 82.892 16.955 82.892 C 8.755 82.892 7.355 88.792 6.855 90.992 C 6.755 91.392 6.655 91.692 6.555 91.992 C 5.955 93.692 5.055 95.992 11.755 110.992 C 15.455 119.392 20.455 129.192 25.355 137.792 C 31.755 148.992 40.355 159.492 49.355 170.092 C 65.455 189.092 82.355 203.692 100.855 214.792 C 126.355 230.092 158.455 232.192 189.455 232.192 C 195.955 232.192 202.455 232.092 208.655 231.992 C 214.755 231.892 220.455 231.792 226.155 231.792 C 227.355 231.792 228.455 231.792 229.655 231.792 C 233.955 231.792 238.655 231.992 243.655 232.092 C 250.255 232.292 257.155 232.492 264.355 232.492 C 296.555 232.492 335.255 228.292 348.255 195.692 C 353.455 182.592 352.955 169.792 346.555 156.592 C 341.155 145.392 332.355 135.192 323.755 125.292 C 312.955 112.792 302.655 100.992 299.655 88.092 C 298.955 85.092 299.755 83.592 300.555 82.492 C 304.155 77.892 315.155 75.892 324.455 75.792 L 324.655 75.792 C 329.055 75.792 333.655 75.892 338.055 75.992 C 342.555 76.092 347.155 76.192 351.755 76.192 C 355.155 76.192 358.255 76.092 361.155 75.992 C 373.655 75.392 380.855 72.392 382.755 67.092 C 383.455 64.992 383.355 62.792 382.255 60.792 C 379.955 56.492 374.355 54.992 370.655 53.992 C 370.255 53.892 369.655 53.692 369.455 53.692 C 364.655 51.892 359.655 50.692 354.855 49.492 C 352.655 48.892 350.555 48.392 348.455 47.892 C 346.855 47.492 344.655 46.992 342.055 46.492 C 337.955 45.692 327.055 43.692 325.155 41.592 C 323.855 39.992 322.955 37.392 322.055 34.692 C 320.655 30.692 319.055 26.192 315.555 22.292 C 307.855 13.892 283.155 6.492 279.355 6.192 L 278.355 6.092 C 276.555 5.992 274.655 5.792 272.555 5.792 L 272.555 5.792 Z"},1070,20)];let t=1/this.ducks.length;for(let e=0;e<this.ducks.length;e++){let i=this.ducks[e];this.el.appendChild(i.el),i.setLoadingMappings(e*t,(e+1)*t)}this.setPercentageImmediate(0)}setPercentage(e){this.percentageTarget=e}loop(e,t){if(this.visible){for(let t=0;t<this.ducks.length;t++){this.ducks[t].setHeight(10*Math.cos(.003*e+t))}this.percentageSmooth=lerpt(this.percentageSmooth,this.percentageTarget,.1),this.setPercentageImmediate(this.percentageSmooth)}}setPercentageImmediate(e){for(const t of this.ducks)t.setLoadPercentage(e)}setVisibility(e){this.visible=e,this.el.style.display=e?null:"none"}}class LoadingAnimationDuck{constructor(e,t,i){this.el=document.createElementNS(svgNS,"svg"),this.el.setAttribute("class","loadingAnimationDuck"),this.el.setAttribute("width",e.width),this.el.setAttribute("height",e.height),this.width=e.width,this.height=e.height,this.el.style.left=t+"px",this.el.style.top=i+"px",this.loadStart=0,this.loadEnd=1;let n=document.createElementNS(svgNS,"defs");this.el.appendChild(n);let r=document.createElementNS(svgNS,"clipPath");n.appendChild(r),this.clipId=r.id="loadingAnimationClipPath_"+Math.random().toString(36).substr(2,9),this.clipRect=document.createElementNS(svgNS,"rect"),this.clipRect.setAttribute("x",0),this.clipRect.setAttribute("y",0),this.clipRect.setAttribute("width",e.width),this.clipRect.setAttribute("height",e.height),r.appendChild(this.clipRect),this.createPath(e.shadow,"LoadingAnimationPathShadow"),this.createPath(e.main,"LoadingAnimationPathShadow"),this.createPath(e.main,"LoadingAnimationPathMain",!0),this.createPath(e.outline,"LoadingAnimationPathOutline")}createPath(e,t,i=!1){let n=document.createElementNS(svgNS,"path");return n.setAttribute("d",e),n.setAttribute("class",t),i&&n.setAttribute("style",`clip-path: url(#${this.clipId})`),this.el.appendChild(n),n}setLoadingMappings(e,t){this.loadStart=e,this.loadEnd=t}setLoadPercentage(e){e=mapValue(this.loadStart,this.loadEnd,0,1,e,!0),this.clipRect.setAttribute("width",this.width*e)}setHeight(e){this.el.style.transform=`translateY(${e}px)`}}class SocialButton extends GenericButton{constructor({onClick:e=null,icon:t=null,ariaLabel:i="Social Button"}={}){super({onClick:e,icon:t,iconContainerWidth:10,hoverScaleAmount:.53,classes:["social"],addShine:!1,ariaLabel:i})}}class IndexedDbUtil{static get dbName(){return"keyValuesDb"}static get objectStoreName(){return"keyValues"}static init(){this.supported=!1;try{let e=indexedDB.open(this.dbName);e.onupgradeneeded=t=>{e.result.createObjectStore(this.objectStoreName)},this.supported=!0}catch(e){console.log("error while opening indexedDB: ",e)}}static get(e){if(!this.supported){let t=Util.lsGet("indexedDBFallback"+e);try{t=JSON.parse(t)}catch(e){t=null}return Promise.resolve(t)}return new Promise(((t,i)=>{let n=indexedDB.open(this.dbName);n.onsuccess=r=>{let s=n.result.transaction(this.objectStoreName,"readonly").objectStore(this.objectStoreName).get(e);s.onsuccess=()=>{t(s.result)},s.onerror=()=>{i()}},n.onerror=()=>{i()}}))}static set(e,t){return this.getSet(e,(()=>t))}static getSet(e,t){if(!this.supported){let i=Util.lsGet(e),n=t(i);return Util.lsSet("indexedDBFallback"+e,JSON.stringify(n)),Promise.resolve()}return new Promise(((i,n)=>{let r=indexedDB.open(this.dbName);r.onsuccess=s=>{let o=r.result.transaction(this.objectStoreName,"readwrite").objectStore(this.objectStoreName),a=o.openCursor(e);a.onsuccess=()=>{let r=a.result;if(r){let e=t(r.value),s=r.update(e);s.onsuccess=()=>{i()},s.onerror=()=>{n()}}else{let r=o.put(t(null),e);r.onsuccess=()=>{i()},r.onerror=()=>{n()}}},a.onerror=()=>{n()}},r.onerror=e=>{n()}}))}}class ShareHat{constructor({icon:e=null,url:t="null",storageName:i=null,hatId:n=-1}={}){this.el=document.createElement("div"),this.el.classList.add("shareHat"),this.el.style.backgroundImage=`url(${e})`,this.hatId=n,this.boundMakeAvailableThings=this.makeAvailableThings.bind(this),this.el.addEventListener("click",(e=>{this.openWindow(t,"Share to unlock a party hat"),window.addEventListener("focus",this.boundMakeAvailableThings)})),this.storageName=i,this.didShare=!1}init(){this.loadStorageValue()}openWindow(e,t){let i=(screen.width-500)/2,n=(screen.height-700)/2;window.open(e,t,`toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=500, height=700, left=${i}, top=${n}`)}makeAvailableThings(){this.makeHatAvailable(),this.didShare=!0,this.setStorageValue(!0),this.setVisibility(),window.removeEventListener("focus",this.boundMakeAvailableThings)}async loadStorageValue(){try{this.didShare=await IndexedDbUtil.get(this.storageName)}catch(e){}this.didShare=!!this.didShare,this.didShare&&this.makeHatAvailable(),this.setVisibility()}async resetStorageValue(){await this.setStorageValue(!1),this.didShare=!1,this.setVisibility()}async setStorageValue(e){try{await IndexedDbUtil.set(this.storageName,e)}catch(e){}}makeHatAvailable(){main.hats.unlockPartyHat()}setVisibility(){main.mainMenu.updateShareHatVisibility()}}class MainMenu{constructor(){this.el=document.createElement("div"),this.el.classList.add("mainMenu","menuScreen","fullScreen"),document.body.appendChild(this.el),this.visible=!1,this.hasBeenVisibleOnce=!1,this.didShowInitialInterstitial=!1,this.lastHideTime=0;let e=document.createElement("div");e.classList.add("mainMenuLogo","imageEl"),this.el.appendChild(e);let t=document.createElement("div");t.classList.add("mainMenuButtonContainer"),this.el.appendChild(t),this.playButton=new GenericButton({text:"Play",hoverScaleAmount:1.05,onClick:e=>{this.startGame()}}),t.appendChild(this.playButton.el),this.loadingAnimation=new LoadingAnimation,t.appendChild(this.loadingAnimation.el),this.loadingAnimation.setVisibility(!1),t.appendChild(document.createElement("br")),this.inviteFriendsButton=new GenericButton({text:"Invite friends",fontSize:16,padding:10,addShine:!1,textStroke:1.5,textShadow:2.5,onClick:async e=>{let t=-1==main.networkManager.currentRoomId||null==main.networkManager.currentRoomId,i=!0;if(t&&(main.networkManager.reconnectWebSocketAfterFail(),i=await Promise.race([(async e=>(await main.networkManager.waitForRoomJoin(),!0))(),(async e=>(await main.networkManager.waitForWebSocketFail(),!1))()])),i){if(!await this.copyCurentLink(!1)&&t){const e=main.input.getClickActionText();let t=main.toasts.showMessage(`Room created, ${e} here to copy the link.`,{autoHideSeconds:-1,onClick:e=>{t.hide(),this.copyCurentLink()}})}}}}),this.inviteFriendsButton.el.style.marginTop="30px",t.appendChild(this.inviteFriendsButton.el),this.leftAdBox=document.createElement("div"),this.leftAdBox.classList.add("mainMenuAdBox"),this.el.appendChild(this.leftAdBox),this.smallAdBox=document.createElement("div"),this.smallAdBox.classList.add("mainMenuAdBoxSmall"),this.el.appendChild(this.smallAdBox),this.prevAdState=null,this.textBoxContainer=document.createElement("div"),this.textBoxContainer.classList.add("mainMenuTextBoxContainer"),this.el.appendChild(this.textBoxContainer),this.textBox=document.createElement("div"),this.textBox.classList.add("mainMenuTextBox"),this.socialButtons=document.createElement("div"),this.socialButtons.classList.add("SocialSection"),this.textBox.appendChild(this.socialButtons);let i=document.createElement("h2");i.textContent="Welcome to Ducklings!",this.textBox.appendChild(i);const n="You're a duck now.\nSwim around and search for lonely lost ducklings.\n\nBy bringing back ducklings you'll be rewarded with upgrades to your nest and new hats!\n\nRelax, swim around and have fun.\n".split("\n");for(let e=0;e<n.length;e++){const t=n[e];this.textBox.appendChild(document.createTextNode(t)),this.textBox.appendChild(document.createElement("br"))}this.textBoxContainer.appendChild(this.textBox),this.privacyPolicyButton=new GenericButton({text:"Privacy policy",onClick:()=>{window.open("http://privacy.pelicanparty.co/","_blank")},classes:["secondary"],addShine:!1,fontSize:11,textStroke:.3,padding:10}),this.textBox.appendChild(this.privacyPolicyButton.el),this.moreGamesButton=new GenericButton({text:"More Games",onClick:e=>{window.open("http://pelicanparty.co/#games","_blank")},classes:["secondary"],addShine:!1,fontSize:20,textStroke:1.4,padding:10}),this.textBox.appendChild(this.moreGamesButton.el),this.storeButtons=document.createElement("div"),this.storeButtons.classList.add("SocialSection"),this.textBox.appendChild(this.storeButtons),this.pokiStoreButton=this.createStoreButton("svg/pokiBadge.svg","https://poki.com/en/g/ducklings-io","Play on Poki Button"),this.storeButtons.appendChild(this.pokiStoreButton),this.storeButtons.appendChild(this.createStoreButton("svg/appleAppStore.svg","https://apps.apple.com/app/id1472975856","Apple App Store Button")),this.storeButtons.appendChild(this.createStoreButton("svg/googlePlayStore.svg","https://play.google.com/store/apps/details?id=co.pelicanparty.ducklings","Google Play Store Button")),this.createShareButton("discord","https://discord.gg/7UaZT92","Discord"),this.createShareButton("twitter","https://twitter.com/pelican_party","Twitter"),this.createShareButton("instagram","https://www.instagram.com/pelicanpartystudios/","Instagram"),this.createShareButton("youtube","https://www.youtube.com/channel/UCYXAEHzkAG1UZQucobX7qPg","Youtube"),this.partnersEl=document.createElement("div"),this.textBox.appendChild(this.partnersEl),this.tagsText=document.createElement("div"),this.textBox.appendChild(this.tagsText),this.tagsText.textContent="Ducklings is a free to play, easy to play, all ages, web game with co-op multiplayer. Perfect for playing with friends and family. Teamwork is important. Invite and play with friends, explore together by sharing the unique room code. Create the biggest duck empire. There is no limit to the number of players you can invite. Crossplay with the web and iOS and Android app is possible. Unlock crazy nest stages and funny hats by retrieving ducklings. The more ducklings you save the crazier the in-game rewards become and your nest will, get a playground for your cute ducklings, unlock a school, zen garden, windmill, Mexican style garden, cozy lights, lighthouse, carnival ship, a gate to protect your base, feather decoration, rollercoaster, have a big spinning Ferris wheel, get a golden statue of yourself. Parade your crazy hats to your friends. Ducklings has over 50 hats to unlock. Crazy hats like a flamingo hat, a helicopter hat, crocodile hat, flag hat, wig hat, crab hat, pelican hat, wooden headphones with cool glasses hat, tiara, egg hat, warrior hat, Ceasar hat, flower hat, koala hat, zen hat, Robin Hood-style hat, gentleman's hat, feather hat,  jellyfish hat, wizard hat, duckling hat, Russian type hat, and a golden crown! Ducklings has a karma system, if you don't steal from other ducks they will try to not steal from you. If you steal from other ducks they will be more likely to steal some ducklings out of your chain, but after stealing some from you they will leave you alone again. This is connected to the player so if you play with friends and they steal this won't affect your karma score. Use this to your advantage. Have one friend aggressively steal ducklings, hand them over to the less hostile player to return them home. If one of the players dies he will lose some of his progress, so make sure the most experienced players are returning the ducklings. Watch out for enemies, these are sailboats and rowboats. The further you get in the game the faster they will move. So learn their pattern of moving to not get hit.";let r=document.createElement("div");r.classList.add("mainMenuSettingsContainer"),this.el.appendChild(r),this.resetProgressButton=new GenericButton({icon:"svg/reset.svg",ariaLabel:"Reset Progress",onClick:e=>{this.requestProgressReset()},classes:["mainmenusettingsbutton"]}),r.appendChild(this.resetProgressButton.el),this.musicButton=new GenericButton({icon:"svg/musicIcon.svg",ariaLabel:"Mute Music",onClick:e=>{this.musicMuted=!this.musicMuted,this.updateMutedMusic()},classes:["mainmenusettingsbutton"]}),r.appendChild(this.musicButton.el),this.sfxButton=new GenericButton({icon:"svg/soundIcon.svg",ariaLabel:"Mute Sound Effects",shineType:"shine2",onClick:e=>{this.sfxMuted=!this.sfxMuted,this.updateMutedSfx()},classes:["mainmenusettingsbutton"]}),r.appendChild(this.sfxButton.el),this.shareHatContainer=document.createElement("div"),this.shareHatContainer.classList.add("shareHatContainer","hidden"),this.shareHatContainer.classList.add("SocialSection"),this.el.appendChild(this.shareHatContainer),this.facebookShareHat=new ShareHat({icon:"svg/facebookShare.svg",url:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fducklings.io%2F&display=popup&ref=plugin&src=like&kid_directed_site=0&app_id=497152094416911",storageName:"didShareFacebook",hatId:1}),this.twitterShareHat=new ShareHat({icon:"svg/twitterShare.svg",url:"https://twitter.com/intent/tweet?hashtags=ducklings&related=pelican_party%3ADeveloper%2C&text=I%27m%20not%20available%20right%20now%2C%20I%27m%20a%20duck.%20Quack!&tw_p=tweetbutton&url=http%3A%2F%2Fducklings.io",storageName:"didShareTwitter",hatId:2}),this.shareHats=[this.facebookShareHat,this.twitterShareHat];for(const e of this.shareHats)this.shareHatContainer.appendChild(e.el);let s=document.createElement("div");s.classList.add("shareHatArrowText"),this.shareHatContainer.appendChild(s);let o=document.createElement("div");o.classList.add("shareHatArrow"),s.appendChild(o);let a=document.createElement("span");a.classList.add("shareHatText"),a.textContent="Share to unlock party hats",s.appendChild(a),this.lastMainMenuInterstitialTime=0,window.addEventListener("keydown",(e=>{"Escape"!=e.code&&27!=e.keyCode||this.onPauseButtonPress()})),ResizeHandler.addListener((e=>{this.onResize()}))}get hideOutgoingLinks(){const e=main.ads.adLad.activePlugin;return null!=e&&"adinplay"!=e}get hidePartnerLinks(){return this.hideOutgoingLinks||this.onArmorGames}init(){if(this.updateMutedMusic(),this.updateMutedSfx(),this.onArmorGames="true"==main.search.armorgames,this.hideOutgoingLinks&&(this.storeButtons.style.display="none",this.socialButtons.style.display="none",this.tagsText.style.display="none",this.moreGamesButton.setVisibility(!1),this.privacyPolicyButton.setVisibility(!1)),this.hidePartnerLinks&&(this.pokiStoreButton.style.display="none"),!this.hidePartnerLinks){const e=document.createElement("h2");e.textContent="Partners:",this.partnersEl.appendChild(e);let t=[{text:"FreeGames",url:"https://www.freegames.com/game/Ducklings-Io"},{text:"GamingGuides",url:"https://gaminguides.com/ducklings-io/"},{text:"Game Keys",url:"https://gameskeys.net/product/nugget-royale/"},{text:"igroutka",url:"https://igroutka.ru/igry-io/29619-ducklingsio.html"},{text:"Crazy Games",url:"https://www.crazygames.com/game/ducklings"},{text:"Insane Games",url:"https://insanegames.io/"},{text:"More io Games",url:"http://iogames.space/"},{text:"GamesDonkey",url:"https://www.gamesdonkey.com/"},{text:"io-games.zone",url:"http://io-games.zone"},{text:"AddictingGames",url:"https://www.addictinggames.com/"},{text:"SilverGames",url:"https://www.silvergames.com/"},{text:"ALLGAMES.IO",url:"https://www.allgames.io"},{text:"Gamez.io",url:"https://www.gamez.io"},{text:"Play IO Games",url:"http://iogames.fun"},{text:"vitalitygames",url:"https://www.vitalitygames.com"},{text:"Zuzu.games",url:"https://www.zuzu.games/"},{text:"Yaks Games",url:"https://yaksgames.com/category/.io-games"},{text:"Iogames.live",url:"https://iogames.live/best-io-games/"},{text:"Supegames.com",url:"http://supegames.com/3d-games/ducklings-io/"},{text:"Brightygames.com",url:"https://www.brightestgames.com/game/double-dodgers"},{text:"Culga",url:"https://culga.com/game/ducklings-io/"}];for(const e of t){let t=new GenericButton({text:e.text,onClick:t=>{window.open(e.url,"_blank")},classes:["secondary","block"],addShine:!1,fontSize:14,textStroke:1.4,padding:10});this.partnersEl.appendChild(t.el)}}this.onArmorGames&&this.textBoxContainer.classList.add("overrideAaddss");for(const e of this.shareHats)e.init();main.input.mainInput.onMainPressed((e=>{this.visible&&this.playButton.click(!0)})),main.networkManager.onHasBeenMultiplayerGameChange((e=>{this.updateResetProgressVisibility()})),this.updateResetProgressVisibility(),main.search.requestProgressReset&&this.resetProgressButton.visible&&this.requestProgressReset(),this.onResize(),this.setVisibility(!0)}createStoreButton(e,t,i){let n=document.createElement("a");n.classList.add("storeButton"),n.href=t,n.target="_blank",n.rel="noopener";let r=document.createElement("img");return r.src=e,r.width=200,r.alt=i,n.appendChild(r),n}loop(e,t){this.visible&&this.loadingAnimation.loop(e,t)}async startGame(){let e=main.assets.getPackage("main");e.loaded||(this.playButton.setVisibility(!1),this.loadingAnimation.setVisibility(!0),e.onProgress((e=>{this.loadingAnimation.setPercentage(e)})),await e.waitForLoad()),this.didShowInitialInterstitial=!0,await main.ads.adLad.showFullScreenAd(),await main.networkManager.waitForFullHostState(),main.sfx.playSound("gameStart"),main.game.startGame(),main.serviceWorker.hideUpdateMessage(),this.setVisibility(!1)}updateMutedSfx(){this.sfxButton.el.style.opacity=this.sfxMuted?.3:1,this.sfxButton.setAriaToggledState(this.sfxMuted),main.sfx.setMutedSettings(this.sfxMuted)}updateMutedMusic(){this.musicButton.el.style.opacity=this.musicMuted?.3:1,this.musicButton.setAriaToggledState(this.musicMuted),main.game.setMutedMusic(this.musicMuted)}get musicMuted(){return void 0===this._musicMuted&&(this._musicMuted="true"==lsGet("musicMuted")),this._musicMuted}set musicMuted(e){this._musicMuted=e,lsSet("musicMuted",e)}get sfxMuted(){return void 0===this._sfxMuted&&(this._sfxMuted="true"==lsGet("sfxMuted")),this._sfxMuted}set sfxMuted(e){this._sfxMuted=e,lsSet("sfxMuted",e)}get lastVisibleMsAgo(){return this.visible?0:main.now-this.lastHideTime}onPauseButtonPress(){main.game.gameStarted&&(main.serviceWorker.hideUpdateMessage(),main.mainMenu.setVisibility(!main.mainMenu.visible),main.game.setGamePaused(this.visible),this.lastMainMenuInterstitialTime=main.now)}setVisibility(e){this.visible!=e&&(this.visible=e,e?(this.hasBeenVisibleOnce&&(this.playButton.setVisibility(!0),this.loadingAnimation.setVisibility(!1)),this.hasBeenVisibleOnce=!0):this.lastHideTime=main.now,this.el.classList.toggle("hidden",!e),main.cornerScore.setVisibility(!e),main.cam.updateProjectionMatrixOffset(),main.game.updateMyPlayerPaused(),main.hats.updateCycleTutorialMessage(),main.cornerScore.makeHatCountTemporaryVisible(),main.ads.updateBannerVisibilities())}updateResetProgressVisibility(){this.resetProgressButton.setVisibility(!main.networkManager.thisRoomHasBeenMultiplayer)}requestProgressReset(){confirm("Do you want to reset your progress? You will keep your hats.")&&main.cornerScore.resetProgress()}updateShareHatVisibility(){let e=this.shareHats.some((e=>e.didShare));const t=!e&&!CORDOVA&&!this.hideOutgoingLinks;this.shareHatContainer.classList.toggle("hidden",!t),main.hats.setPartyHatUnlockable(e||t)}async copyCurentLink(e=!0){let t=location.origin+location.pathname+location.hash;t="https://ducklings.io/"+window.location.hash;const i=await main.ads.adLad.customRequest("getShareableUrl",{room:main.networkManager.currentRoomId});i&&(t=i);const n=await copyTextToClipboard(t);return n?main.toasts.showMessage("Link copied. Share it with your friends to play together."):e&&main.toasts.showMessage(`Failed to copy the link, please share ${t} manually.`),n}createShareButton(e,t,i){let n=new SocialButton({icon:`svg/shareButtons/${e}.svg`,onClick:async e=>{window.open(t)},ariaLabel:i});this.socialButtons.appendChild(n.el)}onResize(){this.setAdContainerPosition()}setAdContainerPosition(){let e,t="none"!=window.getComputedStyle(this.leftAdBox).display,i="none"!=window.getComputedStyle(this.smallAdBox).display;e=t&&window.innerHeight>720?"multisize":t?"smallLeft":i?"smallRight":"none",this.prevAdState!=e&&(this.prevAdState=e,main.ads.updateBannerVisibilities())}}class ToastMessage{constructor(e,{autoHideSeconds:t=4,onClick:i=null}={}){this.el=document.createElement("div"),this.el.classList.add("toastMessage","hidden"),this.el.textContent=e,i&&(this.el.addEventListener("click",(e=>{i()})),this.el.classList.add("clickable")),document.body.appendChild(this.el),recalculateStyle(this.el),this.hidden=!1,this.onHideCbs=new Set,this.el.classList.remove("hidden"),this.autoHideSeconds(t)}async autoHideSeconds(e){e>0&&(await Timeout.promise(1e3*e),this.hide())}async hide(){if(!this.hidden){this.hidden=!0,this.el.classList.add("hidden"),this.setY(0),main.toasts.updateToastPositions();for(const e of this.onHideCbs)e();this.onHideCbs.clear(),await Timeout.promise(1e3),document.body.removeChild(this.el),main.toasts.removeToast(this)}}onHide(e){this.onHideCbs.add(e)}setY(e){this.hidden?this.el.style.transform=null:this.el.style.transform=`translate(-50%, ${e}px)`}getHeight(){return this.el.getBoundingClientRect().height+30}}class ToastMessageManager{constructor(){this.toastMessages=new Set}showMessage(e,t){const i=new ToastMessage(e,t);return this.toastMessages.add(i),this.updateToastPositions(),i}removeToast(e){this.toastMessages.delete(e)}updateToastPositions(){let e=parseInt(getComputedStyle(document.body).getPropertyValue("--safe-area-inset-top"));isNaN(e)&&(e=0);let t=30+e;for(const e of this.toastMessages)e.hidden||(e.setY(t),t+=e.getHeight())}}class HatManager{constructor(){this.unlockedHats=["empty"],this.partyHatName="PartyHat",this.partyHatUnlockable=!0,this.onMaxHatCountUpdatedCbs=new Set,this.stageUnlockableHatNames=["smallCap","egg","flagCap","normalCap","greenPointyHat","nestHat","bushWithCap",["flowerHead","flowerHeadCoolGlasses"],"koala","stoneHat","flagCapBlue","bird","nonLaHat","hatWithWIg","robinHood",["topHat","topHatCoolGlasses"],"flagCapRed",["feathers","feathersCoolGlasses"],"propellerHat","frog","apple","santaHat","crab","sombrero","pelican","eggHelmet",["headphones","headphonesGlasses"],"tiara",["flowerGrowing","flowerGrowingCoolGlasses"],"basicCrown",["flowerHat","flowerHatCoolGlasses","flowerHatHeadphones"],"squid","wizardHat","croc","flamingo","ducklingCap","backwardsCapGlasses","russianHat","ultimateCrown"],this.sortedHatNames=["empty",this.partyHatName];for(const e of this.stageUnlockableHatNames)"string"==typeof e?this.sortedHatNames.push(e):Array.isArray(e)&&this.sortedHatNames.push(...e);this.hatNamesById=this.sortedHatNames.slice().sort(),this.currentCycleHatsMessage=null,this.currentCycleHatsMessageType=null,this.hatUnlockedMessages=new Set}init(){this.loadUnlockedHats(),main.input.mainInput.onInputTypeChange((e=>{this.updateCycleTutorialMessage()})),main.networkManager.onHasBeenMultiplayerGameChange((e=>{if(e){const e=4-this.unlockedHats.length;this.unlockNewStageHat(e,!0)}}))}loadUnlockedHats(){const e=lsGet("unlockedHats")||"empty";this.unlockedHats=e.split(","),this.sortUnlockedHats(),main.cornerScore.updateHatUi()}saveUnlockedHats(){lsSet("unlockedHats",this.unlockedHats.join(","))}get lastSelectedHat(){return lsGet("lastSelectedHat")||"empty"}set lastSelectedHat(e){lsSet("lastSelectedHat",e)}getNextHat(e){if(this.unlockedHats.length<=0)return-1;let t=this.unlockedHats.indexOf(e);return t<0&&(t=0),t++,t=mod(t,this.unlockedHats.length),this.unlockedHats[t]}hatNameToId(e){return this.hatNamesById.indexOf(e)}hatIdToName(e){return this.hatNamesById[e]||"empty"}sortUnlockedHats(){this.unlockedHats.sort(((e,t)=>this.sortedHatNames.indexOf(e)-this.sortedHatNames.indexOf(t)))}getUnlockedHatCount(){let e=0;for(const t of this.unlockedHats)this.sortedHatNames.includes(t)&&"empty"!=t&&e++;return e}getMaxHatCount(){let e=0;for(const t of this.sortedHatNames)"empty"!=t&&e++;return this.partyHatUnlockable||e--,e}onMaxHatCountUpdated(e){this.onMaxHatCountUpdatedCbs.add(e)}unlockNewStageHat(e=1,t=!1){let i=[];for(let t=0;t<e;t++)i.push(...this.getNextUnlockableStageGroup(i));this.unlockHats(i,t)}getNextUnlockableStageGroup(e=[]){for(const t of this.stageUnlockableHatNames){let i=[];"string"==typeof t?i=[t]:Array.isArray(t)&&(i=t);let n=!0;for(const t of i)if(!this.unlockedHats.includes(t)&&!e.includes(t)){n=!1;break}if(!n)return i}return[]}unlockPartyHat(){this.unlockHats([this.partyHatName],!0)}setPartyHatUnlockable(e){this.partyHatUnlockable=e;for(const e of this.onMaxHatCountUpdatedCbs)e()}unlockHats(e,t=!1){if(!((e=e.filter((e=>this.sortedHatNames.includes(e)&&!this.unlockedHats.includes(e)))).length<=0)){for(const t of e)this.unlockedHats.push(t);if(t){const t=e[e.length-1];for(const e of main.game.getMyControllablePlayers())e.setSelectedHatName(t);this.lastSelectedHat=t}this.sortUnlockedHats(),this.saveUnlockedHats(),this.updateCycleTutorialMessage(),this.doUnlockedHatMessage(e.length)}}async doUnlockedHatMessage(e){if(main.cornerScore.updateHatUi(!0),!main.mainMenu.visible&&this.hasCycledHatOnce)return;await main.cornerScore.waitForHatCountUpdate();let t=null;t=1==e?main.toasts.showMessage("New hat unlocked."):main.toasts.showMessage(e+" new hats unlocked."),t.onHide((e=>{this.updateCycleTutorialMessage()})),this.hatUnlockedMessages.add(t),this.updateCycleTutorialMessage()}get hasUnlockedHat(){for(const e of this.unlockedHats)if(this.sortedHatNames.includes(e)&&"empty"!=e)return!0;return!1}get hatUnlockedMessageVisible(){for(const e of this.hatUnlockedMessages)e.hidden&&this.hatUnlockedMessages.delete(e);return this.hatUnlockedMessages.size>0}get hasCycledHatOnce(){return"true"==lsGet("hasCycledHatOnce")}cycledHatOnce(){lsSet("hasCycledHatOnce","true"),this.updateCycleTutorialMessage()}updateCycleTutorialMessage(){main.game.nearbyNestForHatSwitch&&!main.mainMenu.visible&&this.hasUnlockedHat&&!this.hasCycledHatOnce&&!this.hatUnlockedMessageVisible?this.setCycleHatsMessage(main.input.mainInput.lastUsedInputType):this.setCycleHatsMessage(null)}setCycleHatsMessage(e){if(e!=this.currentCycleHatsMessageType&&(this.currentCycleHatsMessageType=e,this.currentCycleHatsMessage&&(this.currentCycleHatsMessage.hide(),this.currentCycleHatsMessage=null),e)){let t="quack";"mouse"==e?t="click":"keyboard"==e?t="press space":"touch"==e?t="tap":"gamepad"==e&&(t="quack"),this.currentCycleHatsMessage=main.toasts.showMessage(`While near your nest, ${t} to change your hat.`,{autoHideSeconds:-1})}}}class DeveloperBooleanState{constructor({defaultState:e=!1,defaultPluginState:t=!1,pluginInitializePromise:i=null,trueCall:n,falseCall:r,stateName:s,pluginName:o}){this.pluginInitializePromise=i,this.pluginInitialized=!1,this.trueCall=n,this.falseCall=r,this.stateName=s,this.pluginName=o,this.lastSentState=t,this.stateQueue=[e],this.onEmptyQueueCallbacks=new Set,this.lastSentStatePromise=Promise.resolve(),this.lastUpdateSymbol=Symbol(),(async()=>{await this.pluginInitializePromise,await this.updateState(),this.pluginInitialized=!0})()}setState(e){this.stateQueue.push(e),this.updateState()}async updateState(){const e=Symbol();if(this.lastUpdateSymbol=e,this.pluginInitializePromise&&await this.pluginInitializePromise,this.lastSentStatePromise&&await this.lastSentStatePromise,this.lastUpdateSymbol==e){if(this.pluginInitialized){if(this.stateQueue.length>0){const e=this.stateQueue[this.stateQueue.length-1];e==this.lastSentState?this.stateQueue=[]:this.stateQueue=[e]}}else this.stateQueue=filterStateQueue(this.lastSentState,this.stateQueue);if(this.stateQueue.length>0){const e=this.stateQueue.shift(),t=e?this.trueCall:this.falseCall;this.lastSentStatePromise=(async()=>{try{const e=t()||Promise.resolve();await e}catch(e){console.error(`An error occurred while trying to change the ${this.stateName} state of the "${this.pluginName}" plugin:`,e)}})(),this.lastSentState=e,this.updateState()}else this.onEmptyQueueCallbacks.forEach((e=>e())),this.onEmptyQueueCallbacks.clear()}}async waitForEmptyQueue(){if(0==this.stateQueue.length)return;const e=new Promise((e=>{this.onEmptyQueueCallbacks.add(e)}));await e}}function filterStateQueue(e,t){return(t=filterQueueDuplicates(e,t)).length>0&&(t=[t[0],t[t.length-1]]),filterQueueDuplicates(e,t)}function filterQueueDuplicates(e,t){const i=[];let n=e;for(const e of t)e!=n&&(i.push(e),n=e);return i}class PluginBooleanState{constructor(e){this._value=e,this._onChangeCbs=new Set}get value(){return this._value}onChange(e){this._onChangeCbs.add(e)}removeOnChange(e){this._onChangeCbs.delete(e)}setValue(e){e!=this._value&&(this._value=e,this._onChangeCbs.forEach((t=>t(e))))}}function getBestPlugin(e=[]){const t=e.filter((e=>!e.shouldBeActive||e.shouldBeActive()));return t.length>0?t[0]:null}function sanitizeFullScreenAdResult(e){let t;if(e&&"object"==typeof e)if(!0===e.didShowAd||null===e.didShowAd)t={didShowAd:e.didShowAd,errorReason:null};else{const i=["not-supported","no-ad-available","adblocker","time-constraint","user-dismissed","unknown"],n=i.indexOf(e.errorReason);let r=i[n];r||(r="unknown"),t={didShowAd:!1,errorReason:r}}else t={didShowAd:!1,errorReason:"unknown"};return t}function generateUuid(){let e=(new Date).getTime(),t=performance&&performance.now&&1e3*performance.now()||0;return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(i=>{let n=16*Math.random();return e>0?(n=(e+n)%16|0,e=Math.floor(e/16)):(n=(t+n)%16|0,t=Math.floor(t/16)),("x"===i?n:3&n|8).toString(16)}))}const invalidQueryStringBehaviourTypes=["error","fallback","none"];class AdLad{constructor(e){let t=[],i=null,n=!0,r="adlad",s="fallback",o=!1;e&&(Array.isArray(e)?t=e:(t=e.plugins||[],void 0!==e.plugin&&(i=e.plugin),!1===e.allowQueryStringPluginSelection&&(n=!1),e.pluginSelectQueryStringKey&&(r=e.pluginSelectQueryStringKey),e.invalidQueryStringPluginBehaviour&&invalidQueryStringBehaviourTypes.includes(e.invalidQueryStringPluginBehaviour)&&(s=e.invalidQueryStringPluginBehaviour),e.useTestAds&&(o=!0)));for(const e of t)if(!e.name.match(/^[a-z]([a-z_-]*[a-z])?$/))throw new Error(`The plugin "${e.name}" has an invalid name.`);this._plugin=null;let a=!1;if(n&&window.location){const e=new URL(window.location.href).searchParams.get(r);if(e){const i=t.find((t=>t.name==e))||null;if(!i){if("error"==s)throw new Error(`The plugin "${e}" does not exist.`);"fallback"==s||"none"==s&&(a=!0)}i&&(a=!0,this._plugin=i)}}if(!a&&null!=i){if("none"!=i){const e=t.find((e=>e.name==i));if(!e)throw new Error(`The plugin "${i}" does not exist.`);this._plugin=e}a=!0}a||(this._plugin=getBestPlugin(t),a=!0),this._manualNeedsPause=!1,this._plugin&&this._plugin.manualNeedsPause&&(this._manualNeedsPause=!0),this._manualNeedsMute=!1,this._plugin&&this._plugin.manualNeedsMute&&(this._manualNeedsMute=!0),this._needsPauseState=new PluginBooleanState(!1),this._needsMuteState=new PluginBooleanState(!1),this._canShowFullScreenAdState=new PluginBooleanState(!1),this._canShowRewardedAdState=new PluginBooleanState(!1),this._canShowBannerAdState=new PluginBooleanState(!1);let l=null;if(this._plugin)if(this._plugin.initialize){const e=this._plugin.initialize,t=this._plugin.manualNeedsPause,i=this._plugin.manualNeedsMute,n=this._plugin.name;let r=!1,s=!1;const a=this._plugin.showFullScreenAd,c=this._plugin.showRewardedAd,h=this._plugin.showBannerAd;l=(async()=>{try{await e({useTestAds:o,setNeedsPause:e=>{if(!t)throw new Error("Plugin is not allowed to modify needsPause because 'manualNeedsPause' is not set.");this._needsPauseState.setValue(e)},setNeedsMute:e=>{if(!i)throw new Error("Plugin is not allowed to modify needsMute because 'manualNeedsMute' is not set.");this._needsMuteState.setValue(e)},setCanShowFullScreenAd:e=>{r=!0,this._canShowFullScreenAdState.setValue(e)},setCanShowRewardedAd:e=>{s=!0,this._canShowRewardedAdState.setValue(e)},loadScriptTag(e){const t=document.createElement("script");return t.src=e,document.body.appendChild(t),new Promise(((e,i)=>{t.addEventListener("load",(()=>{e()})),t.addEventListener("error",(e=>{i(e.error)}))}))}})}catch(e){console.warn(`The "${n}" AdLad plugin failed to initialize`,e)}!r&&a&&this._canShowFullScreenAdState.setValue(!0),!s&&c&&this._canShowRewardedAdState.setValue(!0),h&&this._canShowBannerAdState.setValue(!0)})()}else this._plugin.showFullScreenAd&&this._canShowFullScreenAdState.setValue(!0),this._plugin.showRewardedAd&&this._canShowRewardedAdState.setValue(!0);this._pluginInitializePromise=l,this._isShowingAd=!1,this._loadingState=new DeveloperBooleanState({defaultState:!0,defaultPluginState:!1,pluginInitializePromise:this._pluginInitializePromise,trueCall:()=>{if(this._plugin&&this._plugin.loadStart)return this._plugin.loadStart()},falseCall:()=>{if(this._plugin&&this._plugin.loadStop)return this._plugin.loadStop()},pluginName:this._plugin?.name||"",stateName:"loading"}),this._gameplayStartState=new DeveloperBooleanState({pluginInitializePromise:this._pluginInitializePromise,trueCall:()=>{if(this._plugin&&this._plugin.gameplayStart)return this._plugin.gameplayStart()},falseCall:()=>{if(this._plugin&&this._plugin.gameplayStop)return this._plugin.gameplayStop()},pluginName:this._plugin?.name||"",stateName:"gameplay start/stop"}),this._lastGameplayStartCall=!1}get activePlugin(){return this._plugin?this._plugin.name:null}async _updateGameplayStartState(){this._gameplayStartState.setState(this._lastGameplayStartCall&&!this._isShowingAd),await this._gameplayStartState.waitForEmptyQueue()}gameplayStart(){this._lastGameplayStartCall=!0,this._updateGameplayStartState()}gameplayStop(){this._lastGameplayStartCall=!1,this._updateGameplayStartState()}loadStart(){this._loadingState.setState(!0)}loadStop(){this._loadingState.setState(!1)}get needsPause(){return this._needsPauseState.value}get needsMute(){return this._needsMuteState.value}onNeedsPauseChange(e){this._needsPauseState.onChange(e)}removeOnNeedsPauseChange(e){this._needsPauseState.removeOnChange(e)}onNeedsMuteChange(e){this._needsMuteState.onChange(e)}removeOnNeedsMuteChange(e){this._needsMuteState.removeOnChange(e)}async _showPluginFullScreenAd(e){if(this._isShowingAd)return{didShowAd:!1,errorReason:"already-playing"};this._isShowingAd=!0,await this._updateGameplayStartState();try{if(!this._plugin)return{didShowAd:!1,errorReason:"no-active-plugin"};if(!e)return{didShowAd:!1,errorReason:"not-supported"};let t;this._pluginInitializePromise&&await this._pluginInitializePromise,this._manualNeedsPause||this._needsPauseState.setValue(!0),this._manualNeedsMute||this._needsMuteState.setValue(!0);try{t=await e()}catch(e){console.error(`An error occurred while trying to display an ad from the "${this._plugin.name}" plugin:`,e)}return t?sanitizeFullScreenAdResult(t):{didShowAd:!1,errorReason:"unknown"}}finally{this._isShowingAd=!1,this._manualNeedsMute||this._needsMuteState.setValue(!1),this._manualNeedsPause||this._needsPauseState.setValue(!1),this._updateGameplayStartState()}}get canShowFullScreenAd(){return this._canShowFullScreenAdState.value}onCanShowFullScreenAdChange(e){this._canShowFullScreenAdState.onChange(e)}removeOnCanShowFullScreenAdChange(e){this._canShowFullScreenAdState.removeOnChange(e)}async showFullScreenAd(){let e;return this._plugin&&(e=this._plugin.showFullScreenAd),await this._showPluginFullScreenAd(e)}get canShowRewardedAd(){return this._canShowRewardedAdState.value}onCanShowRewardedAdChange(e){this._canShowRewardedAdState.onChange(e)}removeOnCanShowRewardedAdChange(e){this._canShowRewardedAdState.removeOnChange(e)}async showRewardedAd(){let e;return this._plugin&&(e=this._plugin.showRewardedAd),await this._showPluginFullScreenAd(e)}get canShowBannerAd(){return this._canShowBannerAdState.value}onCanShowBannerAdChange(e){this._canShowBannerAdState.onChange(e)}removeOnCanShowBannerAdChange(e){this._canShowBannerAdState.removeOnChange(e)}async showBannerAd(e,t={}){if("string"==typeof e){const t=document.getElementById(e);if(!t)throw new Error(`Element with id "${e}" was not found.`);e=t}if(!this._plugin||!this.activePlugin||!this._plugin.showBannerAd)return;this._pluginInitializePromise&&await this._pluginInitializePromise;const i=e.getBoundingClientRect(),n=document.createElement("div");e.appendChild(n),n.id=generateUuid(),n.style.width="100%",n.style.height="100%";const r=(t.pluginOptions||{})[this.activePlugin];await this._plugin.showBannerAd({el:n,id:n.id,width:i.width,height:i.height},r)}async destroyBannerAd(e,t={}){if("string"==typeof e){const t=document.getElementById(e);if(!t)throw new Error(`Element with id "${e}" was not found.`);e=t}if(!this._plugin||!this.activePlugin||!this._plugin.destroyBannerAd)return;this._pluginInitializePromise&&await this._pluginInitializePromise;const i=e.children[0];if(!(i instanceof HTMLElement))return;const n=(t.pluginOptions||{})[this.activePlugin];await this._plugin.destroyBannerAd({el:i,id:i.id},n),e.removeChild(i)}async customRequest(e,...t){if(this.activePlugin)return await this.customRequestSpecific(this.activePlugin,e,...t)}async customRequestSpecific(e,t,...i){if(e!=this.activePlugin||!this._plugin||!this._plugin.customRequests)return;this._pluginInitializePromise&&await this._pluginInitializePromise;const n=this._plugin.customRequests[t];return n?n(...i):void 0}}function pokiPlugin(){let e,t=!1,i=!1;return{name:"poki",async initialize(i){if(t)throw new Error("Poki plugin is being initialized more than once");t=!0,e=i,await i.loadScriptTag("patch/poki-sdk.js"),await PokiSDK.init()},manualNeedsMute:!0,async loadStop(){i||(i=!0,PokiSDK.gameLoadingFinished())},async gameplayStart(){PokiSDK.gameplayStart()},async gameplayStop(){PokiSDK.gameplayStop()},async showFullScreenAd(){let t=!1,i=null;try{await PokiSDK.commercialBreak((()=>{t=!0,e.setNeedsMute(!0)}))}catch(e){console.warn("PokiSDK commercialBreak call was rejected",e),t=!1,i="unknown"}finally{e.setNeedsMute(!1)}return t||i||(i="no-ad-available"),{didShowAd:t,errorReason:i}},async showRewardedAd(){let t=!1,i=null;try{t=await PokiSDK.rewardedBreak((()=>{e.setNeedsMute(!0)}))}catch(e){console.warn("PokiSDK rewardedBreak call was rejected",e),t=!1,i="unknown"}finally{e.setNeedsMute(!1)}return{didShowAd:t,errorReason:i}},showBannerAd(e){const t=[{w:728,h:90},{w:300,h:250},{w:970,h:250},{w:160,h:600},{w:320,h:50}];let i=null,n=0;for(const r of t){if(r.w>e.width)continue;if(r.h>e.height)continue;const t=r.w*r.h;t>n&&(n=t,i=r)}if(!i)return;const r=i.w+"x"+i.h;PokiSDK.displayAd(e.el,r)},destroyBannerAd(e){PokiSDK.destroyAd(e.el)},customRequests:{async getShareableUrl(...e){const t=new URLSearchParams(...e),i={};for(const[e,n]of t.entries())i[e]=n;return await PokiSDK.shareableURL(i)},getUrlParam:e=>PokiSDK.getURLParam(e)}}}class Ads{constructor(){this.prevVisibleBanners=new Set;const e=[];e.push(pokiPlugin());const t={pluginSelectQueryStringKey:"ads",plugins:e,useTestAds:!1};if(this.adLad=new AdLad(t),this.adLad.onNeedsMuteChange((e=>{main.sfx.setMutedAds(e)})),this.adLad.onNeedsPauseChange((()=>{main.game.updateMyPlayerPaused()})),"crazygames"==this.adLad.activePlugin){const e=parseSearch();e.room&&(window.location.hash=e.room)}else"poki"==this.adLad.activePlugin&&(async()=>{const e=await this.adLad.customRequestSpecific("poki","getUrlParam","room");e&&(window.location.hash=e)})();ResizeHandler.addListener((e=>{this.updateBannerVisibilities()}))}updateBannerVisibilities(){const e=[];if(main.game.gameOverScreenVisible)GameOverScreen.testBannerAdVisible()&&e.push({el:GameOverScreen.adEl,ids:"ducklings-io_300x250"});else if(main.mainMenu.visible){const t=[{el:main.mainMenu.leftAdBox,ids:{"300x250":"ducklings-io_300x250_2","300x600":"ducklings-io_multisize"}},{el:main.mainMenu.smallAdBox,ids:"ducklings-io_300x250_2"}];for(const i of t)"none"!=window.getComputedStyle(i.el).display&&e.push(i)}const t=new Set;for(const i of e){let e=!1;for(const t of this.prevVisibleBanners)if(this.isSameAdElementData(i,t)){e=!0;break}e||(this.prevVisibleBanners.add(i),t.add(i))}for(const t of this.prevVisibleBanners){let i=!1;for(const n of e)if(this.isSameAdElementData(t,n)){i=!0;break}i||(this.prevVisibleBanners.delete(t),this.adLad.destroyBannerAd(t.el))}for(const e of t)this.adLad.showBannerAd(e.el,{pluginOptions:{adinplay:{ids:e.ids}}})}isSameAdElementData(e,t){if(e.el!=t.el)return!1;if("string"==typeof e.ids&&"string"==typeof t.ids)return e.ids==t.ids;if("string"!=typeof e.ids&&"string"!=typeof t.ids){for(const[i,n]of Object.entries(e.ids))if(t.ids[i]!=n)return!1;for(const[i,n]of Object.entries(t.ids))if(e.ids[i]!=n)return!1;return!0}return!1}}class ServiceWorkerThings{constructor(){this.registration=null,this.lastMessageWithResponseId=0,this.installationFailed=!1,this.didCacheWarning=!1,this.updateMessage=null,this.updateMessageShowTime=0,this.hideUpdateMessageTimeout=new Timeout((e=>{this.updateMessage&&(this.updateMessage.hide(),this.updateMessage=null)}),3e3)}static get supported(){return"serviceWorker"in window.navigator&&!this.installationFailed&&!CORDOVA&&!main.debugEnv&&!1}async init(){if(ServiceWorkerThings.supported){try{this.registration=await navigator.serviceWorker.register("sw.js")}catch(e){this.installationFailed=!0}this.registration&&(this.registration.onupdatefound=e=>{if(null!=this.registration.active){let e=this.registration.installing;e.onstatechange=t=>{"installed"==e.state&&(console.log("new serviceWorker installed, refresh the page to load the updated content"),this.showUpdateMessage())}}})}}showUpdateMessage(){if(this.updateMessage)return;this.updateMessageShowTime=main.now;const e=main.input.getClickActionText();this.updateMessage=main.toasts.showMessage(`New version available, ${e} to reload`,{autoHideSeconds:-1,onClick:e=>{window.location.reload()}})}hideUpdateMessage(){main.now-this.updateMessageShowTime<2e3?this.hideUpdateMessageTimeout.start():this.hideUpdateMessageTimeout.execute()}async openCache(){if("undefined"==typeof caches)return null;try{return await caches.open("mainCacheV"+VERSION_TIMESTAMP)}catch(e){return this.didCacheWarning||(this.didCacheWarning=!0,console.warn("unable to open cache!",e)),null}}async storeCache(e,t){if(CORDOVA)return;"Request"!=e.constructor.name&&(e=new Request(e)),"Response"!=t.constructor.name&&(t=new Response(t));let i=await this.openCache();i&&i.put(e,t)}async hasCachedUrl(e){let t=await this.openCache();if(!t)return!1;let i=new Request(e);return!!await t.match(i,{ignoreSearch:!0})}async storeCacheUrls(e){if(CORDOVA)return;let t=[];for(const i of e)await this.hasCachedUrl(i)||t.push(i);let i=await this.openCache();i&&await i.addAll(t.map((e=>new Request(e+"?v="+VERSION_TIMESTAMP))))}}class Main{constructor(){this.search=parseSearch(),this.game=new Game,this.cam=new CameraController,this.renderer=new Renderer,this.networkManager=new NetworkManager,this.input=new InputManager,this.physics=new Physics,this.assets=new AssetsManager,this.assetCache=new AssetCache,this.pauseButton=new PauseButton,this.cornerScore=new CornerScoreUI,this.sfx=new SfxManager,this.particles=new ParticleManager,this.mainMenu=new MainMenu,this.toasts=new ToastMessageManager,this.hats=new HatManager,this.ads=new Ads,this.serviceWorker=new ServiceWorkerThings,this.boundLoop=this.loop.bind(this),this.prevNow=0,this.now=0,this.dt=0,this.unclampedDt=0,this.debugEnv=!1,"000"==VERSION_TIMESTAMP?(this.debugEnv=!0,this.env="local",(window.location.hostname.includes("ducklings")||CORDOVA)&&(this.env="dev")):CORDOVA?this.env="production":window.location.hostname.includes("staging")||!window.location.hostname.includes("ducklings")?this.env="staging":this.env="production",this.frameCount=0,this.frameCap=1,window.logScoreUrl=async e=>{const t=await this.cornerScore.getCurrentObfuscatedScoreUrl();console.log(t)}}init(){IndexedDbUtil.init(),ResizeHandler.init(),this.game.init(),this.cam.init(),this.renderer.init(),this.networkManager.init(),this.input.init(),this.assets.init(),this.cornerScore.init(),this.sfx.init(),this.mainMenu.init(),this.hats.init(),this.serviceWorker.init(),this.loop(),window.addEventListener("dblclick",(e=>{if(!this.mainMenu.visible)return;let t=e.target;for(;t;){if(t.classList.contains("preventFullScreenDblClick"))return;t=t.parentElement}}));let e=lsGet("localStorage");void 0===e||"auto"==e||isNaN(parseInt(e))?this.frameCap=2:this.frameCap=parseInt(e)}loop(){if(this.frameCount++,this.frameCount%this.frameCap==0){let e=performance.now();this.prevNow<=0&&(this.prevNow=e);const t=e-this.prevNow;this.unclampedDt=t;let i=Math.min(t,50);this.now=e,this.dt=i,this.prevNow=e,this.dt16=this.dt/16.6666,this.game.loop(e,i),this.cam.loop(e,i),this.input.loop(e,i),this.physics.loop(e,i),DebugLine.loop(),this.renderer.loop(e,i),this.networkManager.loop(e,i),this.cornerScore.loop(e,i),this.sfx.loop(e,i),this.mainMenu.loop(e,i),this.particles.loop(e,i)}window.requestAnimationFrame(this.boundLoop)}async toggleFullscreen(){if(document.fullscreenElement)document.exitFullscreen();else try{document.body.requestFullscreen?await document.body.requestFullscreen():document.body.webkitRequestFullscreen&&await document.body.webkitRequestFullscreen()}catch(e){console.log("requestFullscreen failed",e)}}}window.CORDOVA=!!window.cordova,globalThis["'poki'"]="none";let main=new Main;"000"==VERSION_TIMESTAMP&&(window.main=main,window.THREE=THREE$1);let relativeTimeStr="";if("000"!=VERSION_TIMESTAMP&&window.Intl&&Intl.RelativeTimeFormat){let t=new Intl.RelativeTimeFormat,i=Date.now()/1e3-VERSION_TIMESTAMP;relativeTimeStr=i<60?t.format(-Math.floor(i),"second"):i<3600?t.format(-Math.floor(i/60),"minute"):i<86400?t.format(-Math.floor(i/60/60),"hour"):i<31536e3?t.format(-Math.floor(i/60/60/24),"day"):t.format(-Math.floor(i/60/60/24/365),"year"),relativeTimeStr=" ("+relativeTimeStr+")"}console.log("loading ducklings v"+VERSION_TIMESTAMP+relativeTimeStr);var deviceReady=!1,fontReady=!0;let didCallReady=!1,didHideSplashscreen=!1;if(CORDOVA){function waitForFontLoad(){document.fonts&&document.fonts.check&&!document.fonts.check("1em Fredoka One")?window.setTimeout(waitForFontLoad,16):window.setTimeout((e=>{fontReady=!0,testReady()}),100)}document.addEventListener("deviceready",(()=>{deviceReady=!0,testReady()})),fontReady=!1,waitForFontLoad()}else deviceReady=!0,testReady();function testReady(){"complete"==document.readyState&&deviceReady&&!didCallReady&&(didCallReady=!0,main.init()),CORDOVA&&didCallReady&&fontReady&&!didHideSplashscreen&&(didHideSplashscreen=!0,navigator.splashscreen.hide())}window.addEventListener("load",(e=>{testReady()}));export{main as default};
